{"version":3,"sources":["webpack:///js/login/index.js","webpack:///./views/login/index.js","webpack:///./views/common/dialog/index.js","webpack:///./views/common/parsley/index.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","$","document","ready","setTimeout","slideToggle","parsley","on","length","call","38","46","jQuery","_typeof","Symbol","iterator","obj","constructor","prototype","require","id","mod","__modules__","define","path","fn","Popup","this","destroyed","__popup","css","display","position","outline","attr","html","innerHTML","appendTo","__backdrop","__mask","opacity","background","node","backdrop","_count","_isIE6","style","_isFixed","extend","fixed","open","returnValue","autofocus","align","className","show","anchor","popup","__activeElement","__getActive","follow","__ready","addClass","modal","window","proxy","reset","backdropCss","left","top","width","height","overflow","userSelect","zIndex","tabindex","focus","clone","insertAfter","insertBefore","__dispatchEvent","showModal","apply","arguments","close","result","undefined","hide","removeClass","blur","remove","current","off","i","elem","__follow","__center","index","contains","find","_autofocus","__focus","activeElement","isBlur","addEventListener","type","callback","__getEventListener","push","removeEventListener","listeners","splice","listener","__listener","test","nodeName","e","contentDocument","$window","$document","dl","scrollLeft","dt","scrollTop","ww","wh","ow","oh","Math","max","parseInt","$elem","parentNode","__followSkin","o","offset","that","winWidth","winHeight","docLeft","docTop","popupWidth","popupHeight","outerWidth","outerHeight","__offset","x","y","minLeft","minTop","maxLeft","maxTop","split","reverse","bottom","right","name","temp","center","range","each","val","join","isNode","pageX","pageY","target","ownerDocument","defaultView","parentWindow","frameElement","$ownerDocument","frameOffset","frameLeft","frameTop","backdropBackground","backdropOpacity","content","title","statusbar","button","ok","cancel","okValue","cancelValue","cancelDisplay","padding","skin","quickClose","defaults","_expando","Date","_isMobile","navigator","userAgent","artDialog","options","originalOptions","nodeType","original","api","get","isArray","value","list","create","$popup","$backdrop","_popup","aria-labelledby","_$","aria-describedby","event","_trigger","preventDefault","animate","_esc","rinput","isTop","keyCode","oncreate","$content","empty","append","text","args","number","callbacks","disabled","$this","noop","getCurrent","dialog","time","_config","onshow","47","51","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","_toConsumableArray","arr","Array","arr2","from","_slice","slice","factory","adapt","context","parsleyAdaptedCallback","unshift","eventName","lastIndexOf","eventPrefix","substr","InputEvent","_this14","globals","isNativeEvent","evt","originalEvent","isTrusted","fakeInputEvent","trigger","misbehaves","behavesOk","data","selector","install","inputEventPatched","_arr","_i","uninstall","globalID","pastWarnings","ParsleyUtils__ParsleyUtils","$element","namespace","attribute","attributes","regex","RegExp","hasOwnProperty","specified","camelize","deserializeValue","checkAttr","_checkAttr","is","setAttr","setAttribute","dasherize","String","generateID","num","isNaN","Number","parseJSON","str","replace","match","chr","toUpperCase","toLowerCase","warn","_window$console","console","warnOnce","msg","_resetWarnings","trimString","string","namespaceEvents","events","map","difference","array","_","indexOf","all","promises","when","concat","objectCreate","Object","Error","TypeError","_SubmitSelector","ParsleyUtils__default","ParsleyDefaults","inputs","excluded","priorityEnabled","multiple","group","uiEnabled","validationThreshold","triggerAfterFailure","errorClass","successClass","classHandler","ParsleyField","errorsContainer","errorsWrapper","errorTemplate","ParsleyAbstract","__id__","asyncSupport","_pipeAccordingToValidationResult","_this","pipe","r","Deferred","validationResult","reject","resolve","promise","actualizeOptions","domOptions","parent","_resetOptions","initOptions","_listeners","queue","subscribe","listenTo","unsubscribe","unsubscribeTo","extraArg","__class__","_resetUI","fields","destroy","_destroyUI","removeData","asyncIsValid","force","whenValid","_findRelated","requirementConverters","_string","integer","parseFloat","reference","boolean","object","regexp","_regexp","flags","convertArrayRequirement","m","values","convertRequirement","requirementType","converter","convertExtraOptionRequirement","requirementSpec","extraOptionReader","main","extra","key","ParsleyValidator","spec","validate","requirementFirstArg","validateMultiple","validateNumber","validateString","parseRequirements","requirements","isPlainObject","priority","ParsleyValidatorRegistry","validators","catalog","locale","init","typeRegexes","email","digits","alphanum","url","decimalPlaces","addValidator","Parsley","setLocale","addCatalog","messages","set","addMessage","message","addMessages","nameMessageObject","arg1","arg2","_setValidator","updateValidator","removeValidator","validator","getErrorMessage","constraint","typeMessages","formatMessage","defaultMessage","en","parameters","notblank","required","_ref","_ref$step","step","_ref$base","base","nb","decimals","toInt","f","round","pow","","pattern","minlength","requirement","maxlength","min","mincheck","maxcheck","check","equalto","refOrValue","$reference","ParsleyUI","diffResults","newResult","oldResult","deep","added","kept","found","j","assert","removed","Form","_actualizeTriggers","_this2","onSubmitValidate","onSubmitButton","_focusedField","field","noFocus","Field","_reflowUI","_buildUI","_ui","diff","lastValidationResult","_manageStatusClass","_manageErrorsMessages","_failedOnce","getErrorsMessages","errorMessage","_getErrorMessage","addError","_ref2","_ref2$updateClass","updateClass","_addError","_errorClass","updateError","_ref3","_ref3$updateClass","_updateError","removeError","_ref4","_ref4$updateClass","_removeError","hasConstraints","needsValidation","_successClass","_resetClass","errorsMessagesDisabled","_insertErrorWrapper","$errorsWrapper","_ref5","_ref6","customConstraintErrorMessage","$errorClassHandler","_manageClassHandler","errorsWrapperId","validationInformationVisible","$handler","_inputHolder","$errorsContainer","after","_this3","$toBind","_validateIfNeeded","_this4","getValue","debounce","clearTimeout","_debounced","children","ParsleyForm","element","ParsleyForm__statusMapping","pending","resolved","rejected","_this5","$submitSource","_$submitSource","first","prop","whenValidate","state","stopImmediatePropagation","done","_submit","currentTarget","$synthetic","Event","_arguments","_ParsleyUtils__default$all$done$fail$always","_this6","_ref7","submitEvent","_refreshFields","_withoutReactualizingFormOptions","fail","always","isValid","_arguments2","_this7","_ref8","_bindFields","_this8","oldFields","fieldsMappedById","not","fieldInstance","Factory","oldActualizeOptions","ConstraintFactory","parsleyField","isDomConstraint","validatorSpec","_validatorRegistry","_parseRequirements","capitalize","cap","instance","_validator","requirementList","_this9","parsleyFormInstance","constraints","constraintsByName","_bindConstraints","parsley_field__statusMapping","_whenValid$always$done$fail$always","_this10","_ref9","refreshConstraints","_isInGroup","_refreshed","_isRequired","validateIfEmpty","inArray","_arguments3","_this11","_ref10","_ref10$force","groupedConstraints","_getGroupedConstraints","_validateConstraint","_this12","_handleWhitespace","addConstraint","removeConstraint","updateConstraint","_bindHtml5Constraints","trimValue","whitespace","p","sort","a","b","parsley_field","ParsleyMultiple","addElement","$elements","fieldConstraints","has","filter","_init","ParsleyFactory","savedparsleyFormInstance","__version__","bind","isMultiple","handleMultiple","parsleyMultipleInstance","_this13","input","$previouslyRelated","doNotStore","parsleyInstance","ParsleyExtend","vernums","jquery","forEach","version","psly","instances","ParsleyConfig","ParsleyUtils","registry","i18n","method","_window$Parsley","UI","doNotUpdateClass","autoBind","deprecated","listen","unsubscribeAll","emit","_instance","instanceGiven","asyncValidators","default","xhr","status","addAsyncValidator","ajaxOptions","csr","encodeURIComponent","remoteOptions","param","_remoteCache","ajax","handleXhr","then","inputevent","52"],"mappings":"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","file":"js/login/index.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tvar dialog = __webpack_require__(46);\n\tvar parsley = __webpack_require__(51);\n\t\n\t__webpack_require__(28);\n\t__webpack_require__(52);\n\t__webpack_require__(38);\n\t\n\t$(document).ready(function () {\n\t\n\t  //隐藏服务器消息\n\t  setTimeout(function () {\n\t    $('.warning-info').slideToggle();\n\t  }, 3000);\n\t\n\t  //dialog('6666', null, 3000);\n\t\n\t  $('#login-form').parsley().on('field:validated', function () {\n\t    var ok = $('.parsley-error').length === 0;\n\t  }).on('form:submit', function () {\n\t    //return false;\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))\n\n/***/ },\n\n/***/ 38:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 46:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/*! artDialog v6.0.5 | https://github.com/aui/artDialog */!function () {\n\t\n\t  var __modules__ = {};\n\t\n\t  function require(id) {\n\t    var mod = __modules__[id];\n\t    var exports = 'exports';\n\t\n\t    if ((typeof mod === 'undefined' ? 'undefined' : _typeof(mod)) === 'object') {\n\t      return mod;\n\t    }\n\t\n\t    if (!mod[exports]) {\n\t      mod[exports] = {};\n\t      mod[exports] = mod.call(mod[exports], require, mod[exports], mod) || mod[exports];\n\t    }\n\t\n\t    return mod[exports];\n\t  }\n\t\n\t  function define(path, fn) {\n\t    __modules__[path] = fn;\n\t  }\n\t\n\t  define(\"jquery\", function () {\n\t    return jQuery;\n\t  });\n\t\n\t  /*!\n\t   * PopupJS\n\t   * Date: 2014-11-09\n\t   * https://github.com/aui/popupjs\n\t   * (c) 2009-2014 TangBin, http://www.planeArt.cn\n\t   *\n\t   * This is licensed under the GNU LGPL, version 2.1 or later.\n\t   * For details, see: http://www.gnu.org/licenses/lgpl-2.1.html\n\t   */\n\t\n\t  define(\"popup\", function (require) {\n\t\n\t    var $ = require(\"jquery\");\n\t\n\t    var _count = 0;\n\t    var _isIE6 = !('minWidth' in $('html')[0].style);\n\t    var _isFixed = !_isIE6;\n\t\n\t    function Popup() {\n\t\n\t      this.destroyed = false;\n\t\n\t      this.__popup = $('<div />')\n\t      /*使用 <dialog /> 元素可能导致 z-index 永远置顶的问题(chrome)*/\n\t      .css({\n\t        display: 'none',\n\t        position: 'absolute',\n\t        /*\n\t        left: 0,\n\t        top: 0,\n\t        bottom: 'auto',\n\t        right: 'auto',\n\t        margin: 0,\n\t        padding: 0,\n\t        border: '0 none',\n\t        background: 'transparent'\n\t        */\n\t        outline: 0\n\t      }).attr('tabindex', '-1').html(this.innerHTML).appendTo('body');\n\t\n\t      this.__backdrop = this.__mask = $('<div />').css({\n\t        opacity: .7,\n\t        background: '#000'\n\t      });\n\t\n\t      // 使用 HTMLElement 作为外部接口使用，而不是 jquery 对象\n\t      // 统一的接口利于未来 Popup 移植到其他 DOM 库中\n\t      this.node = this.__popup[0];\n\t      this.backdrop = this.__backdrop[0];\n\t\n\t      _count++;\n\t    }\n\t\n\t    $.extend(Popup.prototype, {\n\t\n\t      /**\n\t       * 初始化完毕事件，在 show()、showModal() 执行\n\t       * @name Popup.prototype.onshow\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 关闭事件，在 close() 执行\n\t       * @name Popup.prototype.onclose\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 销毁前事件，在 remove() 前执行\n\t       * @name Popup.prototype.onbeforeremove\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 销毁事件，在 remove() 执行\n\t       * @name Popup.prototype.onremove\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 重置事件，在 reset() 执行\n\t       * @name Popup.prototype.onreset\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 焦点事件，在 foucs() 执行\n\t       * @name Popup.prototype.onfocus\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 失焦事件，在 blur() 执行\n\t       * @name Popup.prototype.onblur\n\t       * @event\n\t       */\n\t\n\t      /** 浮层 DOM 素节点[*] */\n\t      node: null,\n\t\n\t      /** 遮罩 DOM 节点[*] */\n\t      backdrop: null,\n\t\n\t      /** 是否开启固定定位[*] */\n\t      fixed: false,\n\t\n\t      /** 判断对话框是否删除[*] */\n\t      destroyed: true,\n\t\n\t      /** 判断对话框是否显示 */\n\t      open: false,\n\t\n\t      /** close 返回值 */\n\t      returnValue: '',\n\t\n\t      /** 是否自动聚焦 */\n\t      autofocus: true,\n\t\n\t      /** 对齐方式[*] */\n\t      align: 'bottom left',\n\t\n\t      /** 内部的 HTML 字符串 */\n\t      innerHTML: '',\n\t\n\t      /** CSS 类名 */\n\t      className: 'ui-popup',\n\t\n\t      /**\n\t       * 显示浮层\n\t       * @param   {HTMLElement, Event}  指定位置（可选）\n\t       */\n\t      show: function show(anchor) {\n\t\n\t        if (this.destroyed) {\n\t          return this;\n\t        }\n\t\n\t        var that = this;\n\t        var popup = this.__popup;\n\t        var backdrop = this.__backdrop;\n\t\n\t        this.__activeElement = this.__getActive();\n\t\n\t        this.open = true;\n\t        this.follow = anchor || this.follow;\n\t\n\t        // 初始化 show 方法\n\t        if (!this.__ready) {\n\t\n\t          popup.addClass(this.className).attr('role', this.modal ? 'alertdialog' : 'dialog').css('position', this.fixed ? 'fixed' : 'absolute');\n\t\n\t          if (!_isIE6) {\n\t            $(window).on('resize', $.proxy(this.reset, this));\n\t          }\n\t\n\t          // 模态浮层的遮罩\n\t          if (this.modal) {\n\t            var backdropCss = {\n\t              position: 'fixed',\n\t              left: 0,\n\t              top: 0,\n\t              width: '100%',\n\t              height: '100%',\n\t              overflow: 'hidden',\n\t              userSelect: 'none',\n\t              zIndex: this.zIndex || Popup.zIndex\n\t            };\n\t\n\t            popup.addClass(this.className + '-modal');\n\t\n\t            if (!_isFixed) {\n\t              $.extend(backdropCss, {\n\t                position: 'absolute',\n\t                width: $(window).width() + 'px',\n\t                height: $(document).height() + 'px'\n\t              });\n\t            }\n\t\n\t            backdrop.css(backdropCss).attr({\n\t              tabindex: '0'\n\t            }).on('focus', $.proxy(this.focus, this));\n\t\n\t            // 锁定 tab 的焦点操作\n\t            this.__mask = backdrop.clone(true).attr('style', '').insertAfter(popup);\n\t\n\t            backdrop.addClass(this.className + '-backdrop').insertBefore(popup);\n\t\n\t            this.__ready = true;\n\t          }\n\t\n\t          if (!popup.html()) {\n\t            popup.html(this.innerHTML);\n\t          }\n\t        }\n\t\n\t        popup.addClass(this.className + '-show').show();\n\t\n\t        backdrop.show();\n\t\n\t        this.reset().focus();\n\t        this.__dispatchEvent('show');\n\t\n\t        return this;\n\t      },\n\t\n\t      /** 显示模态浮层。参数参见 show() */\n\t      showModal: function showModal() {\n\t        this.modal = true;\n\t        return this.show.apply(this, arguments);\n\t      },\n\t\n\t      /** 关闭浮层 */\n\t      close: function close(result) {\n\t\n\t        if (!this.destroyed && this.open) {\n\t\n\t          if (result !== undefined) {\n\t            this.returnValue = result;\n\t          }\n\t\n\t          this.__popup.hide().removeClass(this.className + '-show');\n\t          this.__backdrop.hide();\n\t          this.open = false;\n\t          this.blur(); // 恢复焦点，照顾键盘操作的用户\n\t          this.__dispatchEvent('close');\n\t        }\n\t\n\t        return this;\n\t      },\n\t\n\t      /** 销毁浮层 */\n\t      remove: function remove() {\n\t\n\t        if (this.destroyed) {\n\t          return this;\n\t        }\n\t\n\t        this.__dispatchEvent('beforeremove');\n\t\n\t        if (Popup.current === this) {\n\t          Popup.current = null;\n\t        }\n\t\n\t        // 从 DOM 中移除节点\n\t        this.__popup.remove();\n\t        this.__backdrop.remove();\n\t        this.__mask.remove();\n\t\n\t        if (!_isIE6) {\n\t          $(window).off('resize', this.reset);\n\t        }\n\t\n\t        this.__dispatchEvent('remove');\n\t\n\t        for (var i in this) {\n\t          delete this[i];\n\t        }\n\t\n\t        return this;\n\t      },\n\t\n\t      /** 重置位置 */\n\t      reset: function reset() {\n\t\n\t        var elem = this.follow;\n\t\n\t        if (elem) {\n\t          this.__follow(elem);\n\t        } else {\n\t          this.__center();\n\t        }\n\t\n\t        this.__dispatchEvent('reset');\n\t\n\t        return this;\n\t      },\n\t\n\t      /** 让浮层获取焦点 */\n\t      focus: function focus() {\n\t\n\t        var node = this.node;\n\t        var popup = this.__popup;\n\t        var current = Popup.current;\n\t        var index = this.zIndex = Popup.zIndex++;\n\t\n\t        if (current && current !== this) {\n\t          current.blur(false);\n\t        }\n\t\n\t        // 检查焦点是否在浮层里面\n\t        if (!$.contains(node, this.__getActive())) {\n\t          var autofocus = popup.find('[autofocus]')[0];\n\t\n\t          if (!this._autofocus && autofocus) {\n\t            this._autofocus = true;\n\t          } else {\n\t            autofocus = node;\n\t          }\n\t\n\t          this.__focus(autofocus);\n\t        }\n\t\n\t        // 设置叠加高度\n\t        popup.css('zIndex', index);\n\t        //this.__backdrop.css('zIndex', index);\n\t\n\t        Popup.current = this;\n\t        popup.addClass(this.className + '-focus');\n\t\n\t        this.__dispatchEvent('focus');\n\t\n\t        return this;\n\t      },\n\t\n\t      /** 让浮层失去焦点。将焦点退还给之前的元素，照顾视力障碍用户 */\n\t      blur: function blur() {\n\t\n\t        var activeElement = this.__activeElement;\n\t        var isBlur = arguments[0];\n\t\n\t        if (isBlur !== false) {\n\t          this.__focus(activeElement);\n\t        }\n\t\n\t        this._autofocus = false;\n\t        this.__popup.removeClass(this.className + '-focus');\n\t        this.__dispatchEvent('blur');\n\t\n\t        return this;\n\t      },\n\t\n\t      /**\n\t       * 添加事件\n\t       * @param   {String}    事件类型\n\t       * @param   {Function}  监听函数\n\t       */\n\t      addEventListener: function addEventListener(type, callback) {\n\t        this.__getEventListener(type).push(callback);\n\t        return this;\n\t      },\n\t\n\t      /**\n\t       * 删除事件\n\t       * @param   {String}    事件类型\n\t       * @param   {Function}  监听函数\n\t       */\n\t      removeEventListener: function removeEventListener(type, callback) {\n\t        var listeners = this.__getEventListener(type);\n\t        for (var i = 0; i < listeners.length; i++) {\n\t          if (callback === listeners[i]) {\n\t            listeners.splice(i--, 1);\n\t          }\n\t        }\n\t        return this;\n\t      },\n\t\n\t      // 获取事件缓存\n\t      __getEventListener: function __getEventListener(type) {\n\t        var listener = this.__listener;\n\t        if (!listener) {\n\t          listener = this.__listener = {};\n\t        }\n\t        if (!listener[type]) {\n\t          listener[type] = [];\n\t        }\n\t        return listener[type];\n\t      },\n\t\n\t      // 派发事件\n\t      __dispatchEvent: function __dispatchEvent(type) {\n\t        var listeners = this.__getEventListener(type);\n\t\n\t        if (this['on' + type]) {\n\t          this['on' + type]();\n\t        }\n\t\n\t        for (var i = 0; i < listeners.length; i++) {\n\t          listeners[i].call(this);\n\t        }\n\t      },\n\t\n\t      // 对元素安全聚焦\n\t      __focus: function __focus(elem) {\n\t        // 防止 iframe 跨域无权限报错\n\t        // 防止 IE 不可见元素报错\n\t        try {\n\t          // ie11 bug: iframe 页面点击会跳到顶部\n\t          if (this.autofocus && !/^iframe$/i.test(elem.nodeName)) {\n\t            elem.focus();\n\t          }\n\t        } catch (e) {}\n\t      },\n\t\n\t      // 获取当前焦点的元素\n\t      __getActive: function __getActive() {\n\t        try {\n\t          // try: ie8~9, iframe #26\n\t          var activeElement = document.activeElement;\n\t          var contentDocument = activeElement.contentDocument;\n\t          var elem = contentDocument && contentDocument.activeElement || activeElement;\n\t          return elem;\n\t        } catch (e) {}\n\t      },\n\t\n\t      // 居中浮层\n\t      __center: function __center() {\n\t\n\t        var popup = this.__popup;\n\t        var $window = $(window);\n\t        var $document = $(document);\n\t        var fixed = this.fixed;\n\t        var dl = fixed ? 0 : $document.scrollLeft();\n\t        var dt = fixed ? 0 : $document.scrollTop();\n\t        var ww = $window.width();\n\t        var wh = $window.height();\n\t        var ow = popup.width();\n\t        var oh = popup.height();\n\t        var left = (ww - ow) / 2 + dl;\n\t        var top = (wh - oh) * 382 / 1000 + dt; // 黄金比例\n\t        var style = popup[0].style;\n\t\n\t        style.left = Math.max(parseInt(left), dl) + 'px';\n\t        style.top = Math.max(parseInt(top), dt) + 'px';\n\t      },\n\t\n\t      // 指定位置 @param    {HTMLElement, Event}  anchor\n\t      __follow: function __follow(anchor) {\n\t\n\t        var $elem = anchor.parentNode && $(anchor);\n\t        var popup = this.__popup;\n\t\n\t        if (this.__followSkin) {\n\t          popup.removeClass(this.__followSkin);\n\t        }\n\t\n\t        // 隐藏元素不可用\n\t        if ($elem) {\n\t          var o = $elem.offset();\n\t          if (o.left * o.top < 0) {\n\t            return this.__center();\n\t          }\n\t        }\n\t\n\t        var that = this;\n\t        var fixed = this.fixed;\n\t\n\t        var $window = $(window);\n\t        var $document = $(document);\n\t        var winWidth = $window.width();\n\t        var winHeight = $window.height();\n\t        var docLeft = $document.scrollLeft();\n\t        var docTop = $document.scrollTop();\n\t\n\t        var popupWidth = popup.width();\n\t        var popupHeight = popup.height();\n\t        var width = $elem ? $elem.outerWidth() : 0;\n\t        var height = $elem ? $elem.outerHeight() : 0;\n\t        var offset = this.__offset(anchor);\n\t        var x = offset.left;\n\t        var y = offset.top;\n\t        var left = fixed ? x - docLeft : x;\n\t        var top = fixed ? y - docTop : y;\n\t\n\t        var minLeft = fixed ? 0 : docLeft;\n\t        var minTop = fixed ? 0 : docTop;\n\t        var maxLeft = minLeft + winWidth - popupWidth;\n\t        var maxTop = minTop + winHeight - popupHeight;\n\t\n\t        var css = {};\n\t        var align = this.align.split(' ');\n\t        var className = this.className + '-';\n\t        var reverse = {\n\t          top: 'bottom',\n\t          bottom: 'top',\n\t          left: 'right',\n\t          right: 'left'\n\t        };\n\t        var name = {\n\t          top: 'top',\n\t          bottom: 'top',\n\t          left: 'left',\n\t          right: 'left'\n\t        };\n\t\n\t        var temp = [{\n\t          top: top - popupHeight,\n\t          bottom: top + height,\n\t          left: left - popupWidth,\n\t          right: left + width\n\t        }, {\n\t          top: top,\n\t          bottom: top - popupHeight + height,\n\t          left: left,\n\t          right: left - popupWidth + width\n\t        }];\n\t\n\t        var center = {\n\t          left: left + width / 2 - popupWidth / 2,\n\t          top: top + height / 2 - popupHeight / 2\n\t        };\n\t\n\t        var range = {\n\t          left: [minLeft, maxLeft],\n\t          top: [minTop, maxTop]\n\t        };\n\t\n\t        // 超出可视区域重新适应位置\n\t        $.each(align, function (i, val) {\n\t\n\t          // 超出右或下边界：使用左或者上边对齐\n\t          if (temp[i][val] > range[name[val]][1]) {\n\t            val = align[i] = reverse[val];\n\t          }\n\t\n\t          // 超出左或右边界：使用右或者下边对齐\n\t          if (temp[i][val] < range[name[val]][0]) {\n\t            align[i] = reverse[val];\n\t          }\n\t        });\n\t\n\t        // 一个参数的情况\n\t        if (!align[1]) {\n\t          name[align[1]] = name[align[0]] === 'left' ? 'top' : 'left';\n\t          temp[1][align[1]] = center[name[align[1]]];\n\t        }\n\t\n\t        //添加follow的css, 为了给css使用\n\t        className += align.join('-') + ' ' + this.className + '-follow';\n\t\n\t        that.__followSkin = className;\n\t\n\t        if ($elem) {\n\t          popup.addClass(className);\n\t        }\n\t\n\t        css[name[align[0]]] = parseInt(temp[0][align[0]]);\n\t        css[name[align[1]]] = parseInt(temp[1][align[1]]);\n\t        popup.css(css);\n\t      },\n\t\n\t      // 获取元素相对于页面的位置（包括iframe内的元素）\n\t      // 暂时不支持两层以上的 iframe 套嵌\n\t      __offset: function __offset(anchor) {\n\t\n\t        var isNode = anchor.parentNode;\n\t        var offset = isNode ? $(anchor).offset() : {\n\t          left: anchor.pageX,\n\t          top: anchor.pageY\n\t        };\n\t\n\t        anchor = isNode ? anchor : anchor.target;\n\t        var ownerDocument = anchor.ownerDocument;\n\t        var defaultView = ownerDocument.defaultView || ownerDocument.parentWindow;\n\t\n\t        if (defaultView == window) {\n\t          // IE <= 8 只能使用两个等于号\n\t          return offset;\n\t        }\n\t\n\t        // {Element: Ifarme}\n\t        var frameElement = defaultView.frameElement;\n\t        var $ownerDocument = $(ownerDocument);\n\t        var docLeft = $ownerDocument.scrollLeft();\n\t        var docTop = $ownerDocument.scrollTop();\n\t        var frameOffset = $(frameElement).offset();\n\t        var frameLeft = frameOffset.left;\n\t        var frameTop = frameOffset.top;\n\t\n\t        return {\n\t          left: offset.left + frameLeft - docLeft,\n\t          top: offset.top + frameTop - docTop\n\t        };\n\t      }\n\t\n\t    });\n\t\n\t    /** 当前叠加高度 */\n\t    Popup.zIndex = 1024;\n\t\n\t    /** 顶层浮层的实例 */\n\t    Popup.current = null;\n\t\n\t    return Popup;\n\t  });\n\t\n\t  // artDialog - 默认配置\n\t  define(\"dialog-config\", {\n\t\n\t    /* -----已注释的配置继承自 popup.js，仍可以再这里重新定义它----- */\n\t\n\t    // 对齐方式\n\t    //align: 'bottom left',\n\t\n\t    // 是否固定定位\n\t    //fixed: false,\n\t\n\t    // 对话框叠加高度值(重要：此值不能超过浏览器最大限制)\n\t    //zIndex: 1024,\n\t\n\t    // 设置遮罩背景颜色\n\t    backdropBackground: '#000',\n\t\n\t    // 设置遮罩透明度\n\t    backdropOpacity: 0.7,\n\t\n\t    // 消息内容\n\t    content: '<span class=\"ui-dialog-loading\">Loading..</span>',\n\t\n\t    // 标题\n\t    title: '',\n\t\n\t    // 对话框状态栏区域 HTML 代码\n\t    statusbar: '',\n\t\n\t    // 自定义按钮\n\t    button: null,\n\t\n\t    // 确定按钮回调函数\n\t    ok: null,\n\t\n\t    // 取消按钮回调函数\n\t    cancel: null,\n\t\n\t    // 确定按钮文本\n\t    okValue: 'ok',\n\t\n\t    // 取消按钮文本\n\t    cancelValue: 'cancel',\n\t\n\t    cancelDisplay: true,\n\t\n\t    // 内容宽度\n\t    width: '',\n\t\n\t    // 内容高度\n\t    height: '',\n\t\n\t    // 内容与边界填充距离\n\t    padding: '',\n\t\n\t    // 对话框自定义 className\n\t    skin: '',\n\t\n\t    // 是否支持快捷关闭（点击遮罩层自动关闭）\n\t    quickClose: false,\n\t\n\t    // css 文件路径，留空则不会使用 js 自动加载样式\n\t    // 注意：css 只允许加载一个\n\t    //cssUri: require('./index.css'),\n\t\n\t    // 模板（使用 table 解决 IE7 宽度自适应的 BUG）\n\t    // js 使用 i=\"***\" 属性识别结构，其余的均可自定义\n\t    innerHTML: '<div i=\"dialog\" class=\"ui-dialog\">' + '<div class=\"ui-dialog-arrow-a\"></div>' + '<div class=\"ui-dialog-arrow-b\"></div>' + '<table class=\"ui-dialog-grid\">' + '<tr>' + '<td i=\"header\" class=\"ui-dialog-header\">' + '<button i=\"close\" class=\"ui-dialog-close\">&#215;</button>' + '<div i=\"title\" class=\"ui-dialog-title\"></div>' + '</td>' + '</tr>' + '<tr>' + '<td i=\"body\" class=\"ui-dialog-body\">' + '<div i=\"content\" class=\"ui-dialog-content\"></div>' + '</td>' + '</tr>' + '<tr>' + '<td i=\"footer\" class=\"ui-dialog-footer\">' + '<div i=\"statusbar\" class=\"ui-dialog-statusbar\"></div>' + '<div i=\"button\" class=\"ui-dialog-button\"></div>' + '</td>' + '</tr>' + '</table>' + '</div>'\n\t\n\t  });\n\t\n\t  /*!\n\t   * artDialog\n\t   * Date: 2014-11-09\n\t   * https://github.com/aui/artDialog\n\t   * (c) 2009-2014 TangBin, http://www.planeArt.cn\n\t   *\n\t   * This is licensed under the GNU LGPL, version 2.1 or later.\n\t   * For details, see: http://www.gnu.org/licenses/lgpl-2.1.html\n\t   */\n\t  define(\"dialog\", function (require) {\n\t\n\t    var $ = require(\"jquery\");\n\t    var Popup = require(\"popup\");\n\t    var defaults = require(\"dialog-config\");\n\t    //var css = defaults.cssUri;\n\t\n\t\n\t    // css loader: RequireJS & SeaJS\n\t    // if (css) {\n\t    //     var fn = require[require.toUrl ? 'toUrl' : 'resolve'];\n\t    //     if (fn) {\n\t    //         css = fn(css);\n\t    //         css = '<link rel=\"stylesheet\" href=\"' + css + '\" />';\n\t    //         if ($('base')[0]) {\n\t    //             $('base').before(css);\n\t    //         } else {\n\t    //             $('head').append(css);\n\t    //         }\n\t    //     }\n\t    // }\n\t\n\t\n\t    var _count = 0;\n\t    var _expando = new Date() - 0; // Date.now()\n\t    var _isIE6 = !('minWidth' in $('html')[0].style);\n\t    var _isMobile = 'createTouch' in document && !('onmousemove' in document) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\n\t    var _isFixed = !_isIE6 && !_isMobile;\n\t\n\t    var artDialog = function artDialog(options, ok, cancel) {\n\t\n\t      var originalOptions = options = options || {};\n\t\n\t      if (typeof options === 'string' || options.nodeType === 1) {\n\t\n\t        options = {\n\t          content: options,\n\t          fixed: !_isMobile\n\t        };\n\t      }\n\t\n\t      options = $.extend(true, {}, artDialog.defaults, options);\n\t      options.original = originalOptions;\n\t\n\t      var id = options.id = options.id || _expando + _count;\n\t      var api = artDialog.get(id);\n\t\n\t      // 如果存在同名的对话框对象，则直接返回\n\t      if (api) {\n\t        return api.focus();\n\t      }\n\t\n\t      // 目前主流移动设备对fixed支持不好，禁用此特性\n\t      if (!_isFixed) {\n\t        options.fixed = false;\n\t      }\n\t\n\t      // 快捷关闭支持：点击对话框外快速关闭对话框\n\t      if (options.quickClose) {\n\t        options.modal = true;\n\t        options.backdropOpacity = 0;\n\t      }\n\t\n\t      // 按钮组\n\t      if (!$.isArray(options.button)) {\n\t        options.button = [];\n\t      }\n\t\n\t      // 取消按钮\n\t      if (cancel !== undefined) {\n\t        options.cancel = cancel;\n\t      }\n\t\n\t      if (options.cancel) {\n\t        options.button.push({\n\t          id: 'cancel',\n\t          value: options.cancelValue,\n\t          callback: options.cancel,\n\t          display: options.cancelDisplay\n\t        });\n\t      }\n\t\n\t      // 确定按钮\n\t      if (ok !== undefined) {\n\t        options.ok = ok;\n\t      }\n\t\n\t      if (options.ok) {\n\t        options.button.push({\n\t          id: 'ok',\n\t          value: options.okValue,\n\t          callback: options.ok,\n\t          autofocus: true\n\t        });\n\t      }\n\t\n\t      return artDialog.list[id] = new artDialog.create(options);\n\t    };\n\t\n\t    var popup = function popup() {};\n\t    popup.prototype = Popup.prototype;\n\t    var prototype = artDialog.prototype = new popup();\n\t\n\t    artDialog.create = function (options) {\n\t      var that = this;\n\t\n\t      $.extend(this, new Popup());\n\t\n\t      var originalOptions = options.original;\n\t      var $popup = $(this.node).html(options.innerHTML);\n\t      var $backdrop = $(this.backdrop);\n\t\n\t      this.options = options;\n\t      this._popup = $popup;\n\t\n\t      $.each(options, function (name, value) {\n\t        if (typeof that[name] === 'function') {\n\t          that[name](value);\n\t        } else {\n\t          that[name] = value;\n\t        }\n\t      });\n\t\n\t      // 更新 zIndex 全局配置\n\t      if (options.zIndex) {\n\t        Popup.zIndex = options.zIndex;\n\t      }\n\t\n\t      // 设置 ARIA 信息\n\t      $popup.attr({\n\t        'aria-labelledby': this._$('title').attr('id', 'title:' + this.id).attr('id'),\n\t        'aria-describedby': this._$('content').attr('id', 'content:' + this.id).attr('id')\n\t      });\n\t\n\t      // 关闭按钮\n\t      this._$('close').css('display', this.cancel === false ? 'none' : '').attr('title', this.cancelValue).on('click', function (event) {\n\t        that._trigger('cancel');\n\t        event.preventDefault();\n\t      });\n\t\n\t      // 添加视觉参数\n\t      this._$('dialog').addClass(this.skin);\n\t      this._$('body').css('padding', this.padding);\n\t\n\t      // 点击任意空白处关闭对话框\n\t      if (options.quickClose) {\n\t        $backdrop.on('onmousedown' in document ? 'mousedown' : 'click', function () {\n\t          that._trigger('cancel');\n\t          return false; // 阻止抢夺焦点\n\t        });\n\t      }\n\t\n\t      // 遮罩设置\n\t      this.addEventListener('show', function () {\n\t        $backdrop.css({\n\t          opacity: 0,\n\t          background: options.backdropBackground\n\t        }).animate({\n\t          opacity: options.backdropOpacity\n\t        }, 150);\n\t      });\n\t\n\t      // ESC 快捷键关闭对话框\n\t      this._esc = function (event) {\n\t        var target = event.target;\n\t        var nodeName = target.nodeName;\n\t        var rinput = /^input|textarea$/i;\n\t        var isTop = Popup.current === that;\n\t        var keyCode = event.keyCode;\n\t\n\t        // 避免输入状态中 ESC 误操作关闭\n\t        if (!isTop || rinput.test(nodeName) && target.type !== 'button') {\n\t          return;\n\t        }\n\t\n\t        if (keyCode === 27) {\n\t          that._trigger('cancel');\n\t        }\n\t      };\n\t\n\t      $(document).on('keydown', this._esc);\n\t      this.addEventListener('remove', function () {\n\t        $(document).off('keydown', this._esc);\n\t        delete artDialog.list[this.id];\n\t      });\n\t\n\t      _count++;\n\t\n\t      artDialog.oncreate(this);\n\t\n\t      return this;\n\t    };\n\t\n\t    artDialog.create.prototype = prototype;\n\t\n\t    $.extend(prototype, {\n\t\n\t      /**\n\t       * 显示对话框\n\t       * @name artDialog.prototype.show\n\t       * @param   {HTMLElement Object, Event Object}  指定位置（可选）\n\t       */\n\t\n\t      /**\n\t       * 显示对话框（模态）\n\t       * @name artDialog.prototype.showModal\n\t       * @param   {HTMLElement Object, Event Object}  指定位置（可选）\n\t       */\n\t\n\t      /**\n\t       * 关闭对话框\n\t       * @name artDialog.prototype.close\n\t       * @param   {String, Number}    返回值，可被 onclose 事件收取（可选）\n\t       */\n\t\n\t      /**\n\t       * 销毁对话框\n\t       * @name artDialog.prototype.remove\n\t       */\n\t\n\t      /**\n\t       * 重置对话框位置\n\t       * @name artDialog.prototype.reset\n\t       */\n\t\n\t      /**\n\t       * 让对话框聚焦（同时置顶）\n\t       * @name artDialog.prototype.focus\n\t       */\n\t\n\t      /**\n\t       * 让对话框失焦（同时置顶）\n\t       * @name artDialog.prototype.blur\n\t       */\n\t\n\t      /**\n\t       * 添加事件\n\t       * @param   {String}    事件类型\n\t       * @param   {Function}  监听函数\n\t       * @name artDialog.prototype.addEventListener\n\t       */\n\t\n\t      /**\n\t       * 删除事件\n\t       * @param   {String}    事件类型\n\t       * @param   {Function}  监听函数\n\t       * @name artDialog.prototype.removeEventListener\n\t       */\n\t\n\t      /**\n\t       * 对话框显示事件，在 show()、showModal() 执行\n\t       * @name artDialog.prototype.onshow\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 关闭事件，在 close() 执行\n\t       * @name artDialog.prototype.onclose\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 销毁前事件，在 remove() 前执行\n\t       * @name artDialog.prototype.onbeforeremove\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 销毁事件，在 remove() 执行\n\t       * @name artDialog.prototype.onremove\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 重置事件，在 reset() 执行\n\t       * @name artDialog.prototype.onreset\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 焦点事件，在 foucs() 执行\n\t       * @name artDialog.prototype.onfocus\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 失焦事件，在 blur() 执行\n\t       * @name artDialog.prototype.onblur\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 设置内容\n\t       * @param    {String, HTMLElement}   内容\n\t       */\n\t      content: function content(html) {\n\t\n\t        var $content = this._$('content');\n\t\n\t        // HTMLElement\n\t        if ((typeof html === 'undefined' ? 'undefined' : _typeof(html)) === 'object') {\n\t          html = $(html);\n\t          $content.empty('').append(html.show());\n\t          this.addEventListener('beforeremove', function () {\n\t            $('body').append(html.hide());\n\t          });\n\t          // String\n\t        } else {\n\t          $content.html(html);\n\t        }\n\t\n\t        return this.reset();\n\t      },\n\t\n\t      /**\n\t       * 设置标题\n\t       * @param    {String}   标题内容\n\t       */\n\t      title: function title(text) {\n\t        this._$('title').text(text);\n\t        this._$('header')[text ? 'show' : 'hide']();\n\t        return this;\n\t      },\n\t\n\t      /** 设置宽度 */\n\t      width: function width(value) {\n\t        this._$('content').css('width', value);\n\t        return this.reset();\n\t      },\n\t\n\t      /** 设置高度 */\n\t      height: function height(value) {\n\t        this._$('content').css('height', value);\n\t        return this.reset();\n\t      },\n\t\n\t      /**\n\t       * 设置按钮组\n\t       * @param   {Array, String}\n\t       * Options: value, callback, autofocus, disabled\n\t       */\n\t      button: function button(args) {\n\t        args = args || [];\n\t        var that = this;\n\t        var html = '';\n\t        var number = 0;\n\t        this.callbacks = {};\n\t\n\t        if (typeof args === 'string') {\n\t          html = args;\n\t          number++;\n\t        } else {\n\t          $.each(args, function (i, val) {\n\t\n\t            var id = val.id = val.id || val.value;\n\t            var style = '';\n\t            that.callbacks[id] = val.callback;\n\t\n\t            if (val.display === false) {\n\t              style = ' style=\"display:none\"';\n\t            } else {\n\t              number++;\n\t            }\n\t\n\t            html += '<button' + ' type=\"button\"' + ' i-id=\"' + id + '\"' + style + (val.disabled ? ' disabled' : '') + (val.autofocus ? ' autofocus class=\"ui-dialog-autofocus\"' : '') + '>' + val.value + '</button>';\n\t\n\t            that._$('button').on('click', '[i-id=' + id + ']', function (event) {\n\t              var $this = $(this);\n\t              if (!$this.attr('disabled')) {\n\t                // IE BUG\n\t                that._trigger(id);\n\t              }\n\t\n\t              event.preventDefault();\n\t            });\n\t          });\n\t        }\n\t\n\t        this._$('button').html(html);\n\t        this._$('footer')[number ? 'show' : 'hide']();\n\t\n\t        return this;\n\t      },\n\t\n\t      statusbar: function statusbar(html) {\n\t        this._$('statusbar').html(html)[html ? 'show' : 'hide']();\n\t\n\t        return this;\n\t      },\n\t\n\t      _$: function _$(i) {\n\t        return this._popup.find('[i=' + i + ']');\n\t      },\n\t\n\t      // 触发按钮回调函数\n\t      _trigger: function _trigger(id) {\n\t        var fn = this.callbacks[id];\n\t\n\t        return typeof fn !== 'function' || fn.call(this) !== false ? this.close().remove() : this;\n\t      }\n\t\n\t    });\n\t\n\t    artDialog.oncreate = $.noop;\n\t\n\t    /** 获取最顶层的对话框API */\n\t    artDialog.getCurrent = function () {\n\t      return Popup.current;\n\t    };\n\t\n\t    /**\n\t     * 根据 ID 获取某对话框 API\n\t     * @param    {String}    对话框 ID\n\t     * @return   {Object}    对话框 API (实例)\n\t     */\n\t    artDialog.get = function (id) {\n\t      return id === undefined ? artDialog.list : artDialog.list[id];\n\t    };\n\t\n\t    artDialog.list = {};\n\t\n\t    /**\n\t     * 默认配置\n\t     */\n\t    artDialog.defaults = defaults;\n\t\n\t    return artDialog;\n\t  });\n\t\n\t  var dialog = window.dialog = require(\"dialog\");\n\t\n\t  module.exports = function (text, fn, time) {\n\t\n\t    var _config = {\n\t      title: '提示',\n\t      content: text,\n\t      quickClose: true\n\t    };\n\t\n\t    if (fn !== undefined && fn !== null) {\n\t      _config.okValue = '确定';\n\t      _config.cancelValue = '取消';\n\t      _config.ok = function () {\n\t        fn();\n\t      };\n\t      _config.cancel = function () {};\n\t    } else {\n\t      _config.title = null;\n\t    }\n\t\n\t    if (time !== undefined) {\n\t      _config.onshow = function () {\n\t        var that = this;\n\t        setTimeout(function () {\n\t          that.close().remove();\n\t        }, time);\n\t      };\n\t    }\n\t\n\t    dialog(_config).show();\n\t  };\n\t}();\n\t\n\t__webpack_require__(47);\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))\n\n/***/ },\n\n/***/ 47:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 51:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/*!\n\t* Parsley.js\n\t* Version 2.6.2 - built Wed, Jan 4th 2017, 8:58 am\n\t* http://parsleyjs.org\n\t* Guillaume Potier - <guillaume@wisembly.com>\n\t* Marc-Andre Lafortune - <petroselinum@marc-andre.ca>\n\t* MIT Licensed\n\t*/\n\t\n\t// The source code below is generated by babel as\n\t// Parsley is written in ECMAScript 6\n\t//\n\tvar _slice = Array.prototype.slice;\n\t\n\tfunction _toConsumableArray(arr) {\n\t  if (Array.isArray(arr)) {\n\t    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n\t      arr2[i] = arr[i];\n\t    }return arr2;\n\t  } else {\n\t    return Array.from(arr);\n\t  }\n\t}\n\t\n\t(function (global, factory) {\n\t  ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory(__webpack_require__(27)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(27)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : global.parsley = factory(global.jQuery);\n\t})(undefined, function ($) {\n\t  'use strict';\n\t\n\t  var globalID = 1;\n\t  var pastWarnings = {};\n\t\n\t  var ParsleyUtils__ParsleyUtils = {\n\t    // Parsley DOM-API\n\t    // returns object from dom attributes and values\n\t    attr: function attr($element, namespace, obj) {\n\t      var i;\n\t      var attribute;\n\t      var attributes;\n\t      var regex = new RegExp('^' + namespace, 'i');\n\t\n\t      if ('undefined' === typeof obj) obj = {};else {\n\t        // Clear all own properties. This won't affect prototype's values\n\t        for (i in obj) {\n\t          if (obj.hasOwnProperty(i)) delete obj[i];\n\t        }\n\t      }\n\t\n\t      if ('undefined' === typeof $element || 'undefined' === typeof $element[0]) return obj;\n\t\n\t      attributes = $element[0].attributes;\n\t      for (i = attributes.length; i--;) {\n\t        attribute = attributes[i];\n\t\n\t        if (attribute && attribute.specified && regex.test(attribute.name)) {\n\t          obj[this.camelize(attribute.name.slice(namespace.length))] = this.deserializeValue(attribute.value);\n\t        }\n\t      }\n\t\n\t      return obj;\n\t    },\n\t\n\t    checkAttr: function checkAttr($element, namespace, _checkAttr) {\n\t      return $element.is('[' + namespace + _checkAttr + ']');\n\t    },\n\t\n\t    setAttr: function setAttr($element, namespace, attr, value) {\n\t      $element[0].setAttribute(this.dasherize(namespace + attr), String(value));\n\t    },\n\t\n\t    generateID: function generateID() {\n\t      return '' + globalID++;\n\t    },\n\t\n\t    /** Third party functions **/\n\t    // Zepto deserialize function\n\t    deserializeValue: function deserializeValue(value) {\n\t      var num;\n\t\n\t      try {\n\t        return value ? value == \"true\" || (value == \"false\" ? false : value == \"null\" ? null : !isNaN(num = Number(value)) ? num : /^[\\[\\{]/.test(value) ? $.parseJSON(value) : value) : value;\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    },\n\t\n\t    // Zepto camelize function\n\t    camelize: function camelize(str) {\n\t      return str.replace(/-+(.)?/g, function (match, chr) {\n\t        return chr ? chr.toUpperCase() : '';\n\t      });\n\t    },\n\t\n\t    // Zepto dasherize function\n\t    dasherize: function dasherize(str) {\n\t      return str.replace(/::/g, '/').replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2').replace(/([a-z\\d])([A-Z])/g, '$1_$2').replace(/_/g, '-').toLowerCase();\n\t    },\n\t\n\t    warn: function warn() {\n\t      var _window$console;\n\t\n\t      if (window.console && 'function' === typeof window.console.warn) (_window$console = window.console).warn.apply(_window$console, arguments);\n\t    },\n\t\n\t    warnOnce: function warnOnce(msg) {\n\t      if (!pastWarnings[msg]) {\n\t        pastWarnings[msg] = true;\n\t        this.warn.apply(this, arguments);\n\t      }\n\t    },\n\t\n\t    _resetWarnings: function _resetWarnings() {\n\t      pastWarnings = {};\n\t    },\n\t\n\t    trimString: function trimString(string) {\n\t      return string.replace(/^\\s+|\\s+$/g, '');\n\t    },\n\t\n\t    namespaceEvents: function namespaceEvents(events, namespace) {\n\t      events = this.trimString(events || '').split(/\\s+/);\n\t      if (!events[0]) return '';\n\t      return $.map(events, function (evt) {\n\t        return evt + '.' + namespace;\n\t      }).join(' ');\n\t    },\n\t\n\t    difference: function difference(array, remove) {\n\t      // This is O(N^2), should be optimized\n\t      var result = [];\n\t      $.each(array, function (_, elem) {\n\t        if (remove.indexOf(elem) == -1) result.push(elem);\n\t      });\n\t      return result;\n\t    },\n\t\n\t    // Alter-ego to native Promise.all, but for jQuery\n\t    all: function all(promises) {\n\t      // jQuery treats $.when() and $.when(singlePromise) differently; let's avoid that and add spurious elements\n\t      return $.when.apply($, _toConsumableArray(promises).concat([42, 42]));\n\t    },\n\t\n\t    // Object.create polyfill, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Polyfill\n\t    objectCreate: Object.create || function () {\n\t      var Object = function Object() {};\n\t      return function (prototype) {\n\t        if (arguments.length > 1) {\n\t          throw Error('Second argument not supported');\n\t        }\n\t        if ((typeof prototype === 'undefined' ? 'undefined' : _typeof(prototype)) != 'object') {\n\t          throw TypeError('Argument must be an object');\n\t        }\n\t        Object.prototype = prototype;\n\t        var result = new Object();\n\t        Object.prototype = null;\n\t        return result;\n\t      };\n\t    }(),\n\t\n\t    _SubmitSelector: 'input[type=\"submit\"], button:submit'\n\t  };\n\t\n\t  var ParsleyUtils__default = ParsleyUtils__ParsleyUtils;\n\t\n\t  // All these options could be overriden and specified directly in DOM using\n\t  // `data-parsley-` default DOM-API\n\t  // eg: `inputs` can be set in DOM using `data-parsley-inputs=\"input, textarea\"`\n\t  // eg: `data-parsley-stop-on-first-failing-constraint=\"false\"`\n\t\n\t  var ParsleyDefaults = {\n\t    // ### General\n\t\n\t    // Default data-namespace for DOM API\n\t    namespace: 'data-parsley-',\n\t\n\t    // Supported inputs by default\n\t    inputs: 'input, textarea, select',\n\t\n\t    // Excluded inputs by default\n\t    excluded: 'input[type=button], input[type=submit], input[type=reset], input[type=hidden]',\n\t\n\t    // Stop validating field on highest priority failing constraint\n\t    priorityEnabled: true,\n\t\n\t    // ### Field only\n\t\n\t    // identifier used to group together inputs (e.g. radio buttons...)\n\t    multiple: null,\n\t\n\t    // identifier (or array of identifiers) used to validate only a select group of inputs\n\t    group: null,\n\t\n\t    // ### UI\n\t    // Enable\\Disable error messages\n\t    uiEnabled: true,\n\t\n\t    // Key events threshold before validation\n\t    validationThreshold: 3,\n\t\n\t    // Focused field on form validation error. 'first'|'last'|'none'\n\t    focus: 'first',\n\t\n\t    // event(s) that will trigger validation before first failure. eg: `input`...\n\t    trigger: false,\n\t\n\t    // event(s) that will trigger validation after first failure.\n\t    triggerAfterFailure: 'input',\n\t\n\t    // Class that would be added on every failing validation Parsley field\n\t    errorClass: 'parsley-error',\n\t\n\t    // Same for success validation\n\t    successClass: 'parsley-success',\n\t\n\t    // Return the `$element` that will receive these above success or error classes\n\t    // Could also be (and given directly from DOM) a valid selector like `'#div'`\n\t    classHandler: function classHandler(ParsleyField) {},\n\t\n\t    // Return the `$element` where errors will be appended\n\t    // Could also be (and given directly from DOM) a valid selector like `'#div'`\n\t    errorsContainer: function errorsContainer(ParsleyField) {},\n\t\n\t    // ul elem that would receive errors' list\n\t    errorsWrapper: '<ul class=\"parsley-errors-list\"></ul>',\n\t\n\t    // li elem that would receive error message\n\t    errorTemplate: '<li></li>'\n\t  };\n\t\n\t  var ParsleyAbstract = function ParsleyAbstract() {\n\t    this.__id__ = ParsleyUtils__default.generateID();\n\t  };\n\t\n\t  ParsleyAbstract.prototype = {\n\t    asyncSupport: true, // Deprecated\n\t\n\t    _pipeAccordingToValidationResult: function _pipeAccordingToValidationResult() {\n\t      var _this = this;\n\t\n\t      var pipe = function pipe() {\n\t        var r = $.Deferred();\n\t        if (true !== _this.validationResult) r.reject();\n\t        return r.resolve().promise();\n\t      };\n\t      return [pipe, pipe];\n\t    },\n\t\n\t    actualizeOptions: function actualizeOptions() {\n\t      ParsleyUtils__default.attr(this.$element, this.options.namespace, this.domOptions);\n\t      if (this.parent && this.parent.actualizeOptions) this.parent.actualizeOptions();\n\t      return this;\n\t    },\n\t\n\t    _resetOptions: function _resetOptions(initOptions) {\n\t      this.domOptions = ParsleyUtils__default.objectCreate(this.parent.options);\n\t      this.options = ParsleyUtils__default.objectCreate(this.domOptions);\n\t      // Shallow copy of ownProperties of initOptions:\n\t      for (var i in initOptions) {\n\t        if (initOptions.hasOwnProperty(i)) this.options[i] = initOptions[i];\n\t      }\n\t      this.actualizeOptions();\n\t    },\n\t\n\t    _listeners: null,\n\t\n\t    // Register a callback for the given event name\n\t    // Callback is called with context as the first argument and the `this`\n\t    // The context is the current parsley instance, or window.Parsley if global\n\t    // A return value of `false` will interrupt the calls\n\t    on: function on(name, fn) {\n\t      this._listeners = this._listeners || {};\n\t      var queue = this._listeners[name] = this._listeners[name] || [];\n\t      queue.push(fn);\n\t\n\t      return this;\n\t    },\n\t\n\t    // Deprecated. Use `on` instead\n\t    subscribe: function subscribe(name, fn) {\n\t      $.listenTo(this, name.toLowerCase(), fn);\n\t    },\n\t\n\t    // Unregister a callback (or all if none is given) for the given event name\n\t    off: function off(name, fn) {\n\t      var queue = this._listeners && this._listeners[name];\n\t      if (queue) {\n\t        if (!fn) {\n\t          delete this._listeners[name];\n\t        } else {\n\t          for (var i = queue.length; i--;) {\n\t            if (queue[i] === fn) queue.splice(i, 1);\n\t          }\n\t        }\n\t      }\n\t      return this;\n\t    },\n\t\n\t    // Deprecated. Use `off`\n\t    unsubscribe: function unsubscribe(name, fn) {\n\t      $.unsubscribeTo(this, name.toLowerCase());\n\t    },\n\t\n\t    // Trigger an event of the given name\n\t    // A return value of `false` interrupts the callback chain\n\t    // Returns false if execution was interrupted\n\t    trigger: function trigger(name, target, extraArg) {\n\t      target = target || this;\n\t      var queue = this._listeners && this._listeners[name];\n\t      var result;\n\t      var parentResult;\n\t      if (queue) {\n\t        for (var i = queue.length; i--;) {\n\t          result = queue[i].call(target, target, extraArg);\n\t          if (result === false) return result;\n\t        }\n\t      }\n\t      if (this.parent) {\n\t        return this.parent.trigger(name, target, extraArg);\n\t      }\n\t      return true;\n\t    },\n\t\n\t    // Reset UI\n\t    reset: function reset() {\n\t      // Field case: just emit a reset event for UI\n\t      if ('ParsleyForm' !== this.__class__) {\n\t        this._resetUI();\n\t        return this._trigger('reset');\n\t      }\n\t\n\t      // Form case: emit a reset event for each field\n\t      for (var i = 0; i < this.fields.length; i++) {\n\t        this.fields[i].reset();\n\t      }this._trigger('reset');\n\t    },\n\t\n\t    // Destroy Parsley instance (+ UI)\n\t    destroy: function destroy() {\n\t      // Field case: emit destroy event to clean UI and then destroy stored instance\n\t      this._destroyUI();\n\t      if ('ParsleyForm' !== this.__class__) {\n\t        this.$element.removeData('Parsley');\n\t        this.$element.removeData('ParsleyFieldMultiple');\n\t        this._trigger('destroy');\n\t\n\t        return;\n\t      }\n\t\n\t      // Form case: destroy all its fields and then destroy stored instance\n\t      for (var i = 0; i < this.fields.length; i++) {\n\t        this.fields[i].destroy();\n\t      }this.$element.removeData('Parsley');\n\t      this._trigger('destroy');\n\t    },\n\t\n\t    asyncIsValid: function asyncIsValid(group, force) {\n\t      ParsleyUtils__default.warnOnce(\"asyncIsValid is deprecated; please use whenValid instead\");\n\t      return this.whenValid({ group: group, force: force });\n\t    },\n\t\n\t    _findRelated: function _findRelated() {\n\t      return this.options.multiple ? this.parent.$element.find('[' + this.options.namespace + 'multiple=\"' + this.options.multiple + '\"]') : this.$element;\n\t    }\n\t  };\n\t\n\t  var requirementConverters = {\n\t    string: function string(_string) {\n\t      return _string;\n\t    },\n\t    integer: function integer(string) {\n\t      if (isNaN(string)) throw 'Requirement is not an integer: \"' + string + '\"';\n\t      return parseInt(string, 10);\n\t    },\n\t    number: function number(string) {\n\t      if (isNaN(string)) throw 'Requirement is not a number: \"' + string + '\"';\n\t      return parseFloat(string);\n\t    },\n\t    reference: function reference(string) {\n\t      // Unused for now\n\t      var result = $(string);\n\t      if (result.length === 0) throw 'No such reference: \"' + string + '\"';\n\t      return result;\n\t    },\n\t    boolean: function boolean(string) {\n\t      return string !== 'false';\n\t    },\n\t    object: function object(string) {\n\t      return ParsleyUtils__default.deserializeValue(string);\n\t    },\n\t    regexp: function regexp(_regexp) {\n\t      var flags = '';\n\t\n\t      // Test if RegExp is literal, if not, nothing to be done, otherwise, we need to isolate flags and pattern\n\t      if (/^\\/.*\\/(?:[gimy]*)$/.test(_regexp)) {\n\t        // Replace the regexp literal string with the first match group: ([gimy]*)\n\t        // If no flag is present, this will be a blank string\n\t        flags = _regexp.replace(/.*\\/([gimy]*)$/, '$1');\n\t        // Again, replace the regexp literal string with the first match group:\n\t        // everything excluding the opening and closing slashes and the flags\n\t        _regexp = _regexp.replace(new RegExp('^/(.*?)/' + flags + '$'), '$1');\n\t      } else {\n\t        // Anchor regexp:\n\t        _regexp = '^' + _regexp + '$';\n\t      }\n\t      return new RegExp(_regexp, flags);\n\t    }\n\t  };\n\t\n\t  var convertArrayRequirement = function convertArrayRequirement(string, length) {\n\t    var m = string.match(/^\\s*\\[(.*)\\]\\s*$/);\n\t    if (!m) throw 'Requirement is not an array: \"' + string + '\"';\n\t    var values = m[1].split(',').map(ParsleyUtils__default.trimString);\n\t    if (values.length !== length) throw 'Requirement has ' + values.length + ' values when ' + length + ' are needed';\n\t    return values;\n\t  };\n\t\n\t  var convertRequirement = function convertRequirement(requirementType, string) {\n\t    var converter = requirementConverters[requirementType || 'string'];\n\t    if (!converter) throw 'Unknown requirement specification: \"' + requirementType + '\"';\n\t    return converter(string);\n\t  };\n\t\n\t  var convertExtraOptionRequirement = function convertExtraOptionRequirement(requirementSpec, string, extraOptionReader) {\n\t    var main = null;\n\t    var extra = {};\n\t    for (var key in requirementSpec) {\n\t      if (key) {\n\t        var value = extraOptionReader(key);\n\t        if ('string' === typeof value) value = convertRequirement(requirementSpec[key], value);\n\t        extra[key] = value;\n\t      } else {\n\t        main = convertRequirement(requirementSpec[key], string);\n\t      }\n\t    }\n\t    return [main, extra];\n\t  };\n\t\n\t  // A Validator needs to implement the methods `validate` and `parseRequirements`\n\t\n\t  var ParsleyValidator = function ParsleyValidator(spec) {\n\t    $.extend(true, this, spec);\n\t  };\n\t\n\t  ParsleyValidator.prototype = {\n\t    // Returns `true` iff the given `value` is valid according the given requirements.\n\t    validate: function validate(value, requirementFirstArg) {\n\t      if (this.fn) {\n\t        // Legacy style validator\n\t\n\t        if (arguments.length > 3) // If more args then value, requirement, instance...\n\t          requirementFirstArg = [].slice.call(arguments, 1, -1); // Skip first arg (value) and last (instance), combining the rest\n\t        return this.fn.call(this, value, requirementFirstArg);\n\t      }\n\t\n\t      if ($.isArray(value)) {\n\t        if (!this.validateMultiple) throw 'Validator `' + this.name + '` does not handle multiple values';\n\t        return this.validateMultiple.apply(this, arguments);\n\t      } else {\n\t        if (this.validateNumber) {\n\t          if (isNaN(value)) return false;\n\t          arguments[0] = parseFloat(arguments[0]);\n\t          return this.validateNumber.apply(this, arguments);\n\t        }\n\t        if (this.validateString) {\n\t          return this.validateString.apply(this, arguments);\n\t        }\n\t        throw 'Validator `' + this.name + '` only handles multiple values';\n\t      }\n\t    },\n\t\n\t    // Parses `requirements` into an array of arguments,\n\t    // according to `this.requirementType`\n\t    parseRequirements: function parseRequirements(requirements, extraOptionReader) {\n\t      if ('string' !== typeof requirements) {\n\t        // Assume requirement already parsed\n\t        // but make sure we return an array\n\t        return $.isArray(requirements) ? requirements : [requirements];\n\t      }\n\t      var type = this.requirementType;\n\t      if ($.isArray(type)) {\n\t        var values = convertArrayRequirement(requirements, type.length);\n\t        for (var i = 0; i < values.length; i++) {\n\t          values[i] = convertRequirement(type[i], values[i]);\n\t        }return values;\n\t      } else if ($.isPlainObject(type)) {\n\t        return convertExtraOptionRequirement(type, requirements, extraOptionReader);\n\t      } else {\n\t        return [convertRequirement(type, requirements)];\n\t      }\n\t    },\n\t    // Defaults:\n\t    requirementType: 'string',\n\t\n\t    priority: 2\n\t\n\t  };\n\t\n\t  var ParsleyValidatorRegistry = function ParsleyValidatorRegistry(validators, catalog) {\n\t    this.__class__ = 'ParsleyValidatorRegistry';\n\t\n\t    // Default Parsley locale is en\n\t    this.locale = 'en';\n\t\n\t    this.init(validators || {}, catalog || {});\n\t  };\n\t\n\t  var typeRegexes = {\n\t    email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n\t\n\t    // Follow https://www.w3.org/TR/html5/infrastructure.html#floating-point-numbers\n\t    number: /^-?(\\d*\\.)?\\d+(e[-+]?\\d+)?$/i,\n\t\n\t    integer: /^-?\\d+$/,\n\t\n\t    digits: /^\\d+$/,\n\t\n\t    alphanum: /^\\w+$/i,\n\t\n\t    url: new RegExp(\"^\" +\n\t    // protocol identifier\n\t    \"(?:(?:https?|ftp)://)?\" + // ** mod: make scheme optional\n\t    // user:pass authentication\n\t    \"(?:\\\\S+(?::\\\\S*)?@)?\" + \"(?:\" +\n\t    // IP address exclusion\n\t    // private & local networks\n\t    // \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +   // ** mod: allow local networks\n\t    // \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n\t    // \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n\t    // IP address dotted notation octets\n\t    // excludes loopback network 0.0.0.0\n\t    // excludes reserved space >= 224.0.0.0\n\t    // excludes network & broacast addresses\n\t    // (first & last IP address of each class)\n\t    \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" + \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" + \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" + \"|\" +\n\t    // host name\n\t    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n\t    // domain name\n\t    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n\t    // TLD identifier\n\t    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' + \")\" +\n\t    // port number\n\t    \"(?::\\\\d{2,5})?\" +\n\t    // resource path\n\t    \"(?:/\\\\S*)?\" + \"$\", 'i')\n\t  };\n\t  typeRegexes.range = typeRegexes.number;\n\t\n\t  // See http://stackoverflow.com/a/10454560/8279\n\t  var decimalPlaces = function decimalPlaces(num) {\n\t    var match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\t    if (!match) {\n\t      return 0;\n\t    }\n\t    return Math.max(0,\n\t    // Number of digits right of decimal point.\n\t    (match[1] ? match[1].length : 0) - (\n\t    // Adjust for scientific notation.\n\t    match[2] ? +match[2] : 0));\n\t  };\n\t\n\t  ParsleyValidatorRegistry.prototype = {\n\t    init: function init(validators, catalog) {\n\t      this.catalog = catalog;\n\t      // Copy prototype's validators:\n\t      this.validators = $.extend({}, this.validators);\n\t\n\t      for (var name in validators) {\n\t        this.addValidator(name, validators[name].fn, validators[name].priority);\n\t      }window.Parsley.trigger('parsley:validator:init');\n\t    },\n\t\n\t    // Set new messages locale if we have dictionary loaded in ParsleyConfig.i18n\n\t    setLocale: function setLocale(locale) {\n\t      if ('undefined' === typeof this.catalog[locale]) throw new Error(locale + ' is not available in the catalog');\n\t\n\t      this.locale = locale;\n\t\n\t      return this;\n\t    },\n\t\n\t    // Add a new messages catalog for a given locale. Set locale for this catalog if set === `true`\n\t    addCatalog: function addCatalog(locale, messages, set) {\n\t      if ('object' === (typeof messages === 'undefined' ? 'undefined' : _typeof(messages))) this.catalog[locale] = messages;\n\t\n\t      if (true === set) return this.setLocale(locale);\n\t\n\t      return this;\n\t    },\n\t\n\t    // Add a specific message for a given constraint in a given locale\n\t    addMessage: function addMessage(locale, name, message) {\n\t      if ('undefined' === typeof this.catalog[locale]) this.catalog[locale] = {};\n\t\n\t      this.catalog[locale][name] = message;\n\t\n\t      return this;\n\t    },\n\t\n\t    // Add messages for a given locale\n\t    addMessages: function addMessages(locale, nameMessageObject) {\n\t      for (var name in nameMessageObject) {\n\t        this.addMessage(locale, name, nameMessageObject[name]);\n\t      }return this;\n\t    },\n\t\n\t    // Add a new validator\n\t    //\n\t    //    addValidator('custom', {\n\t    //        requirementType: ['integer', 'integer'],\n\t    //        validateString: function(value, from, to) {},\n\t    //        priority: 22,\n\t    //        messages: {\n\t    //          en: \"Hey, that's no good\",\n\t    //          fr: \"Aye aye, pas bon du tout\",\n\t    //        }\n\t    //    })\n\t    //\n\t    // Old API was addValidator(name, function, priority)\n\t    //\n\t    addValidator: function addValidator(name, arg1, arg2) {\n\t      if (this.validators[name]) ParsleyUtils__default.warn('Validator \"' + name + '\" is already defined.');else if (ParsleyDefaults.hasOwnProperty(name)) {\n\t        ParsleyUtils__default.warn('\"' + name + '\" is a restricted keyword and is not a valid validator name.');\n\t        return;\n\t      }\n\t      return this._setValidator.apply(this, arguments);\n\t    },\n\t\n\t    updateValidator: function updateValidator(name, arg1, arg2) {\n\t      if (!this.validators[name]) {\n\t        ParsleyUtils__default.warn('Validator \"' + name + '\" is not already defined.');\n\t        return this.addValidator.apply(this, arguments);\n\t      }\n\t      return this._setValidator.apply(this, arguments);\n\t    },\n\t\n\t    removeValidator: function removeValidator(name) {\n\t      if (!this.validators[name]) ParsleyUtils__default.warn('Validator \"' + name + '\" is not defined.');\n\t\n\t      delete this.validators[name];\n\t\n\t      return this;\n\t    },\n\t\n\t    _setValidator: function _setValidator(name, validator, priority) {\n\t      if ('object' !== (typeof validator === 'undefined' ? 'undefined' : _typeof(validator))) {\n\t        // Old style validator, with `fn` and `priority`\n\t        validator = {\n\t          fn: validator,\n\t          priority: priority\n\t        };\n\t      }\n\t      if (!validator.validate) {\n\t        validator = new ParsleyValidator(validator);\n\t      }\n\t      this.validators[name] = validator;\n\t\n\t      for (var locale in validator.messages || {}) {\n\t        this.addMessage(locale, name, validator.messages[locale]);\n\t      }return this;\n\t    },\n\t\n\t    getErrorMessage: function getErrorMessage(constraint) {\n\t      var message;\n\t\n\t      // Type constraints are a bit different, we have to match their requirements too to find right error message\n\t      if ('type' === constraint.name) {\n\t        var typeMessages = this.catalog[this.locale][constraint.name] || {};\n\t        message = typeMessages[constraint.requirements];\n\t      } else message = this.formatMessage(this.catalog[this.locale][constraint.name], constraint.requirements);\n\t\n\t      return message || this.catalog[this.locale].defaultMessage || this.catalog.en.defaultMessage;\n\t    },\n\t\n\t    // Kind of light `sprintf()` implementation\n\t    formatMessage: function formatMessage(string, parameters) {\n\t      if ('object' === (typeof parameters === 'undefined' ? 'undefined' : _typeof(parameters))) {\n\t        for (var i in parameters) {\n\t          string = this.formatMessage(string, parameters[i]);\n\t        }return string;\n\t      }\n\t\n\t      return 'string' === typeof string ? string.replace(/%s/i, parameters) : '';\n\t    },\n\t\n\t    // Here is the Parsley default validators list.\n\t    // A validator is an object with the following key values:\n\t    //  - priority: an integer\n\t    //  - requirement: 'string' (default), 'integer', 'number', 'regexp' or an Array of these\n\t    //  - validateString, validateMultiple, validateNumber: functions returning `true`, `false` or a promise\n\t    // Alternatively, a validator can be a function that returns such an object\n\t    //\n\t    validators: {\n\t      notblank: {\n\t        validateString: function validateString(value) {\n\t          return (/\\S/.test(value)\n\t          );\n\t        },\n\t        priority: 2\n\t      },\n\t      required: {\n\t        validateMultiple: function validateMultiple(values) {\n\t          return values.length > 0;\n\t        },\n\t        validateString: function validateString(value) {\n\t          return (/\\S/.test(value)\n\t          );\n\t        },\n\t        priority: 512\n\t      },\n\t      type: {\n\t        validateString: function validateString(value, type) {\n\t          var _ref = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t          var _ref$step = _ref.step;\n\t          var step = _ref$step === undefined ? 'any' : _ref$step;\n\t          var _ref$base = _ref.base;\n\t          var base = _ref$base === undefined ? 0 : _ref$base;\n\t\n\t          var regex = typeRegexes[type];\n\t          if (!regex) {\n\t            throw new Error('validator type `' + type + '` is not supported');\n\t          }\n\t          if (!regex.test(value)) return false;\n\t          if ('number' === type) {\n\t            if (!/^any$/i.test(step || '')) {\n\t              var nb = Number(value);\n\t              var decimals = Math.max(decimalPlaces(step), decimalPlaces(base));\n\t              if (decimalPlaces(nb) > decimals) // Value can't have too many decimals\n\t                return false;\n\t              // Be careful of rounding errors by using integers.\n\t              var toInt = function toInt(f) {\n\t                return Math.round(f * Math.pow(10, decimals));\n\t              };\n\t              if ((toInt(nb) - toInt(base)) % toInt(step) != 0) return false;\n\t            }\n\t          }\n\t          return true;\n\t        },\n\t        requirementType: {\n\t          '': 'string',\n\t          step: 'string',\n\t          base: 'number'\n\t        },\n\t        priority: 256\n\t      },\n\t      pattern: {\n\t        validateString: function validateString(value, regexp) {\n\t          return regexp.test(value);\n\t        },\n\t        requirementType: 'regexp',\n\t        priority: 64\n\t      },\n\t      minlength: {\n\t        validateString: function validateString(value, requirement) {\n\t          return value.length >= requirement;\n\t        },\n\t        requirementType: 'integer',\n\t        priority: 30\n\t      },\n\t      maxlength: {\n\t        validateString: function validateString(value, requirement) {\n\t          return value.length <= requirement;\n\t        },\n\t        requirementType: 'integer',\n\t        priority: 30\n\t      },\n\t      length: {\n\t        validateString: function validateString(value, min, max) {\n\t          return value.length >= min && value.length <= max;\n\t        },\n\t        requirementType: ['integer', 'integer'],\n\t        priority: 30\n\t      },\n\t      mincheck: {\n\t        validateMultiple: function validateMultiple(values, requirement) {\n\t          return values.length >= requirement;\n\t        },\n\t        requirementType: 'integer',\n\t        priority: 30\n\t      },\n\t      maxcheck: {\n\t        validateMultiple: function validateMultiple(values, requirement) {\n\t          return values.length <= requirement;\n\t        },\n\t        requirementType: 'integer',\n\t        priority: 30\n\t      },\n\t      check: {\n\t        validateMultiple: function validateMultiple(values, min, max) {\n\t          return values.length >= min && values.length <= max;\n\t        },\n\t        requirementType: ['integer', 'integer'],\n\t        priority: 30\n\t      },\n\t      min: {\n\t        validateNumber: function validateNumber(value, requirement) {\n\t          return value >= requirement;\n\t        },\n\t        requirementType: 'number',\n\t        priority: 30\n\t      },\n\t      max: {\n\t        validateNumber: function validateNumber(value, requirement) {\n\t          return value <= requirement;\n\t        },\n\t        requirementType: 'number',\n\t        priority: 30\n\t      },\n\t      range: {\n\t        validateNumber: function validateNumber(value, min, max) {\n\t          return value >= min && value <= max;\n\t        },\n\t        requirementType: ['number', 'number'],\n\t        priority: 30\n\t      },\n\t      equalto: {\n\t        validateString: function validateString(value, refOrValue) {\n\t          var $reference = $(refOrValue);\n\t          if ($reference.length) return value === $reference.val();else return value === refOrValue;\n\t        },\n\t        priority: 256\n\t      }\n\t    }\n\t  };\n\t\n\t  var ParsleyUI = {};\n\t\n\t  var diffResults = function diffResults(newResult, oldResult, deep) {\n\t    var added = [];\n\t    var kept = [];\n\t\n\t    for (var i = 0; i < newResult.length; i++) {\n\t      var found = false;\n\t\n\t      for (var j = 0; j < oldResult.length; j++) {\n\t        if (newResult[i].assert.name === oldResult[j].assert.name) {\n\t          found = true;\n\t          break;\n\t        }\n\t      }if (found) kept.push(newResult[i]);else added.push(newResult[i]);\n\t    }\n\t\n\t    return {\n\t      kept: kept,\n\t      added: added,\n\t      removed: !deep ? diffResults(oldResult, newResult, true).added : []\n\t    };\n\t  };\n\t\n\t  ParsleyUI.Form = {\n\t\n\t    _actualizeTriggers: function _actualizeTriggers() {\n\t      var _this2 = this;\n\t\n\t      this.$element.on('submit.Parsley', function (evt) {\n\t        _this2.onSubmitValidate(evt);\n\t      });\n\t      this.$element.on('click.Parsley', ParsleyUtils__default._SubmitSelector, function (evt) {\n\t        _this2.onSubmitButton(evt);\n\t      });\n\t\n\t      // UI could be disabled\n\t      if (false === this.options.uiEnabled) return;\n\t\n\t      this.$element.attr('novalidate', '');\n\t    },\n\t\n\t    focus: function focus() {\n\t      this._focusedField = null;\n\t\n\t      if (true === this.validationResult || 'none' === this.options.focus) return null;\n\t\n\t      for (var i = 0; i < this.fields.length; i++) {\n\t        var field = this.fields[i];\n\t        if (true !== field.validationResult && field.validationResult.length > 0 && 'undefined' === typeof field.options.noFocus) {\n\t          this._focusedField = field.$element;\n\t          if ('first' === this.options.focus) break;\n\t        }\n\t      }\n\t\n\t      if (null === this._focusedField) return null;\n\t\n\t      return this._focusedField.focus();\n\t    },\n\t\n\t    _destroyUI: function _destroyUI() {\n\t      // Reset all event listeners\n\t      this.$element.off('.Parsley');\n\t    }\n\t\n\t  };\n\t\n\t  ParsleyUI.Field = {\n\t\n\t    _reflowUI: function _reflowUI() {\n\t      this._buildUI();\n\t\n\t      // If this field doesn't have an active UI don't bother doing something\n\t      if (!this._ui) return;\n\t\n\t      // Diff between two validation results\n\t      var diff = diffResults(this.validationResult, this._ui.lastValidationResult);\n\t\n\t      // Then store current validation result for next reflow\n\t      this._ui.lastValidationResult = this.validationResult;\n\t\n\t      // Handle valid / invalid / none field class\n\t      this._manageStatusClass();\n\t\n\t      // Add, remove, updated errors messages\n\t      this._manageErrorsMessages(diff);\n\t\n\t      // Triggers impl\n\t      this._actualizeTriggers();\n\t\n\t      // If field is not valid for the first time, bind keyup trigger to ease UX and quickly inform user\n\t      if ((diff.kept.length || diff.added.length) && !this._failedOnce) {\n\t        this._failedOnce = true;\n\t        this._actualizeTriggers();\n\t      }\n\t    },\n\t\n\t    // Returns an array of field's error message(s)\n\t    getErrorsMessages: function getErrorsMessages() {\n\t      // No error message, field is valid\n\t      if (true === this.validationResult) return [];\n\t\n\t      var messages = [];\n\t\n\t      for (var i = 0; i < this.validationResult.length; i++) {\n\t        messages.push(this.validationResult[i].errorMessage || this._getErrorMessage(this.validationResult[i].assert));\n\t      }return messages;\n\t    },\n\t\n\t    // It's a goal of Parsley that this method is no longer required [#1073]\n\t    addError: function addError(name) {\n\t      var _ref2 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      var message = _ref2.message;\n\t      var assert = _ref2.assert;\n\t      var _ref2$updateClass = _ref2.updateClass;\n\t      var updateClass = _ref2$updateClass === undefined ? true : _ref2$updateClass;\n\t\n\t      this._buildUI();\n\t      this._addError(name, { message: message, assert: assert });\n\t\n\t      if (updateClass) this._errorClass();\n\t    },\n\t\n\t    // It's a goal of Parsley that this method is no longer required [#1073]\n\t    updateError: function updateError(name) {\n\t      var _ref3 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      var message = _ref3.message;\n\t      var assert = _ref3.assert;\n\t      var _ref3$updateClass = _ref3.updateClass;\n\t      var updateClass = _ref3$updateClass === undefined ? true : _ref3$updateClass;\n\t\n\t      this._buildUI();\n\t      this._updateError(name, { message: message, assert: assert });\n\t\n\t      if (updateClass) this._errorClass();\n\t    },\n\t\n\t    // It's a goal of Parsley that this method is no longer required [#1073]\n\t    removeError: function removeError(name) {\n\t      var _ref4 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t      var _ref4$updateClass = _ref4.updateClass;\n\t      var updateClass = _ref4$updateClass === undefined ? true : _ref4$updateClass;\n\t\n\t      this._buildUI();\n\t      this._removeError(name);\n\t\n\t      // edge case possible here: remove a standard Parsley error that is still failing in this.validationResult\n\t      // but highly improbable cuz' manually removing a well Parsley handled error makes no sense.\n\t      if (updateClass) this._manageStatusClass();\n\t    },\n\t\n\t    _manageStatusClass: function _manageStatusClass() {\n\t      if (this.hasConstraints() && this.needsValidation() && true === this.validationResult) this._successClass();else if (this.validationResult.length > 0) this._errorClass();else this._resetClass();\n\t    },\n\t\n\t    _manageErrorsMessages: function _manageErrorsMessages(diff) {\n\t      if ('undefined' !== typeof this.options.errorsMessagesDisabled) return;\n\t\n\t      // Case where we have errorMessage option that configure an unique field error message, regardless failing validators\n\t      if ('undefined' !== typeof this.options.errorMessage) {\n\t        if (diff.added.length || diff.kept.length) {\n\t          this._insertErrorWrapper();\n\t\n\t          if (0 === this._ui.$errorsWrapper.find('.parsley-custom-error-message').length) this._ui.$errorsWrapper.append($(this.options.errorTemplate).addClass('parsley-custom-error-message'));\n\t\n\t          return this._ui.$errorsWrapper.addClass('filled').find('.parsley-custom-error-message').html(this.options.errorMessage);\n\t        }\n\t\n\t        return this._ui.$errorsWrapper.removeClass('filled').find('.parsley-custom-error-message').remove();\n\t      }\n\t\n\t      // Show, hide, update failing constraints messages\n\t      for (var i = 0; i < diff.removed.length; i++) {\n\t        this._removeError(diff.removed[i].assert.name);\n\t      }for (i = 0; i < diff.added.length; i++) {\n\t        this._addError(diff.added[i].assert.name, { message: diff.added[i].errorMessage, assert: diff.added[i].assert });\n\t      }for (i = 0; i < diff.kept.length; i++) {\n\t        this._updateError(diff.kept[i].assert.name, { message: diff.kept[i].errorMessage, assert: diff.kept[i].assert });\n\t      }\n\t    },\n\t\n\t    _addError: function _addError(name, _ref5) {\n\t      var message = _ref5.message;\n\t      var assert = _ref5.assert;\n\t\n\t      this._insertErrorWrapper();\n\t      this._ui.$errorsWrapper.addClass('filled').append($(this.options.errorTemplate).addClass('parsley-' + name).html(message || this._getErrorMessage(assert)));\n\t    },\n\t\n\t    _updateError: function _updateError(name, _ref6) {\n\t      var message = _ref6.message;\n\t      var assert = _ref6.assert;\n\t\n\t      this._ui.$errorsWrapper.addClass('filled').find('.parsley-' + name).html(message || this._getErrorMessage(assert));\n\t    },\n\t\n\t    _removeError: function _removeError(name) {\n\t      this._ui.$errorsWrapper.removeClass('filled').find('.parsley-' + name).remove();\n\t    },\n\t\n\t    _getErrorMessage: function _getErrorMessage(constraint) {\n\t      var customConstraintErrorMessage = constraint.name + 'Message';\n\t\n\t      if ('undefined' !== typeof this.options[customConstraintErrorMessage]) return window.Parsley.formatMessage(this.options[customConstraintErrorMessage], constraint.requirements);\n\t\n\t      return window.Parsley.getErrorMessage(constraint);\n\t    },\n\t\n\t    _buildUI: function _buildUI() {\n\t      // UI could be already built or disabled\n\t      if (this._ui || false === this.options.uiEnabled) return;\n\t\n\t      var _ui = {};\n\t\n\t      // Give field its Parsley id in DOM\n\t      this.$element.attr(this.options.namespace + 'id', this.__id__);\n\t\n\t      /** Generate important UI elements and store them in this **/\n\t      // $errorClassHandler is the $element that woul have parsley-error and parsley-success classes\n\t      _ui.$errorClassHandler = this._manageClassHandler();\n\t\n\t      // $errorsWrapper is a div that would contain the various field errors, it will be appended into $errorsContainer\n\t      _ui.errorsWrapperId = 'parsley-id-' + (this.options.multiple ? 'multiple-' + this.options.multiple : this.__id__);\n\t      _ui.$errorsWrapper = $(this.options.errorsWrapper).attr('id', _ui.errorsWrapperId);\n\t\n\t      // ValidationResult UI storage to detect what have changed bwt two validations, and update DOM accordingly\n\t      _ui.lastValidationResult = [];\n\t      _ui.validationInformationVisible = false;\n\t\n\t      // Store it in this for later\n\t      this._ui = _ui;\n\t    },\n\t\n\t    // Determine which element will have `parsley-error` and `parsley-success` classes\n\t    _manageClassHandler: function _manageClassHandler() {\n\t      // An element selector could be passed through DOM with `data-parsley-class-handler=#foo`\n\t      if ('string' === typeof this.options.classHandler && $(this.options.classHandler).length) return $(this.options.classHandler);\n\t\n\t      // Class handled could also be determined by function given in Parsley options\n\t      var $handler = this.options.classHandler.call(this, this);\n\t\n\t      // If this function returned a valid existing DOM element, go for it\n\t      if ('undefined' !== typeof $handler && $handler.length) return $handler;\n\t\n\t      return this._inputHolder();\n\t    },\n\t\n\t    _inputHolder: function _inputHolder() {\n\t      // if simple element (input, texatrea, select...) it will perfectly host the classes and precede the error container\n\t      if (!this.options.multiple || this.$element.is('select')) return this.$element;\n\t\n\t      // But if multiple element (radio, checkbox), that would be their parent\n\t      return this.$element.parent();\n\t    },\n\t\n\t    _insertErrorWrapper: function _insertErrorWrapper() {\n\t      var $errorsContainer;\n\t\n\t      // Nothing to do if already inserted\n\t      if (0 !== this._ui.$errorsWrapper.parent().length) return this._ui.$errorsWrapper.parent();\n\t\n\t      if ('string' === typeof this.options.errorsContainer) {\n\t        if ($(this.options.errorsContainer).length) return $(this.options.errorsContainer).append(this._ui.$errorsWrapper);else ParsleyUtils__default.warn('The errors container `' + this.options.errorsContainer + '` does not exist in DOM');\n\t      } else if ('function' === typeof this.options.errorsContainer) $errorsContainer = this.options.errorsContainer.call(this, this);\n\t\n\t      if ('undefined' !== typeof $errorsContainer && $errorsContainer.length) return $errorsContainer.append(this._ui.$errorsWrapper);\n\t\n\t      return this._inputHolder().after(this._ui.$errorsWrapper);\n\t    },\n\t\n\t    _actualizeTriggers: function _actualizeTriggers() {\n\t      var _this3 = this;\n\t\n\t      var $toBind = this._findRelated();\n\t      var trigger;\n\t\n\t      // Remove Parsley events already bound on this field\n\t      $toBind.off('.Parsley');\n\t      if (this._failedOnce) $toBind.on(ParsleyUtils__default.namespaceEvents(this.options.triggerAfterFailure, 'Parsley'), function () {\n\t        _this3._validateIfNeeded();\n\t      });else if (trigger = ParsleyUtils__default.namespaceEvents(this.options.trigger, 'Parsley')) {\n\t        $toBind.on(trigger, function (event) {\n\t          _this3._validateIfNeeded(event);\n\t        });\n\t      }\n\t    },\n\t\n\t    _validateIfNeeded: function _validateIfNeeded(event) {\n\t      var _this4 = this;\n\t\n\t      // For keyup, keypress, keydown, input... events that could be a little bit obstrusive\n\t      // do not validate if val length < min threshold on first validation. Once field have been validated once and info\n\t      // about success or failure have been displayed, always validate with this trigger to reflect every yalidation change.\n\t      if (event && /key|input/.test(event.type)) if (!(this._ui && this._ui.validationInformationVisible) && this.getValue().length <= this.options.validationThreshold) return;\n\t\n\t      if (this.options.debounce) {\n\t        window.clearTimeout(this._debounced);\n\t        this._debounced = window.setTimeout(function () {\n\t          return _this4.validate();\n\t        }, this.options.debounce);\n\t      } else this.validate();\n\t    },\n\t\n\t    _resetUI: function _resetUI() {\n\t      // Reset all event listeners\n\t      this._failedOnce = false;\n\t      this._actualizeTriggers();\n\t\n\t      // Nothing to do if UI never initialized for this field\n\t      if ('undefined' === typeof this._ui) return;\n\t\n\t      // Reset all errors' li\n\t      this._ui.$errorsWrapper.removeClass('filled').children().remove();\n\t\n\t      // Reset validation class\n\t      this._resetClass();\n\t\n\t      // Reset validation flags and last validation result\n\t      this._ui.lastValidationResult = [];\n\t      this._ui.validationInformationVisible = false;\n\t    },\n\t\n\t    _destroyUI: function _destroyUI() {\n\t      this._resetUI();\n\t\n\t      if ('undefined' !== typeof this._ui) this._ui.$errorsWrapper.remove();\n\t\n\t      delete this._ui;\n\t    },\n\t\n\t    _successClass: function _successClass() {\n\t      this._ui.validationInformationVisible = true;\n\t      this._ui.$errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass);\n\t    },\n\t    _errorClass: function _errorClass() {\n\t      this._ui.validationInformationVisible = true;\n\t      this._ui.$errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass);\n\t    },\n\t    _resetClass: function _resetClass() {\n\t      this._ui.$errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);\n\t    }\n\t  };\n\t\n\t  var ParsleyForm = function ParsleyForm(element, domOptions, options) {\n\t    this.__class__ = 'ParsleyForm';\n\t\n\t    this.$element = $(element);\n\t    this.domOptions = domOptions;\n\t    this.options = options;\n\t    this.parent = window.Parsley;\n\t\n\t    this.fields = [];\n\t    this.validationResult = null;\n\t  };\n\t\n\t  var ParsleyForm__statusMapping = { pending: null, resolved: true, rejected: false };\n\t\n\t  ParsleyForm.prototype = {\n\t    onSubmitValidate: function onSubmitValidate(event) {\n\t      var _this5 = this;\n\t\n\t      // This is a Parsley generated submit event, do not validate, do not prevent, simply exit and keep normal behavior\n\t      if (true === event.parsley) return;\n\t\n\t      // If we didn't come here through a submit button, use the first one in the form\n\t      var $submitSource = this._$submitSource || this.$element.find(ParsleyUtils__default._SubmitSelector).first();\n\t      this._$submitSource = null;\n\t      this.$element.find('.parsley-synthetic-submit-button').prop('disabled', true);\n\t      if ($submitSource.is('[formnovalidate]')) return;\n\t\n\t      var promise = this.whenValidate({ event: event });\n\t\n\t      if ('resolved' === promise.state() && false !== this._trigger('submit')) {\n\t        // All good, let event go through. We make this distinction because browsers\n\t        // differ in their handling of `submit` being called from inside a submit event [#1047]\n\t      } else {\n\t        // Rejected or pending: cancel this submit\n\t        event.stopImmediatePropagation();\n\t        event.preventDefault();\n\t        if ('pending' === promise.state()) promise.done(function () {\n\t          _this5._submit($submitSource);\n\t        });\n\t      }\n\t    },\n\t\n\t    onSubmitButton: function onSubmitButton(event) {\n\t      this._$submitSource = $(event.currentTarget);\n\t    },\n\t    // internal\n\t    // _submit submits the form, this time without going through the validations.\n\t    // Care must be taken to \"fake\" the actual submit button being clicked.\n\t    _submit: function _submit($submitSource) {\n\t      if (false === this._trigger('submit')) return;\n\t      // Add submit button's data\n\t      if ($submitSource) {\n\t        var $synthetic = this.$element.find('.parsley-synthetic-submit-button').prop('disabled', false);\n\t        if (0 === $synthetic.length) $synthetic = $('<input class=\"parsley-synthetic-submit-button\" type=\"hidden\">').appendTo(this.$element);\n\t        $synthetic.attr({\n\t          name: $submitSource.attr('name'),\n\t          value: $submitSource.attr('value')\n\t        });\n\t      }\n\t\n\t      this.$element.trigger($.extend($.Event('submit'), { parsley: true }));\n\t    },\n\t\n\t    // Performs validation on fields while triggering events.\n\t    // @returns `true` if all validations succeeds, `false`\n\t    // if a failure is immediately detected, or `null`\n\t    // if dependant on a promise.\n\t    // Consider using `whenValidate` instead.\n\t    validate: function validate(options) {\n\t      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n\t        ParsleyUtils__default.warnOnce('Calling validate on a parsley form without passing arguments as an object is deprecated.');\n\t\n\t        var _arguments = _slice.call(arguments);\n\t\n\t        var group = _arguments[0];\n\t        var force = _arguments[1];\n\t        var event = _arguments[2];\n\t\n\t        options = { group: group, force: force, event: event };\n\t      }\n\t      return ParsleyForm__statusMapping[this.whenValidate(options).state()];\n\t    },\n\t\n\t    whenValidate: function whenValidate() {\n\t      var _ParsleyUtils__default$all$done$fail$always,\n\t          _this6 = this;\n\t\n\t      var _ref7 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var group = _ref7.group;\n\t      var force = _ref7.force;\n\t      var event = _ref7.event;\n\t\n\t      this.submitEvent = event;\n\t      if (event) {\n\t        this.submitEvent = $.extend({}, event, { preventDefault: function preventDefault() {\n\t            ParsleyUtils__default.warnOnce(\"Using `this.submitEvent.preventDefault()` is deprecated; instead, call `this.validationResult = false`\");\n\t            _this6.validationResult = false;\n\t          } });\n\t      }\n\t      this.validationResult = true;\n\t\n\t      // fire validate event to eventually modify things before every validation\n\t      this._trigger('validate');\n\t\n\t      // Refresh form DOM options and form's fields that could have changed\n\t      this._refreshFields();\n\t\n\t      var promises = this._withoutReactualizingFormOptions(function () {\n\t        return $.map(_this6.fields, function (field) {\n\t          return field.whenValidate({ force: force, group: group });\n\t        });\n\t      });\n\t\n\t      return (_ParsleyUtils__default$all$done$fail$always = ParsleyUtils__default.all(promises).done(function () {\n\t        _this6._trigger('success');\n\t      }).fail(function () {\n\t        _this6.validationResult = false;\n\t        _this6.focus();\n\t        _this6._trigger('error');\n\t      }).always(function () {\n\t        _this6._trigger('validated');\n\t      })).pipe.apply(_ParsleyUtils__default$all$done$fail$always, _toConsumableArray(this._pipeAccordingToValidationResult()));\n\t    },\n\t\n\t    // Iterate over refreshed fields, and stop on first failure.\n\t    // Returns `true` if all fields are valid, `false` if a failure is detected\n\t    // or `null` if the result depends on an unresolved promise.\n\t    // Prefer using `whenValid` instead.\n\t    isValid: function isValid(options) {\n\t      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n\t        ParsleyUtils__default.warnOnce('Calling isValid on a parsley form without passing arguments as an object is deprecated.');\n\t\n\t        var _arguments2 = _slice.call(arguments);\n\t\n\t        var group = _arguments2[0];\n\t        var force = _arguments2[1];\n\t\n\t        options = { group: group, force: force };\n\t      }\n\t      return ParsleyForm__statusMapping[this.whenValid(options).state()];\n\t    },\n\t\n\t    // Iterate over refreshed fields and validate them.\n\t    // Returns a promise.\n\t    // A validation that immediately fails will interrupt the validations.\n\t    whenValid: function whenValid() {\n\t      var _this7 = this;\n\t\n\t      var _ref8 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var group = _ref8.group;\n\t      var force = _ref8.force;\n\t\n\t      this._refreshFields();\n\t\n\t      var promises = this._withoutReactualizingFormOptions(function () {\n\t        return $.map(_this7.fields, function (field) {\n\t          return field.whenValid({ group: group, force: force });\n\t        });\n\t      });\n\t      return ParsleyUtils__default.all(promises);\n\t    },\n\t\n\t    _refreshFields: function _refreshFields() {\n\t      return this.actualizeOptions()._bindFields();\n\t    },\n\t\n\t    _bindFields: function _bindFields() {\n\t      var _this8 = this;\n\t\n\t      var oldFields = this.fields;\n\t\n\t      this.fields = [];\n\t      this.fieldsMappedById = {};\n\t\n\t      this._withoutReactualizingFormOptions(function () {\n\t        _this8.$element.find(_this8.options.inputs).not(_this8.options.excluded).each(function (_, element) {\n\t          var fieldInstance = new window.Parsley.Factory(element, {}, _this8);\n\t\n\t          // Only add valid and not excluded `ParsleyField` and `ParsleyFieldMultiple` children\n\t          if (('ParsleyField' === fieldInstance.__class__ || 'ParsleyFieldMultiple' === fieldInstance.__class__) && true !== fieldInstance.options.excluded) if ('undefined' === typeof _this8.fieldsMappedById[fieldInstance.__class__ + '-' + fieldInstance.__id__]) {\n\t            _this8.fieldsMappedById[fieldInstance.__class__ + '-' + fieldInstance.__id__] = fieldInstance;\n\t            _this8.fields.push(fieldInstance);\n\t          }\n\t        });\n\t\n\t        $.each(ParsleyUtils__default.difference(oldFields, _this8.fields), function (_, field) {\n\t          field._trigger('reset');\n\t        });\n\t      });\n\t      return this;\n\t    },\n\t\n\t    // Internal only.\n\t    // Looping on a form's fields to do validation or similar\n\t    // will trigger reactualizing options on all of them, which\n\t    // in turn will reactualize the form's options.\n\t    // To avoid calling actualizeOptions so many times on the form\n\t    // for nothing, _withoutReactualizingFormOptions temporarily disables\n\t    // the method actualizeOptions on this form while `fn` is called.\n\t    _withoutReactualizingFormOptions: function _withoutReactualizingFormOptions(fn) {\n\t      var oldActualizeOptions = this.actualizeOptions;\n\t      this.actualizeOptions = function () {\n\t        return this;\n\t      };\n\t      var result = fn();\n\t      this.actualizeOptions = oldActualizeOptions;\n\t      return result;\n\t    },\n\t\n\t    // Internal only.\n\t    // Shortcut to trigger an event\n\t    // Returns true iff event is not interrupted and default not prevented.\n\t    _trigger: function _trigger(eventName) {\n\t      return this.trigger('form:' + eventName);\n\t    }\n\t\n\t  };\n\t\n\t  var ConstraintFactory = function ConstraintFactory(parsleyField, name, requirements, priority, isDomConstraint) {\n\t    if (!/ParsleyField/.test(parsleyField.__class__)) throw new Error('ParsleyField or ParsleyFieldMultiple instance expected');\n\t\n\t    var validatorSpec = window.Parsley._validatorRegistry.validators[name];\n\t    var validator = new ParsleyValidator(validatorSpec);\n\t\n\t    $.extend(this, {\n\t      validator: validator,\n\t      name: name,\n\t      requirements: requirements,\n\t      priority: priority || parsleyField.options[name + 'Priority'] || validator.priority,\n\t      isDomConstraint: true === isDomConstraint\n\t    });\n\t    this._parseRequirements(parsleyField.options);\n\t  };\n\t\n\t  var capitalize = function capitalize(str) {\n\t    var cap = str[0].toUpperCase();\n\t    return cap + str.slice(1);\n\t  };\n\t\n\t  ConstraintFactory.prototype = {\n\t    validate: function validate(value, instance) {\n\t      var _validator;\n\t\n\t      return (_validator = this.validator).validate.apply(_validator, [value].concat(_toConsumableArray(this.requirementList), [instance]));\n\t    },\n\t\n\t    _parseRequirements: function _parseRequirements(options) {\n\t      var _this9 = this;\n\t\n\t      this.requirementList = this.validator.parseRequirements(this.requirements, function (key) {\n\t        return options[_this9.name + capitalize(key)];\n\t      });\n\t    }\n\t  };\n\t\n\t  var ParsleyField = function ParsleyField(field, domOptions, options, parsleyFormInstance) {\n\t    this.__class__ = 'ParsleyField';\n\t\n\t    this.$element = $(field);\n\t\n\t    // Set parent if we have one\n\t    if ('undefined' !== typeof parsleyFormInstance) {\n\t      this.parent = parsleyFormInstance;\n\t    }\n\t\n\t    this.options = options;\n\t    this.domOptions = domOptions;\n\t\n\t    // Initialize some properties\n\t    this.constraints = [];\n\t    this.constraintsByName = {};\n\t    this.validationResult = true;\n\t\n\t    // Bind constraints\n\t    this._bindConstraints();\n\t  };\n\t\n\t  var parsley_field__statusMapping = { pending: null, resolved: true, rejected: false };\n\t\n\t  ParsleyField.prototype = {\n\t    // # Public API\n\t    // Validate field and trigger some events for mainly `ParsleyUI`\n\t    // @returns `true`, an array of the validators that failed, or\n\t    // `null` if validation is not finished. Prefer using whenValidate\n\t    validate: function validate(options) {\n\t      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n\t        ParsleyUtils__default.warnOnce('Calling validate on a parsley field without passing arguments as an object is deprecated.');\n\t        options = { options: options };\n\t      }\n\t      var promise = this.whenValidate(options);\n\t      if (!promise) // If excluded with `group` option\n\t        return true;\n\t      switch (promise.state()) {\n\t        case 'pending':\n\t          return null;\n\t        case 'resolved':\n\t          return true;\n\t        case 'rejected':\n\t          return this.validationResult;\n\t      }\n\t    },\n\t\n\t    // Validate field and trigger some events for mainly `ParsleyUI`\n\t    // @returns a promise that succeeds only when all validations do\n\t    // or `undefined` if field is not in the given `group`.\n\t    whenValidate: function whenValidate() {\n\t      var _whenValid$always$done$fail$always,\n\t          _this10 = this;\n\t\n\t      var _ref9 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var force = _ref9.force;\n\t      var group = _ref9.group;\n\t\n\t      // do not validate a field if not the same as given validation group\n\t      this.refreshConstraints();\n\t      if (group && !this._isInGroup(group)) return;\n\t\n\t      this.value = this.getValue();\n\t\n\t      // Field Validate event. `this.value` could be altered for custom needs\n\t      this._trigger('validate');\n\t\n\t      return (_whenValid$always$done$fail$always = this.whenValid({ force: force, value: this.value, _refreshed: true }).always(function () {\n\t        _this10._reflowUI();\n\t      }).done(function () {\n\t        _this10._trigger('success');\n\t      }).fail(function () {\n\t        _this10._trigger('error');\n\t      }).always(function () {\n\t        _this10._trigger('validated');\n\t      })).pipe.apply(_whenValid$always$done$fail$always, _toConsumableArray(this._pipeAccordingToValidationResult()));\n\t    },\n\t\n\t    hasConstraints: function hasConstraints() {\n\t      return 0 !== this.constraints.length;\n\t    },\n\t\n\t    // An empty optional field does not need validation\n\t    needsValidation: function needsValidation(value) {\n\t      if ('undefined' === typeof value) value = this.getValue();\n\t\n\t      // If a field is empty and not required, it is valid\n\t      // Except if `data-parsley-validate-if-empty` explicitely added, useful for some custom validators\n\t      if (!value.length && !this._isRequired() && 'undefined' === typeof this.options.validateIfEmpty) return false;\n\t\n\t      return true;\n\t    },\n\t\n\t    _isInGroup: function _isInGroup(group) {\n\t      if ($.isArray(this.options.group)) return -1 !== $.inArray(group, this.options.group);\n\t      return this.options.group === group;\n\t    },\n\t\n\t    // Just validate field. Do not trigger any event.\n\t    // Returns `true` iff all constraints pass, `false` if there are failures,\n\t    // or `null` if the result can not be determined yet (depends on a promise)\n\t    // See also `whenValid`.\n\t    isValid: function isValid(options) {\n\t      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n\t        ParsleyUtils__default.warnOnce('Calling isValid on a parsley field without passing arguments as an object is deprecated.');\n\t\n\t        var _arguments3 = _slice.call(arguments);\n\t\n\t        var force = _arguments3[0];\n\t        var value = _arguments3[1];\n\t\n\t        options = { force: force, value: value };\n\t      }\n\t      var promise = this.whenValid(options);\n\t      if (!promise) // Excluded via `group`\n\t        return true;\n\t      return parsley_field__statusMapping[promise.state()];\n\t    },\n\t\n\t    // Just validate field. Do not trigger any event.\n\t    // @returns a promise that succeeds only when all validations do\n\t    // or `undefined` if the field is not in the given `group`.\n\t    // The argument `force` will force validation of empty fields.\n\t    // If a `value` is given, it will be validated instead of the value of the input.\n\t    whenValid: function whenValid() {\n\t      var _this11 = this;\n\t\n\t      var _ref10 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref10$force = _ref10.force;\n\t      var force = _ref10$force === undefined ? false : _ref10$force;\n\t      var value = _ref10.value;\n\t      var group = _ref10.group;\n\t      var _refreshed = _ref10._refreshed;\n\t\n\t      // Recompute options and rebind constraints to have latest changes\n\t      if (!_refreshed) this.refreshConstraints();\n\t      // do not validate a field if not the same as given validation group\n\t      if (group && !this._isInGroup(group)) return;\n\t\n\t      this.validationResult = true;\n\t\n\t      // A field without constraint is valid\n\t      if (!this.hasConstraints()) return $.when();\n\t\n\t      // Value could be passed as argument, needed to add more power to 'field:validate'\n\t      if ('undefined' === typeof value || null === value) value = this.getValue();\n\t\n\t      if (!this.needsValidation(value) && true !== force) return $.when();\n\t\n\t      var groupedConstraints = this._getGroupedConstraints();\n\t      var promises = [];\n\t      $.each(groupedConstraints, function (_, constraints) {\n\t        // Process one group of constraints at a time, we validate the constraints\n\t        // and combine the promises together.\n\t        var promise = ParsleyUtils__default.all($.map(constraints, function (constraint) {\n\t          return _this11._validateConstraint(value, constraint);\n\t        }));\n\t        promises.push(promise);\n\t        if (promise.state() === 'rejected') return false; // Interrupt processing if a group has already failed\n\t      });\n\t      return ParsleyUtils__default.all(promises);\n\t    },\n\t\n\t    // @returns a promise\n\t    _validateConstraint: function _validateConstraint(value, constraint) {\n\t      var _this12 = this;\n\t\n\t      var result = constraint.validate(value, this);\n\t      // Map false to a failed promise\n\t      if (false === result) result = $.Deferred().reject();\n\t      // Make sure we return a promise and that we record failures\n\t      return ParsleyUtils__default.all([result]).fail(function (errorMessage) {\n\t        if (!(_this12.validationResult instanceof Array)) _this12.validationResult = [];\n\t        _this12.validationResult.push({\n\t          assert: constraint,\n\t          errorMessage: 'string' === typeof errorMessage && errorMessage\n\t        });\n\t      });\n\t    },\n\t\n\t    // @returns Parsley field computed value that could be overrided or configured in DOM\n\t    getValue: function getValue() {\n\t      var value;\n\t\n\t      // Value could be overriden in DOM or with explicit options\n\t      if ('function' === typeof this.options.value) value = this.options.value(this);else if ('undefined' !== typeof this.options.value) value = this.options.value;else value = this.$element.val();\n\t\n\t      // Handle wrong DOM or configurations\n\t      if ('undefined' === typeof value || null === value) return '';\n\t\n\t      return this._handleWhitespace(value);\n\t    },\n\t\n\t    // Actualize options that could have change since previous validation\n\t    // Re-bind accordingly constraints (could be some new, removed or updated)\n\t    refreshConstraints: function refreshConstraints() {\n\t      return this.actualizeOptions()._bindConstraints();\n\t    },\n\t\n\t    /**\n\t    * Add a new constraint to a field\n\t    *\n\t    * @param {String}   name\n\t    * @param {Mixed}    requirements      optional\n\t    * @param {Number}   priority          optional\n\t    * @param {Boolean}  isDomConstraint   optional\n\t    */\n\t    addConstraint: function addConstraint(name, requirements, priority, isDomConstraint) {\n\t\n\t      if (window.Parsley._validatorRegistry.validators[name]) {\n\t        var constraint = new ConstraintFactory(this, name, requirements, priority, isDomConstraint);\n\t\n\t        // if constraint already exist, delete it and push new version\n\t        if ('undefined' !== this.constraintsByName[constraint.name]) this.removeConstraint(constraint.name);\n\t\n\t        this.constraints.push(constraint);\n\t        this.constraintsByName[constraint.name] = constraint;\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    // Remove a constraint\n\t    removeConstraint: function removeConstraint(name) {\n\t      for (var i = 0; i < this.constraints.length; i++) {\n\t        if (name === this.constraints[i].name) {\n\t          this.constraints.splice(i, 1);\n\t          break;\n\t        }\n\t      }delete this.constraintsByName[name];\n\t      return this;\n\t    },\n\t\n\t    // Update a constraint (Remove + re-add)\n\t    updateConstraint: function updateConstraint(name, parameters, priority) {\n\t      return this.removeConstraint(name).addConstraint(name, parameters, priority);\n\t    },\n\t\n\t    // # Internals\n\t\n\t    // Internal only.\n\t    // Bind constraints from config + options + DOM\n\t    _bindConstraints: function _bindConstraints() {\n\t      var constraints = [];\n\t      var constraintsByName = {};\n\t\n\t      // clean all existing DOM constraints to only keep javascript user constraints\n\t      for (var i = 0; i < this.constraints.length; i++) {\n\t        if (false === this.constraints[i].isDomConstraint) {\n\t          constraints.push(this.constraints[i]);\n\t          constraintsByName[this.constraints[i].name] = this.constraints[i];\n\t        }\n\t      }this.constraints = constraints;\n\t      this.constraintsByName = constraintsByName;\n\t\n\t      // then re-add Parsley DOM-API constraints\n\t      for (var name in this.options) {\n\t        this.addConstraint(name, this.options[name], undefined, true);\n\t      } // finally, bind special HTML5 constraints\n\t      return this._bindHtml5Constraints();\n\t    },\n\t\n\t    // Internal only.\n\t    // Bind specific HTML5 constraints to be HTML5 compliant\n\t    _bindHtml5Constraints: function _bindHtml5Constraints() {\n\t      // html5 required\n\t      if (this.$element.attr('required')) this.addConstraint('required', true, undefined, true);\n\t\n\t      // html5 pattern\n\t      if ('string' === typeof this.$element.attr('pattern')) this.addConstraint('pattern', this.$element.attr('pattern'), undefined, true);\n\t\n\t      // range\n\t      if (this.$element.attr('type') !== 'date' && 'undefined' !== typeof this.$element.attr('min') && 'undefined' !== typeof this.$element.attr('max')) this.addConstraint('range', [this.$element.attr('min'), this.$element.attr('max')], undefined, true);\n\t\n\t      // HTML5 min\n\t      else if (this.$element.attr('type') !== 'date' && 'undefined' !== typeof this.$element.attr('min')) this.addConstraint('min', this.$element.attr('min'), undefined, true);\n\t\n\t        // HTML5 max\n\t        else if (this.$element.attr('type') !== 'date' && 'undefined' !== typeof this.$element.attr('max')) this.addConstraint('max', this.$element.attr('max'), undefined, true);\n\t\n\t      // length\n\t      if ('undefined' !== typeof this.$element.attr('minlength') && 'undefined' !== typeof this.$element.attr('maxlength')) this.addConstraint('length', [this.$element.attr('minlength'), this.$element.attr('maxlength')], undefined, true);\n\t\n\t      // HTML5 minlength\n\t      else if ('undefined' !== typeof this.$element.attr('minlength')) this.addConstraint('minlength', this.$element.attr('minlength'), undefined, true);\n\t\n\t        // HTML5 maxlength\n\t        else if ('undefined' !== typeof this.$element.attr('maxlength')) this.addConstraint('maxlength', this.$element.attr('maxlength'), undefined, true);\n\t\n\t      // html5 types\n\t      var type = this.$element.attr('type');\n\t\n\t      if ('undefined' === typeof type) return this;\n\t\n\t      // Small special case here for HTML5 number: integer validator if step attribute is undefined or an integer value, number otherwise\n\t      if ('number' === type) {\n\t        return this.addConstraint('type', ['number', {\n\t          step: this.$element.attr('step') || '1',\n\t          base: this.$element.attr('min') || this.$element.attr('value')\n\t        }], undefined, true);\n\t        // Regular other HTML5 supported types\n\t      } else if (/^(email|url|range)$/i.test(type)) {\n\t        return this.addConstraint('type', type, undefined, true);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    // Internal only.\n\t    // Field is required if have required constraint without `false` value\n\t    _isRequired: function _isRequired() {\n\t      if ('undefined' === typeof this.constraintsByName.required) return false;\n\t\n\t      return false !== this.constraintsByName.required.requirements;\n\t    },\n\t\n\t    // Internal only.\n\t    // Shortcut to trigger an event\n\t    _trigger: function _trigger(eventName) {\n\t      return this.trigger('field:' + eventName);\n\t    },\n\t\n\t    // Internal only\n\t    // Handles whitespace in a value\n\t    // Use `data-parsley-whitespace=\"squish\"` to auto squish input value\n\t    // Use `data-parsley-whitespace=\"trim\"` to auto trim input value\n\t    _handleWhitespace: function _handleWhitespace(value) {\n\t      if (true === this.options.trimValue) ParsleyUtils__default.warnOnce('data-parsley-trim-value=\"true\" is deprecated, please use data-parsley-whitespace=\"trim\"');\n\t\n\t      if ('squish' === this.options.whitespace) value = value.replace(/\\s{2,}/g, ' ');\n\t\n\t      if ('trim' === this.options.whitespace || 'squish' === this.options.whitespace || true === this.options.trimValue) value = ParsleyUtils__default.trimString(value);\n\t\n\t      return value;\n\t    },\n\t\n\t    // Internal only.\n\t    // Returns the constraints, grouped by descending priority.\n\t    // The result is thus an array of arrays of constraints.\n\t    _getGroupedConstraints: function _getGroupedConstraints() {\n\t      if (false === this.options.priorityEnabled) return [this.constraints];\n\t\n\t      var groupedConstraints = [];\n\t      var index = {};\n\t\n\t      // Create array unique of priorities\n\t      for (var i = 0; i < this.constraints.length; i++) {\n\t        var p = this.constraints[i].priority;\n\t        if (!index[p]) groupedConstraints.push(index[p] = []);\n\t        index[p].push(this.constraints[i]);\n\t      }\n\t      // Sort them by priority DESC\n\t      groupedConstraints.sort(function (a, b) {\n\t        return b[0].priority - a[0].priority;\n\t      });\n\t\n\t      return groupedConstraints;\n\t    }\n\t\n\t  };\n\t\n\t  var parsley_field = ParsleyField;\n\t\n\t  var ParsleyMultiple = function ParsleyMultiple() {\n\t    this.__class__ = 'ParsleyFieldMultiple';\n\t  };\n\t\n\t  ParsleyMultiple.prototype = {\n\t    // Add new `$element` sibling for multiple field\n\t    addElement: function addElement($element) {\n\t      this.$elements.push($element);\n\t\n\t      return this;\n\t    },\n\t\n\t    // See `ParsleyField.refreshConstraints()`\n\t    refreshConstraints: function refreshConstraints() {\n\t      var fieldConstraints;\n\t\n\t      this.constraints = [];\n\t\n\t      // Select multiple special treatment\n\t      if (this.$element.is('select')) {\n\t        this.actualizeOptions()._bindConstraints();\n\t\n\t        return this;\n\t      }\n\t\n\t      // Gather all constraints for each input in the multiple group\n\t      for (var i = 0; i < this.$elements.length; i++) {\n\t\n\t        // Check if element have not been dynamically removed since last binding\n\t        if (!$('html').has(this.$elements[i]).length) {\n\t          this.$elements.splice(i, 1);\n\t          continue;\n\t        }\n\t\n\t        fieldConstraints = this.$elements[i].data('ParsleyFieldMultiple').refreshConstraints().constraints;\n\t\n\t        for (var j = 0; j < fieldConstraints.length; j++) {\n\t          this.addConstraint(fieldConstraints[j].name, fieldConstraints[j].requirements, fieldConstraints[j].priority, fieldConstraints[j].isDomConstraint);\n\t        }\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    // See `ParsleyField.getValue()`\n\t    getValue: function getValue() {\n\t      // Value could be overriden in DOM\n\t      if ('function' === typeof this.options.value) return this.options.value(this);else if ('undefined' !== typeof this.options.value) return this.options.value;\n\t\n\t      // Radio input case\n\t      if (this.$element.is('input[type=radio]')) return this._findRelated().filter(':checked').val() || '';\n\t\n\t      // checkbox input case\n\t      if (this.$element.is('input[type=checkbox]')) {\n\t        var values = [];\n\t\n\t        this._findRelated().filter(':checked').each(function () {\n\t          values.push($(this).val());\n\t        });\n\t\n\t        return values;\n\t      }\n\t\n\t      // Select multiple case\n\t      if (this.$element.is('select') && null === this.$element.val()) return [];\n\t\n\t      // Default case that should never happen\n\t      return this.$element.val();\n\t    },\n\t\n\t    _init: function _init() {\n\t      this.$elements = [this.$element];\n\t\n\t      return this;\n\t    }\n\t  };\n\t\n\t  var ParsleyFactory = function ParsleyFactory(element, options, parsleyFormInstance) {\n\t    this.$element = $(element);\n\t\n\t    // If the element has already been bound, returns its saved Parsley instance\n\t    var savedparsleyFormInstance = this.$element.data('Parsley');\n\t    if (savedparsleyFormInstance) {\n\t\n\t      // If the saved instance has been bound without a ParsleyForm parent and there is one given in this call, add it\n\t      if ('undefined' !== typeof parsleyFormInstance && savedparsleyFormInstance.parent === window.Parsley) {\n\t        savedparsleyFormInstance.parent = parsleyFormInstance;\n\t        savedparsleyFormInstance._resetOptions(savedparsleyFormInstance.options);\n\t      }\n\t\n\t      if ('object' === (typeof options === 'undefined' ? 'undefined' : _typeof(options))) {\n\t        $.extend(savedparsleyFormInstance.options, options);\n\t      }\n\t\n\t      return savedparsleyFormInstance;\n\t    }\n\t\n\t    // Parsley must be instantiated with a DOM element or jQuery $element\n\t    if (!this.$element.length) throw new Error('You must bind Parsley on an existing element.');\n\t\n\t    if ('undefined' !== typeof parsleyFormInstance && 'ParsleyForm' !== parsleyFormInstance.__class__) throw new Error('Parent instance must be a ParsleyForm instance');\n\t\n\t    this.parent = parsleyFormInstance || window.Parsley;\n\t    return this.init(options);\n\t  };\n\t\n\t  ParsleyFactory.prototype = {\n\t    init: function init(options) {\n\t      this.__class__ = 'Parsley';\n\t      this.__version__ = '2.6.2';\n\t      this.__id__ = ParsleyUtils__default.generateID();\n\t\n\t      // Pre-compute options\n\t      this._resetOptions(options);\n\t\n\t      // A ParsleyForm instance is obviously a `<form>` element but also every node that is not an input and has the `data-parsley-validate` attribute\n\t      if (this.$element.is('form') || ParsleyUtils__default.checkAttr(this.$element, this.options.namespace, 'validate') && !this.$element.is(this.options.inputs)) return this.bind('parsleyForm');\n\t\n\t      // Every other element is bound as a `ParsleyField` or `ParsleyFieldMultiple`\n\t      return this.isMultiple() ? this.handleMultiple() : this.bind('parsleyField');\n\t    },\n\t\n\t    isMultiple: function isMultiple() {\n\t      return this.$element.is('input[type=radio], input[type=checkbox]') || this.$element.is('select') && 'undefined' !== typeof this.$element.attr('multiple');\n\t    },\n\t\n\t    // Multiples fields are a real nightmare :(\n\t    // Maybe some refactoring would be appreciated here...\n\t    handleMultiple: function handleMultiple() {\n\t      var _this13 = this;\n\t\n\t      var name;\n\t      var multiple;\n\t      var parsleyMultipleInstance;\n\t\n\t      // Handle multiple name\n\t      if (this.options.multiple) ; // We already have our 'multiple' identifier\n\t      else if ('undefined' !== typeof this.$element.attr('name') && this.$element.attr('name').length) this.options.multiple = name = this.$element.attr('name');else if ('undefined' !== typeof this.$element.attr('id') && this.$element.attr('id').length) this.options.multiple = this.$element.attr('id');\n\t\n\t      // Special select multiple input\n\t      if (this.$element.is('select') && 'undefined' !== typeof this.$element.attr('multiple')) {\n\t        this.options.multiple = this.options.multiple || this.__id__;\n\t        return this.bind('parsleyFieldMultiple');\n\t\n\t        // Else for radio / checkboxes, we need a `name` or `data-parsley-multiple` to properly bind it\n\t      } else if (!this.options.multiple) {\n\t        ParsleyUtils__default.warn('To be bound by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.', this.$element);\n\t        return this;\n\t      }\n\t\n\t      // Remove special chars\n\t      this.options.multiple = this.options.multiple.replace(/(:|\\.|\\[|\\]|\\{|\\}|\\$)/g, '');\n\t\n\t      // Add proper `data-parsley-multiple` to siblings if we have a valid multiple name\n\t      if ('undefined' !== typeof name) {\n\t        $('input[name=\"' + name + '\"]').each(function (i, input) {\n\t          if ($(input).is('input[type=radio], input[type=checkbox]')) $(input).attr(_this13.options.namespace + 'multiple', _this13.options.multiple);\n\t        });\n\t      }\n\t\n\t      // Check here if we don't already have a related multiple instance saved\n\t      var $previouslyRelated = this._findRelated();\n\t      for (var i = 0; i < $previouslyRelated.length; i++) {\n\t        parsleyMultipleInstance = $($previouslyRelated.get(i)).data('Parsley');\n\t        if ('undefined' !== typeof parsleyMultipleInstance) {\n\t\n\t          if (!this.$element.data('ParsleyFieldMultiple')) {\n\t            parsleyMultipleInstance.addElement(this.$element);\n\t          }\n\t\n\t          break;\n\t        }\n\t      }\n\t\n\t      // Create a secret ParsleyField instance for every multiple field. It will be stored in `data('ParsleyFieldMultiple')`\n\t      // And will be useful later to access classic `ParsleyField` stuff while being in a `ParsleyFieldMultiple` instance\n\t      this.bind('parsleyField', true);\n\t\n\t      return parsleyMultipleInstance || this.bind('parsleyFieldMultiple');\n\t    },\n\t\n\t    // Return proper `ParsleyForm`, `ParsleyField` or `ParsleyFieldMultiple`\n\t    bind: function bind(type, doNotStore) {\n\t      var parsleyInstance;\n\t\n\t      switch (type) {\n\t        case 'parsleyForm':\n\t          parsleyInstance = $.extend(new ParsleyForm(this.$element, this.domOptions, this.options), new ParsleyAbstract(), window.ParsleyExtend)._bindFields();\n\t          break;\n\t        case 'parsleyField':\n\t          parsleyInstance = $.extend(new parsley_field(this.$element, this.domOptions, this.options, this.parent), new ParsleyAbstract(), window.ParsleyExtend);\n\t          break;\n\t        case 'parsleyFieldMultiple':\n\t          parsleyInstance = $.extend(new parsley_field(this.$element, this.domOptions, this.options, this.parent), new ParsleyMultiple(), new ParsleyAbstract(), window.ParsleyExtend)._init();\n\t          break;\n\t        default:\n\t          throw new Error(type + 'is not a supported Parsley type');\n\t      }\n\t\n\t      if (this.options.multiple) ParsleyUtils__default.setAttr(this.$element, this.options.namespace, 'multiple', this.options.multiple);\n\t\n\t      if ('undefined' !== typeof doNotStore) {\n\t        this.$element.data('ParsleyFieldMultiple', parsleyInstance);\n\t\n\t        return parsleyInstance;\n\t      }\n\t\n\t      // Store the freshly bound instance in a DOM element for later access using jQuery `data()`\n\t      this.$element.data('Parsley', parsleyInstance);\n\t\n\t      // Tell the world we have a new ParsleyForm or ParsleyField instance!\n\t      parsleyInstance._actualizeTriggers();\n\t      parsleyInstance._trigger('init');\n\t\n\t      return parsleyInstance;\n\t    }\n\t  };\n\t\n\t  var vernums = $.fn.jquery.split('.');\n\t  if (parseInt(vernums[0]) <= 1 && parseInt(vernums[1]) < 8) {\n\t    throw \"The loaded version of jQuery is too old. Please upgrade to 1.8.x or better.\";\n\t  }\n\t  if (!vernums.forEach) {\n\t    ParsleyUtils__default.warn('Parsley requires ES5 to run properly. Please include https://github.com/es-shims/es5-shim');\n\t  }\n\t  // Inherit `on`, `off` & `trigger` to Parsley:\n\t  var Parsley = $.extend(new ParsleyAbstract(), {\n\t    $element: $(document),\n\t    actualizeOptions: null,\n\t    _resetOptions: null,\n\t    Factory: ParsleyFactory,\n\t    version: '2.6.2'\n\t  });\n\t\n\t  // Supplement ParsleyField and Form with ParsleyAbstract\n\t  // This way, the constructors will have access to those methods\n\t  $.extend(parsley_field.prototype, ParsleyUI.Field, ParsleyAbstract.prototype);\n\t  $.extend(ParsleyForm.prototype, ParsleyUI.Form, ParsleyAbstract.prototype);\n\t  // Inherit actualizeOptions and _resetOptions:\n\t  $.extend(ParsleyFactory.prototype, ParsleyAbstract.prototype);\n\t\n\t  // ### jQuery API\n\t  // `$('.elem').parsley(options)` or `$('.elem').psly(options)`\n\t  $.fn.parsley = $.fn.psly = function (options) {\n\t    if (this.length > 1) {\n\t      var instances = [];\n\t\n\t      this.each(function () {\n\t        instances.push($(this).parsley(options));\n\t      });\n\t\n\t      return instances;\n\t    }\n\t\n\t    // Return undefined if applied to non existing DOM element\n\t    if (!$(this).length) {\n\t      ParsleyUtils__default.warn('You must bind Parsley on an existing element.');\n\t\n\t      return;\n\t    }\n\t\n\t    return new ParsleyFactory(this, options);\n\t  };\n\t\n\t  // ### ParsleyField and ParsleyForm extension\n\t  // Ensure the extension is now defined if it wasn't previously\n\t  if ('undefined' === typeof window.ParsleyExtend) window.ParsleyExtend = {};\n\t\n\t  // ### Parsley config\n\t  // Inherit from ParsleyDefault, and copy over any existing values\n\t  Parsley.options = $.extend(ParsleyUtils__default.objectCreate(ParsleyDefaults), window.ParsleyConfig);\n\t  window.ParsleyConfig = Parsley.options; // Old way of accessing global options\n\t\n\t  // ### Globals\n\t  window.Parsley = window.psly = Parsley;\n\t  window.ParsleyUtils = ParsleyUtils__default;\n\t\n\t  // ### Define methods that forward to the registry, and deprecate all access except through window.Parsley\n\t  var registry = window.Parsley._validatorRegistry = new ParsleyValidatorRegistry(window.ParsleyConfig.validators, window.ParsleyConfig.i18n);\n\t  window.ParsleyValidator = {};\n\t  $.each('setLocale addCatalog addMessage addMessages getErrorMessage formatMessage addValidator updateValidator removeValidator'.split(' '), function (i, method) {\n\t    window.Parsley[method] = $.proxy(registry, method);\n\t    window.ParsleyValidator[method] = function () {\n\t      var _window$Parsley;\n\t\n\t      ParsleyUtils__default.warnOnce('Accessing the method \\'' + method + '\\' through ParsleyValidator is deprecated. Simply call \\'window.Parsley.' + method + '(...)\\'');\n\t      return (_window$Parsley = window.Parsley)[method].apply(_window$Parsley, arguments);\n\t    };\n\t  });\n\t\n\t  // ### ParsleyUI\n\t  // Deprecated global object\n\t  window.Parsley.UI = ParsleyUI;\n\t  window.ParsleyUI = {\n\t    removeError: function removeError(instance, name, doNotUpdateClass) {\n\t      var updateClass = true !== doNotUpdateClass;\n\t      ParsleyUtils__default.warnOnce('Accessing ParsleyUI is deprecated. Call \\'removeError\\' on the instance directly. Please comment in issue 1073 as to your need to call this method.');\n\t      return instance.removeError(name, { updateClass: updateClass });\n\t    },\n\t    getErrorsMessages: function getErrorsMessages(instance) {\n\t      ParsleyUtils__default.warnOnce('Accessing ParsleyUI is deprecated. Call \\'getErrorsMessages\\' on the instance directly.');\n\t      return instance.getErrorsMessages();\n\t    }\n\t  };\n\t  $.each('addError updateError'.split(' '), function (i, method) {\n\t    window.ParsleyUI[method] = function (instance, name, message, assert, doNotUpdateClass) {\n\t      var updateClass = true !== doNotUpdateClass;\n\t      ParsleyUtils__default.warnOnce('Accessing ParsleyUI is deprecated. Call \\'' + method + '\\' on the instance directly. Please comment in issue 1073 as to your need to call this method.');\n\t      return instance[method](name, { message: message, assert: assert, updateClass: updateClass });\n\t    };\n\t  });\n\t\n\t  // ### PARSLEY auto-binding\n\t  // Prevent it by setting `ParsleyConfig.autoBind` to `false`\n\t  if (false !== window.ParsleyConfig.autoBind) {\n\t    $(function () {\n\t      // Works only on `data-parsley-validate`.\n\t      if ($('[data-parsley-validate]').length) $('[data-parsley-validate]').parsley();\n\t    });\n\t  }\n\t\n\t  var o = $({});\n\t  var deprecated = function deprecated() {\n\t    ParsleyUtils__default.warnOnce(\"Parsley's pubsub module is deprecated; use the 'on' and 'off' methods on parsley instances or window.Parsley\");\n\t  };\n\t\n\t  // Returns an event handler that calls `fn` with the arguments it expects\n\t  function adapt(fn, context) {\n\t    // Store to allow unbinding\n\t    if (!fn.parsleyAdaptedCallback) {\n\t      fn.parsleyAdaptedCallback = function () {\n\t        var args = Array.prototype.slice.call(arguments, 0);\n\t        args.unshift(this);\n\t        fn.apply(context || o, args);\n\t      };\n\t    }\n\t    return fn.parsleyAdaptedCallback;\n\t  }\n\t\n\t  var eventPrefix = 'parsley:';\n\t  // Converts 'parsley:form:validate' into 'form:validate'\n\t  function eventName(name) {\n\t    if (name.lastIndexOf(eventPrefix, 0) === 0) return name.substr(eventPrefix.length);\n\t    return name;\n\t  }\n\t\n\t  // $.listen is deprecated. Use Parsley.on instead.\n\t  $.listen = function (name, callback) {\n\t    var context;\n\t    deprecated();\n\t    if ('object' === _typeof(arguments[1]) && 'function' === typeof arguments[2]) {\n\t      context = arguments[1];\n\t      callback = arguments[2];\n\t    }\n\t\n\t    if ('function' !== typeof callback) throw new Error('Wrong parameters');\n\t\n\t    window.Parsley.on(eventName(name), adapt(callback, context));\n\t  };\n\t\n\t  $.listenTo = function (instance, name, fn) {\n\t    deprecated();\n\t    if (!(instance instanceof parsley_field) && !(instance instanceof ParsleyForm)) throw new Error('Must give Parsley instance');\n\t\n\t    if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong parameters');\n\t\n\t    instance.on(eventName(name), adapt(fn));\n\t  };\n\t\n\t  $.unsubscribe = function (name, fn) {\n\t    deprecated();\n\t    if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong arguments');\n\t    window.Parsley.off(eventName(name), fn.parsleyAdaptedCallback);\n\t  };\n\t\n\t  $.unsubscribeTo = function (instance, name) {\n\t    deprecated();\n\t    if (!(instance instanceof parsley_field) && !(instance instanceof ParsleyForm)) throw new Error('Must give Parsley instance');\n\t    instance.off(eventName(name));\n\t  };\n\t\n\t  $.unsubscribeAll = function (name) {\n\t    deprecated();\n\t    window.Parsley.off(eventName(name));\n\t    $('form,input,textarea,select').each(function () {\n\t      var instance = $(this).data('Parsley');\n\t      if (instance) {\n\t        instance.off(eventName(name));\n\t      }\n\t    });\n\t  };\n\t\n\t  // $.emit is deprecated. Use jQuery events instead.\n\t  $.emit = function (name, instance) {\n\t    var _instance;\n\t\n\t    deprecated();\n\t    var instanceGiven = instance instanceof parsley_field || instance instanceof ParsleyForm;\n\t    var args = Array.prototype.slice.call(arguments, instanceGiven ? 2 : 1);\n\t    args.unshift(eventName(name));\n\t    if (!instanceGiven) {\n\t      instance = window.Parsley;\n\t    }\n\t    (_instance = instance).trigger.apply(_instance, _toConsumableArray(args));\n\t  };\n\t\n\t  var pubsub = {};\n\t\n\t  $.extend(true, Parsley, {\n\t    asyncValidators: {\n\t      'default': {\n\t        fn: function fn(xhr) {\n\t          // By default, only status 2xx are deemed successful.\n\t          // Note: we use status instead of state() because responses with status 200\n\t          // but invalid messages (e.g. an empty body for content type set to JSON) will\n\t          // result in state() === 'rejected'.\n\t          return xhr.status >= 200 && xhr.status < 300;\n\t        },\n\t        url: false\n\t      },\n\t      reverse: {\n\t        fn: function fn(xhr) {\n\t          // If reverse option is set, a failing ajax request is considered successful\n\t          return xhr.status < 200 || xhr.status >= 300;\n\t        },\n\t        url: false\n\t      }\n\t    },\n\t\n\t    addAsyncValidator: function addAsyncValidator(name, fn, url, options) {\n\t      Parsley.asyncValidators[name] = {\n\t        fn: fn,\n\t        url: url || false,\n\t        options: options || {}\n\t      };\n\t\n\t      return this;\n\t    }\n\t\n\t  });\n\t\n\t  Parsley.addValidator('remote', {\n\t    requirementType: {\n\t      '': 'string',\n\t      'validator': 'string',\n\t      'reverse': 'boolean',\n\t      'options': 'object'\n\t    },\n\t\n\t    validateString: function validateString(value, url, options, instance) {\n\t      var data = {};\n\t      var ajaxOptions;\n\t      var csr;\n\t      var validator = options.validator || (true === options.reverse ? 'reverse' : 'default');\n\t\n\t      if ('undefined' === typeof Parsley.asyncValidators[validator]) throw new Error('Calling an undefined async validator: `' + validator + '`');\n\t\n\t      url = Parsley.asyncValidators[validator].url || url;\n\t\n\t      // Fill current value\n\t      if (url.indexOf('{value}') > -1) {\n\t        url = url.replace('{value}', encodeURIComponent(value));\n\t      } else {\n\t        data[instance.$element.attr('name') || instance.$element.attr('id')] = value;\n\t      }\n\t\n\t      // Merge options passed in from the function with the ones in the attribute\n\t      var remoteOptions = $.extend(true, options.options || {}, Parsley.asyncValidators[validator].options);\n\t\n\t      // All `$.ajax(options)` could be overridden or extended directly from DOM in `data-parsley-remote-options`\n\t      ajaxOptions = $.extend(true, {}, {\n\t        url: url,\n\t        data: data,\n\t        type: 'GET'\n\t      }, remoteOptions);\n\t\n\t      // Generate store key based on ajax options\n\t      instance.trigger('field:ajaxoptions', instance, ajaxOptions);\n\t\n\t      csr = $.param(ajaxOptions);\n\t\n\t      // Initialise querry cache\n\t      if ('undefined' === typeof Parsley._remoteCache) Parsley._remoteCache = {};\n\t\n\t      // Try to retrieve stored xhr\n\t      var xhr = Parsley._remoteCache[csr] = Parsley._remoteCache[csr] || $.ajax(ajaxOptions);\n\t\n\t      var handleXhr = function handleXhr() {\n\t        var result = Parsley.asyncValidators[validator].fn.call(instance, xhr, url, options);\n\t        if (!result) // Map falsy results to rejected promise\n\t          result = $.Deferred().reject();\n\t        return $.when(result);\n\t      };\n\t\n\t      return xhr.then(handleXhr, handleXhr);\n\t    },\n\t\n\t    priority: -1\n\t  });\n\t\n\t  Parsley.on('form:submit', function () {\n\t    Parsley._remoteCache = {};\n\t  });\n\t\n\t  window.ParsleyExtend.addAsyncValidator = function () {\n\t    ParsleyUtils.warnOnce('Accessing the method `addAsyncValidator` through an instance is deprecated. Simply call `Parsley.addAsyncValidator(...)`');\n\t    return Parsley.addAsyncValidator.apply(Parsley, arguments);\n\t  };\n\t\n\t  // This is included with the Parsley library itself,\n\t  // thus there is no use in adding it to your project.\n\t  Parsley.addMessages('en', {\n\t    defaultMessage: \"This value seems to be invalid.\",\n\t    type: {\n\t      email: \"This value should be a valid email.\",\n\t      url: \"This value should be a valid url.\",\n\t      number: \"This value should be a valid number.\",\n\t      integer: \"This value should be a valid integer.\",\n\t      digits: \"This value should be digits.\",\n\t      alphanum: \"This value should be alphanumeric.\"\n\t    },\n\t    notblank: \"This value should not be blank.\",\n\t    required: \"This value is required.\",\n\t    pattern: \"This value seems to be invalid.\",\n\t    min: \"This value should be greater than or equal to %s.\",\n\t    max: \"This value should be lower than or equal to %s.\",\n\t    range: \"This value should be between %s and %s.\",\n\t    minlength: \"This value is too short. It should have %s characters or more.\",\n\t    maxlength: \"This value is too long. It should have %s characters or fewer.\",\n\t    length: \"This value length is invalid. It should be between %s and %s characters long.\",\n\t    mincheck: \"You must select at least %s choices.\",\n\t    maxcheck: \"You must select %s choices or fewer.\",\n\t    check: \"You must select between %s and %s choices.\",\n\t    equalto: \"This value should be the same.\"\n\t  });\n\t\n\t  Parsley.setLocale('en');\n\t\n\t  /**\n\t   * inputevent - Alleviate browser bugs for input events\n\t   * https://github.com/marcandre/inputevent\n\t   * @version v0.0.3 - (built Thu, Apr 14th 2016, 5:58 pm)\n\t   * @author Marc-Andre Lafortune <github@marc-andre.ca>\n\t   * @license MIT\n\t   */\n\t\n\t  function InputEvent() {\n\t    var _this14 = this;\n\t\n\t    var globals = window || global;\n\t\n\t    // Slightly odd way construct our object. This way methods are force bound.\n\t    // Used to test for duplicate library.\n\t    $.extend(this, {\n\t\n\t      // For browsers that do not support isTrusted, assumes event is native.\n\t      isNativeEvent: function isNativeEvent(evt) {\n\t        return evt.originalEvent && evt.originalEvent.isTrusted !== false;\n\t      },\n\t\n\t      fakeInputEvent: function fakeInputEvent(evt) {\n\t        if (_this14.isNativeEvent(evt)) {\n\t          $(evt.target).trigger('input');\n\t        }\n\t      },\n\t\n\t      misbehaves: function misbehaves(evt) {\n\t        if (_this14.isNativeEvent(evt)) {\n\t          _this14.behavesOk(evt);\n\t          $(document).on('change.inputevent', evt.data.selector, _this14.fakeInputEvent);\n\t          _this14.fakeInputEvent(evt);\n\t        }\n\t      },\n\t\n\t      behavesOk: function behavesOk(evt) {\n\t        if (_this14.isNativeEvent(evt)) {\n\t          $(document) // Simply unbinds the testing handler\n\t          .off('input.inputevent', evt.data.selector, _this14.behavesOk).off('change.inputevent', evt.data.selector, _this14.misbehaves);\n\t        }\n\t      },\n\t\n\t      // Bind the testing handlers\n\t      install: function install() {\n\t        if (globals.inputEventPatched) {\n\t          return;\n\t        }\n\t        globals.inputEventPatched = '0.0.3';\n\t        var _arr = ['select', 'input[type=\"checkbox\"]', 'input[type=\"radio\"]', 'input[type=\"file\"]'];\n\t        for (var _i = 0; _i < _arr.length; _i++) {\n\t          var selector = _arr[_i];\n\t          $(document).on('input.inputevent', selector, { selector: selector }, _this14.behavesOk).on('change.inputevent', selector, { selector: selector }, _this14.misbehaves);\n\t        }\n\t      },\n\t\n\t      uninstall: function uninstall() {\n\t        delete globals.inputEventPatched;\n\t        $(document).off('.inputevent');\n\t      }\n\t\n\t    });\n\t  };\n\t\n\t  var inputevent = new InputEvent();\n\t\n\t  inputevent.install();\n\t\n\t  var parsley = Parsley;\n\t\n\t  return parsley;\n\t});\n\t//# sourceMappingURL=parsley.js.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 52:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// js/login/index.js","var dialog = require('../common/dialog');\nvar parsley = require('../common/parsley');\n\nrequire('spectre.css');\nrequire('../common/style/base.scss');\nrequire('./index.scss');\n\n$(document).ready(function() {\n\n  //隐藏服务器消息\n  setTimeout(function() {\n    $('.warning-info').slideToggle();\n  }, 3000);\n\n  //dialog('6666', null, 3000);\n\n  $('#login-form').parsley().on('field:validated', function() {\n      var ok = $('.parsley-error').length === 0;\n    })\n    .on('form:submit', function() {\n      //return false;\n    });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./views/login/index.js","/*! artDialog v6.0.5 | https://github.com/aui/artDialog */ !(function() {\n\n  var __modules__ = {};\n\n  function require(id) {\n    var mod = __modules__[id];\n    var exports = 'exports';\n\n    if (typeof mod === 'object') {\n      return mod;\n    }\n\n    if (!mod[exports]) {\n      mod[exports] = {};\n      mod[exports] = mod.call(mod[exports], require, mod[exports], mod) || mod[exports];\n    }\n\n    return mod[exports];\n  }\n\n  function define(path, fn) {\n    __modules__[path] = fn;\n  }\n\n\n\n  define(\"jquery\", function() {\n    return jQuery;\n  });\n\n\n  /*!\n   * PopupJS\n   * Date: 2014-11-09\n   * https://github.com/aui/popupjs\n   * (c) 2009-2014 TangBin, http://www.planeArt.cn\n   *\n   * This is licensed under the GNU LGPL, version 2.1 or later.\n   * For details, see: http://www.gnu.org/licenses/lgpl-2.1.html\n   */\n\n  define(\"popup\", function(require) {\n\n    var $ = require(\"jquery\");\n\n    var _count = 0;\n    var _isIE6 = !('minWidth' in $('html')[0].style);\n    var _isFixed = !_isIE6;\n\n\n    function Popup() {\n\n      this.destroyed = false;\n\n\n      this.__popup = $('<div />')\n        /*使用 <dialog /> 元素可能导致 z-index 永远置顶的问题(chrome)*/\n        .css({\n          display: 'none',\n          position: 'absolute',\n          /*\n          left: 0,\n          top: 0,\n          bottom: 'auto',\n          right: 'auto',\n          margin: 0,\n          padding: 0,\n          border: '0 none',\n          background: 'transparent'\n          */\n          outline: 0\n        })\n        .attr('tabindex', '-1')\n        .html(this.innerHTML)\n        .appendTo('body');\n\n\n      this.__backdrop = this.__mask = $('<div />')\n        .css({\n          opacity: .7,\n          background: '#000'\n        });\n\n\n      // 使用 HTMLElement 作为外部接口使用，而不是 jquery 对象\n      // 统一的接口利于未来 Popup 移植到其他 DOM 库中\n      this.node = this.__popup[0];\n      this.backdrop = this.__backdrop[0];\n\n      _count++;\n    }\n\n\n    $.extend(Popup.prototype, {\n\n      /**\n       * 初始化完毕事件，在 show()、showModal() 执行\n       * @name Popup.prototype.onshow\n       * @event\n       */\n\n      /**\n       * 关闭事件，在 close() 执行\n       * @name Popup.prototype.onclose\n       * @event\n       */\n\n      /**\n       * 销毁前事件，在 remove() 前执行\n       * @name Popup.prototype.onbeforeremove\n       * @event\n       */\n\n      /**\n       * 销毁事件，在 remove() 执行\n       * @name Popup.prototype.onremove\n       * @event\n       */\n\n      /**\n       * 重置事件，在 reset() 执行\n       * @name Popup.prototype.onreset\n       * @event\n       */\n\n      /**\n       * 焦点事件，在 foucs() 执行\n       * @name Popup.prototype.onfocus\n       * @event\n       */\n\n      /**\n       * 失焦事件，在 blur() 执行\n       * @name Popup.prototype.onblur\n       * @event\n       */\n\n      /** 浮层 DOM 素节点[*] */\n      node: null,\n\n      /** 遮罩 DOM 节点[*] */\n      backdrop: null,\n\n      /** 是否开启固定定位[*] */\n      fixed: false,\n\n      /** 判断对话框是否删除[*] */\n      destroyed: true,\n\n      /** 判断对话框是否显示 */\n      open: false,\n\n      /** close 返回值 */\n      returnValue: '',\n\n      /** 是否自动聚焦 */\n      autofocus: true,\n\n      /** 对齐方式[*] */\n      align: 'bottom left',\n\n      /** 内部的 HTML 字符串 */\n      innerHTML: '',\n\n      /** CSS 类名 */\n      className: 'ui-popup',\n\n      /**\n       * 显示浮层\n       * @param   {HTMLElement, Event}  指定位置（可选）\n       */\n      show: function(anchor) {\n\n        if (this.destroyed) {\n          return this;\n        }\n\n        var that = this;\n        var popup = this.__popup;\n        var backdrop = this.__backdrop;\n\n        this.__activeElement = this.__getActive();\n\n        this.open = true;\n        this.follow = anchor || this.follow;\n\n\n        // 初始化 show 方法\n        if (!this.__ready) {\n\n          popup\n            .addClass(this.className)\n            .attr('role', this.modal ? 'alertdialog' : 'dialog')\n            .css('position', this.fixed ? 'fixed' : 'absolute');\n\n          if (!_isIE6) {\n            $(window).on('resize', $.proxy(this.reset, this));\n          }\n\n          // 模态浮层的遮罩\n          if (this.modal) {\n            var backdropCss = {\n              position: 'fixed',\n              left: 0,\n              top: 0,\n              width: '100%',\n              height: '100%',\n              overflow: 'hidden',\n              userSelect: 'none',\n              zIndex: this.zIndex || Popup.zIndex\n            };\n\n\n            popup.addClass(this.className + '-modal');\n\n\n            if (!_isFixed) {\n              $.extend(backdropCss, {\n                position: 'absolute',\n                width: $(window).width() + 'px',\n                height: $(document).height() + 'px'\n              });\n            }\n\n\n            backdrop\n              .css(backdropCss)\n              .attr({\n                tabindex: '0'\n              })\n              .on('focus', $.proxy(this.focus, this));\n\n            // 锁定 tab 的焦点操作\n            this.__mask = backdrop\n              .clone(true)\n              .attr('style', '')\n              .insertAfter(popup);\n\n            backdrop\n              .addClass(this.className + '-backdrop')\n              .insertBefore(popup);\n\n            this.__ready = true;\n          }\n\n\n          if (!popup.html()) {\n            popup.html(this.innerHTML);\n          }\n        }\n\n\n        popup\n          .addClass(this.className + '-show')\n          .show();\n\n        backdrop.show();\n\n\n        this.reset().focus();\n        this.__dispatchEvent('show');\n\n        return this;\n      },\n\n\n      /** 显示模态浮层。参数参见 show() */\n      showModal: function() {\n        this.modal = true;\n        return this.show.apply(this, arguments);\n      },\n\n\n      /** 关闭浮层 */\n      close: function(result) {\n\n        if (!this.destroyed && this.open) {\n\n          if (result !== undefined) {\n            this.returnValue = result;\n          }\n\n          this.__popup.hide().removeClass(this.className + '-show');\n          this.__backdrop.hide();\n          this.open = false;\n          this.blur(); // 恢复焦点，照顾键盘操作的用户\n          this.__dispatchEvent('close');\n        }\n\n        return this;\n      },\n\n\n      /** 销毁浮层 */\n      remove: function() {\n\n        if (this.destroyed) {\n          return this;\n        }\n\n        this.__dispatchEvent('beforeremove');\n\n        if (Popup.current === this) {\n          Popup.current = null;\n        }\n\n\n        // 从 DOM 中移除节点\n        this.__popup.remove();\n        this.__backdrop.remove();\n        this.__mask.remove();\n\n\n        if (!_isIE6) {\n          $(window).off('resize', this.reset);\n        }\n\n\n        this.__dispatchEvent('remove');\n\n        for (var i in this) {\n          delete this[i];\n        }\n\n        return this;\n      },\n\n\n      /** 重置位置 */\n      reset: function() {\n\n        var elem = this.follow;\n\n        if (elem) {\n          this.__follow(elem);\n        } else {\n          this.__center();\n        }\n\n        this.__dispatchEvent('reset');\n\n        return this;\n      },\n\n\n      /** 让浮层获取焦点 */\n      focus: function() {\n\n        var node = this.node;\n        var popup = this.__popup;\n        var current = Popup.current;\n        var index = this.zIndex = Popup.zIndex++;\n\n        if (current && current !== this) {\n          current.blur(false);\n        }\n\n        // 检查焦点是否在浮层里面\n        if (!$.contains(node, this.__getActive())) {\n          var autofocus = popup.find('[autofocus]')[0];\n\n          if (!this._autofocus && autofocus) {\n            this._autofocus = true;\n          } else {\n            autofocus = node;\n          }\n\n          this.__focus(autofocus);\n        }\n\n        // 设置叠加高度\n        popup.css('zIndex', index);\n        //this.__backdrop.css('zIndex', index);\n\n        Popup.current = this;\n        popup.addClass(this.className + '-focus');\n\n        this.__dispatchEvent('focus');\n\n        return this;\n      },\n\n\n      /** 让浮层失去焦点。将焦点退还给之前的元素，照顾视力障碍用户 */\n      blur: function() {\n\n        var activeElement = this.__activeElement;\n        var isBlur = arguments[0];\n\n\n        if (isBlur !== false) {\n          this.__focus(activeElement);\n        }\n\n        this._autofocus = false;\n        this.__popup.removeClass(this.className + '-focus');\n        this.__dispatchEvent('blur');\n\n        return this;\n      },\n\n\n      /**\n       * 添加事件\n       * @param   {String}    事件类型\n       * @param   {Function}  监听函数\n       */\n      addEventListener: function(type, callback) {\n        this.__getEventListener(type).push(callback);\n        return this;\n      },\n\n\n      /**\n       * 删除事件\n       * @param   {String}    事件类型\n       * @param   {Function}  监听函数\n       */\n      removeEventListener: function(type, callback) {\n        var listeners = this.__getEventListener(type);\n        for (var i = 0; i < listeners.length; i++) {\n          if (callback === listeners[i]) {\n            listeners.splice(i--, 1);\n          }\n        }\n        return this;\n      },\n\n\n      // 获取事件缓存\n      __getEventListener: function(type) {\n        var listener = this.__listener;\n        if (!listener) {\n          listener = this.__listener = {};\n        }\n        if (!listener[type]) {\n          listener[type] = [];\n        }\n        return listener[type];\n      },\n\n\n      // 派发事件\n      __dispatchEvent: function(type) {\n        var listeners = this.__getEventListener(type);\n\n        if (this['on' + type]) {\n          this['on' + type]();\n        }\n\n        for (var i = 0; i < listeners.length; i++) {\n          listeners[i].call(this);\n        }\n      },\n\n\n      // 对元素安全聚焦\n      __focus: function(elem) {\n        // 防止 iframe 跨域无权限报错\n        // 防止 IE 不可见元素报错\n        try {\n          // ie11 bug: iframe 页面点击会跳到顶部\n          if (this.autofocus && !/^iframe$/i.test(elem.nodeName)) {\n            elem.focus();\n          }\n        } catch (e) {}\n      },\n\n\n      // 获取当前焦点的元素\n      __getActive: function() {\n        try { // try: ie8~9, iframe #26\n          var activeElement = document.activeElement;\n          var contentDocument = activeElement.contentDocument;\n          var elem = contentDocument && contentDocument.activeElement || activeElement;\n          return elem;\n        } catch (e) {}\n      },\n\n\n      // 居中浮层\n      __center: function() {\n\n        var popup = this.__popup;\n        var $window = $(window);\n        var $document = $(document);\n        var fixed = this.fixed;\n        var dl = fixed ? 0 : $document.scrollLeft();\n        var dt = fixed ? 0 : $document.scrollTop();\n        var ww = $window.width();\n        var wh = $window.height();\n        var ow = popup.width();\n        var oh = popup.height();\n        var left = (ww - ow) / 2 + dl;\n        var top = (wh - oh) * 382 / 1000 + dt; // 黄金比例\n        var style = popup[0].style;\n\n\n        style.left = Math.max(parseInt(left), dl) + 'px';\n        style.top = Math.max(parseInt(top), dt) + 'px';\n      },\n\n\n      // 指定位置 @param    {HTMLElement, Event}  anchor\n      __follow: function(anchor) {\n\n        var $elem = anchor.parentNode && $(anchor);\n        var popup = this.__popup;\n\n\n        if (this.__followSkin) {\n          popup.removeClass(this.__followSkin);\n        }\n\n\n        // 隐藏元素不可用\n        if ($elem) {\n          var o = $elem.offset();\n          if (o.left * o.top < 0) {\n            return this.__center();\n          }\n        }\n\n        var that = this;\n        var fixed = this.fixed;\n\n        var $window = $(window);\n        var $document = $(document);\n        var winWidth = $window.width();\n        var winHeight = $window.height();\n        var docLeft = $document.scrollLeft();\n        var docTop = $document.scrollTop();\n\n\n        var popupWidth = popup.width();\n        var popupHeight = popup.height();\n        var width = $elem ? $elem.outerWidth() : 0;\n        var height = $elem ? $elem.outerHeight() : 0;\n        var offset = this.__offset(anchor);\n        var x = offset.left;\n        var y = offset.top;\n        var left = fixed ? x - docLeft : x;\n        var top = fixed ? y - docTop : y;\n\n\n        var minLeft = fixed ? 0 : docLeft;\n        var minTop = fixed ? 0 : docTop;\n        var maxLeft = minLeft + winWidth - popupWidth;\n        var maxTop = minTop + winHeight - popupHeight;\n\n\n        var css = {};\n        var align = this.align.split(' ');\n        var className = this.className + '-';\n        var reverse = {\n          top: 'bottom',\n          bottom: 'top',\n          left: 'right',\n          right: 'left'\n        };\n        var name = {\n          top: 'top',\n          bottom: 'top',\n          left: 'left',\n          right: 'left'\n        };\n\n\n        var temp = [{\n          top: top - popupHeight,\n          bottom: top + height,\n          left: left - popupWidth,\n          right: left + width\n        }, {\n          top: top,\n          bottom: top - popupHeight + height,\n          left: left,\n          right: left - popupWidth + width\n        }];\n\n\n        var center = {\n          left: left + width / 2 - popupWidth / 2,\n          top: top + height / 2 - popupHeight / 2\n        };\n\n\n        var range = {\n          left: [minLeft, maxLeft],\n          top: [minTop, maxTop]\n        };\n\n\n        // 超出可视区域重新适应位置\n        $.each(align, function(i, val) {\n\n          // 超出右或下边界：使用左或者上边对齐\n          if (temp[i][val] > range[name[val]][1]) {\n            val = align[i] = reverse[val];\n          }\n\n          // 超出左或右边界：使用右或者下边对齐\n          if (temp[i][val] < range[name[val]][0]) {\n            align[i] = reverse[val];\n          }\n\n        });\n\n\n        // 一个参数的情况\n        if (!align[1]) {\n          name[align[1]] = name[align[0]] === 'left' ? 'top' : 'left';\n          temp[1][align[1]] = center[name[align[1]]];\n        }\n\n\n        //添加follow的css, 为了给css使用\n        className += align.join('-') + ' ' + this.className + '-follow';\n\n        that.__followSkin = className;\n\n\n        if ($elem) {\n          popup.addClass(className);\n        }\n\n\n        css[name[align[0]]] = parseInt(temp[0][align[0]]);\n        css[name[align[1]]] = parseInt(temp[1][align[1]]);\n        popup.css(css);\n\n      },\n\n\n      // 获取元素相对于页面的位置（包括iframe内的元素）\n      // 暂时不支持两层以上的 iframe 套嵌\n      __offset: function(anchor) {\n\n        var isNode = anchor.parentNode;\n        var offset = isNode ? $(anchor).offset() : {\n          left: anchor.pageX,\n          top: anchor.pageY\n        };\n\n\n        anchor = isNode ? anchor : anchor.target;\n        var ownerDocument = anchor.ownerDocument;\n        var defaultView = ownerDocument.defaultView || ownerDocument.parentWindow;\n\n        if (defaultView == window) { // IE <= 8 只能使用两个等于号\n          return offset;\n        }\n\n        // {Element: Ifarme}\n        var frameElement = defaultView.frameElement;\n        var $ownerDocument = $(ownerDocument);\n        var docLeft = $ownerDocument.scrollLeft();\n        var docTop = $ownerDocument.scrollTop();\n        var frameOffset = $(frameElement).offset();\n        var frameLeft = frameOffset.left;\n        var frameTop = frameOffset.top;\n\n        return {\n          left: offset.left + frameLeft - docLeft,\n          top: offset.top + frameTop - docTop\n        };\n      }\n\n    });\n\n\n    /** 当前叠加高度 */\n    Popup.zIndex = 1024;\n\n\n    /** 顶层浮层的实例 */\n    Popup.current = null;\n\n\n    return Popup;\n\n  });\n\n  // artDialog - 默认配置\n  define(\"dialog-config\", {\n\n    /* -----已注释的配置继承自 popup.js，仍可以再这里重新定义它----- */\n\n    // 对齐方式\n    //align: 'bottom left',\n\n    // 是否固定定位\n    //fixed: false,\n\n    // 对话框叠加高度值(重要：此值不能超过浏览器最大限制)\n    //zIndex: 1024,\n\n    // 设置遮罩背景颜色\n    backdropBackground: '#000',\n\n    // 设置遮罩透明度\n    backdropOpacity: 0.7,\n\n    // 消息内容\n    content: '<span class=\"ui-dialog-loading\">Loading..</span>',\n\n    // 标题\n    title: '',\n\n    // 对话框状态栏区域 HTML 代码\n    statusbar: '',\n\n    // 自定义按钮\n    button: null,\n\n    // 确定按钮回调函数\n    ok: null,\n\n    // 取消按钮回调函数\n    cancel: null,\n\n    // 确定按钮文本\n    okValue: 'ok',\n\n    // 取消按钮文本\n    cancelValue: 'cancel',\n\n    cancelDisplay: true,\n\n    // 内容宽度\n    width: '',\n\n    // 内容高度\n    height: '',\n\n    // 内容与边界填充距离\n    padding: '',\n\n    // 对话框自定义 className\n    skin: '',\n\n    // 是否支持快捷关闭（点击遮罩层自动关闭）\n    quickClose: false,\n\n    // css 文件路径，留空则不会使用 js 自动加载样式\n    // 注意：css 只允许加载一个\n    //cssUri: require('./index.css'),\n\n    // 模板（使用 table 解决 IE7 宽度自适应的 BUG）\n    // js 使用 i=\"***\" 属性识别结构，其余的均可自定义\n    innerHTML: '<div i=\"dialog\" class=\"ui-dialog\">' +\n      '<div class=\"ui-dialog-arrow-a\"></div>' +\n      '<div class=\"ui-dialog-arrow-b\"></div>' +\n      '<table class=\"ui-dialog-grid\">' +\n      '<tr>' +\n      '<td i=\"header\" class=\"ui-dialog-header\">' +\n      '<button i=\"close\" class=\"ui-dialog-close\">&#215;</button>' +\n      '<div i=\"title\" class=\"ui-dialog-title\"></div>' +\n      '</td>' +\n      '</tr>' +\n      '<tr>' +\n      '<td i=\"body\" class=\"ui-dialog-body\">' +\n      '<div i=\"content\" class=\"ui-dialog-content\"></div>' +\n      '</td>' +\n      '</tr>' +\n      '<tr>' +\n      '<td i=\"footer\" class=\"ui-dialog-footer\">' +\n      '<div i=\"statusbar\" class=\"ui-dialog-statusbar\"></div>' +\n      '<div i=\"button\" class=\"ui-dialog-button\"></div>' +\n      '</td>' +\n      '</tr>' +\n      '</table>' +\n      '</div>'\n\n  });\n\n  /*!\n   * artDialog\n   * Date: 2014-11-09\n   * https://github.com/aui/artDialog\n   * (c) 2009-2014 TangBin, http://www.planeArt.cn\n   *\n   * This is licensed under the GNU LGPL, version 2.1 or later.\n   * For details, see: http://www.gnu.org/licenses/lgpl-2.1.html\n   */\n  define(\"dialog\", function(require) {\n\n    var $ = require(\"jquery\");\n    var Popup = require(\"popup\");\n    var defaults = require(\"dialog-config\");\n    //var css = defaults.cssUri;\n\n\n    // css loader: RequireJS & SeaJS\n    // if (css) {\n    //     var fn = require[require.toUrl ? 'toUrl' : 'resolve'];\n    //     if (fn) {\n    //         css = fn(css);\n    //         css = '<link rel=\"stylesheet\" href=\"' + css + '\" />';\n    //         if ($('base')[0]) {\n    //             $('base').before(css);\n    //         } else {\n    //             $('head').append(css);\n    //         }\n    //     }\n    // }\n\n\n    var _count = 0;\n    var _expando = new Date() - 0; // Date.now()\n    var _isIE6 = !('minWidth' in $('html')[0].style);\n    var _isMobile = 'createTouch' in document && !('onmousemove' in document) ||\n      /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\n    var _isFixed = !_isIE6 && !_isMobile;\n\n\n    var artDialog = function(options, ok, cancel) {\n\n      var originalOptions = options = options || {};\n\n\n      if (typeof options === 'string' || options.nodeType === 1) {\n\n        options = {\n          content: options,\n          fixed: !_isMobile\n        };\n      }\n\n\n      options = $.extend(true, {}, artDialog.defaults, options);\n      options.original = originalOptions;\n\n      var id = options.id = options.id || _expando + _count;\n      var api = artDialog.get(id);\n\n\n      // 如果存在同名的对话框对象，则直接返回\n      if (api) {\n        return api.focus();\n      }\n\n\n      // 目前主流移动设备对fixed支持不好，禁用此特性\n      if (!_isFixed) {\n        options.fixed = false;\n      }\n\n\n      // 快捷关闭支持：点击对话框外快速关闭对话框\n      if (options.quickClose) {\n        options.modal = true;\n        options.backdropOpacity = 0;\n      }\n\n\n      // 按钮组\n      if (!$.isArray(options.button)) {\n        options.button = [];\n      }\n\n\n      // 取消按钮\n      if (cancel !== undefined) {\n        options.cancel = cancel;\n      }\n\n      if (options.cancel) {\n        options.button.push({\n          id: 'cancel',\n          value: options.cancelValue,\n          callback: options.cancel,\n          display: options.cancelDisplay\n        });\n      }\n\n\n      // 确定按钮\n      if (ok !== undefined) {\n        options.ok = ok;\n      }\n\n      if (options.ok) {\n        options.button.push({\n          id: 'ok',\n          value: options.okValue,\n          callback: options.ok,\n          autofocus: true\n        });\n      }\n\n\n      return artDialog.list[id] = new artDialog.create(options);\n    };\n\n    var popup = function() {};\n    popup.prototype = Popup.prototype;\n    var prototype = artDialog.prototype = new popup();\n\n    artDialog.create = function(options) {\n      var that = this;\n\n      $.extend(this, new Popup());\n\n      var originalOptions = options.original;\n      var $popup = $(this.node).html(options.innerHTML);\n      var $backdrop = $(this.backdrop);\n\n      this.options = options;\n      this._popup = $popup;\n\n\n      $.each(options, function(name, value) {\n        if (typeof that[name] === 'function') {\n          that[name](value);\n        } else {\n          that[name] = value;\n        }\n      });\n\n\n      // 更新 zIndex 全局配置\n      if (options.zIndex) {\n        Popup.zIndex = options.zIndex;\n      }\n\n\n      // 设置 ARIA 信息\n      $popup.attr({\n        'aria-labelledby': this._$('title')\n          .attr('id', 'title:' + this.id).attr('id'),\n        'aria-describedby': this._$('content')\n          .attr('id', 'content:' + this.id).attr('id')\n      });\n\n\n      // 关闭按钮\n      this._$('close')\n        .css('display', this.cancel === false ? 'none' : '')\n        .attr('title', this.cancelValue)\n        .on('click', function(event) {\n          that._trigger('cancel');\n          event.preventDefault();\n        });\n\n\n      // 添加视觉参数\n      this._$('dialog').addClass(this.skin);\n      this._$('body').css('padding', this.padding);\n\n\n      // 点击任意空白处关闭对话框\n      if (options.quickClose) {\n        $backdrop\n          .on(\n            'onmousedown' in document ? 'mousedown' : 'click',\n            function() {\n              that._trigger('cancel');\n              return false; // 阻止抢夺焦点\n            });\n      }\n\n\n      // 遮罩设置\n      this.addEventListener('show', function() {\n        $backdrop.css({\n          opacity: 0,\n          background: options.backdropBackground\n        }).animate({\n          opacity: options.backdropOpacity\n        }, 150);\n      });\n\n\n      // ESC 快捷键关闭对话框\n      this._esc = function(event) {\n        var target = event.target;\n        var nodeName = target.nodeName;\n        var rinput = /^input|textarea$/i;\n        var isTop = Popup.current === that;\n        var keyCode = event.keyCode;\n\n        // 避免输入状态中 ESC 误操作关闭\n        if (!isTop || rinput.test(nodeName) && target.type !== 'button') {\n          return;\n        }\n\n        if (keyCode === 27) {\n          that._trigger('cancel');\n        }\n      };\n\n      $(document).on('keydown', this._esc);\n      this.addEventListener('remove', function() {\n        $(document).off('keydown', this._esc);\n        delete artDialog.list[this.id];\n      });\n\n\n      _count++;\n\n      artDialog.oncreate(this);\n\n      return this;\n    };\n\n\n    artDialog.create.prototype = prototype;\n\n\n\n    $.extend(prototype, {\n\n      /**\n       * 显示对话框\n       * @name artDialog.prototype.show\n       * @param   {HTMLElement Object, Event Object}  指定位置（可选）\n       */\n\n      /**\n       * 显示对话框（模态）\n       * @name artDialog.prototype.showModal\n       * @param   {HTMLElement Object, Event Object}  指定位置（可选）\n       */\n\n      /**\n       * 关闭对话框\n       * @name artDialog.prototype.close\n       * @param   {String, Number}    返回值，可被 onclose 事件收取（可选）\n       */\n\n      /**\n       * 销毁对话框\n       * @name artDialog.prototype.remove\n       */\n\n      /**\n       * 重置对话框位置\n       * @name artDialog.prototype.reset\n       */\n\n      /**\n       * 让对话框聚焦（同时置顶）\n       * @name artDialog.prototype.focus\n       */\n\n      /**\n       * 让对话框失焦（同时置顶）\n       * @name artDialog.prototype.blur\n       */\n\n      /**\n       * 添加事件\n       * @param   {String}    事件类型\n       * @param   {Function}  监听函数\n       * @name artDialog.prototype.addEventListener\n       */\n\n      /**\n       * 删除事件\n       * @param   {String}    事件类型\n       * @param   {Function}  监听函数\n       * @name artDialog.prototype.removeEventListener\n       */\n\n      /**\n       * 对话框显示事件，在 show()、showModal() 执行\n       * @name artDialog.prototype.onshow\n       * @event\n       */\n\n      /**\n       * 关闭事件，在 close() 执行\n       * @name artDialog.prototype.onclose\n       * @event\n       */\n\n      /**\n       * 销毁前事件，在 remove() 前执行\n       * @name artDialog.prototype.onbeforeremove\n       * @event\n       */\n\n      /**\n       * 销毁事件，在 remove() 执行\n       * @name artDialog.prototype.onremove\n       * @event\n       */\n\n      /**\n       * 重置事件，在 reset() 执行\n       * @name artDialog.prototype.onreset\n       * @event\n       */\n\n      /**\n       * 焦点事件，在 foucs() 执行\n       * @name artDialog.prototype.onfocus\n       * @event\n       */\n\n      /**\n       * 失焦事件，在 blur() 执行\n       * @name artDialog.prototype.onblur\n       * @event\n       */\n\n\n      /**\n       * 设置内容\n       * @param    {String, HTMLElement}   内容\n       */\n      content: function(html) {\n\n        var $content = this._$('content');\n\n        // HTMLElement\n        if (typeof html === 'object') {\n          html = $(html);\n          $content.empty('').append(html.show());\n          this.addEventListener('beforeremove', function() {\n            $('body').append(html.hide());\n          });\n          // String\n        } else {\n          $content.html(html);\n        }\n\n        return this.reset();\n      },\n\n\n      /**\n       * 设置标题\n       * @param    {String}   标题内容\n       */\n      title: function(text) {\n        this._$('title').text(text);\n        this._$('header')[text ? 'show' : 'hide']();\n        return this;\n      },\n\n\n      /** 设置宽度 */\n      width: function(value) {\n        this._$('content').css('width', value);\n        return this.reset();\n      },\n\n\n      /** 设置高度 */\n      height: function(value) {\n        this._$('content').css('height', value);\n        return this.reset();\n      },\n\n\n      /**\n       * 设置按钮组\n       * @param   {Array, String}\n       * Options: value, callback, autofocus, disabled\n       */\n      button: function(args) {\n        args = args || [];\n        var that = this;\n        var html = '';\n        var number = 0;\n        this.callbacks = {};\n\n\n        if (typeof args === 'string') {\n          html = args;\n          number++;\n        } else {\n          $.each(args, function(i, val) {\n\n            var id = val.id = val.id || val.value;\n            var style = '';\n            that.callbacks[id] = val.callback;\n\n\n            if (val.display === false) {\n              style = ' style=\"display:none\"';\n            } else {\n              number++;\n            }\n\n            html +=\n              '<button' +\n              ' type=\"button\"' +\n              ' i-id=\"' + id + '\"' +\n              style +\n              (val.disabled ? ' disabled' : '') +\n              (val.autofocus ? ' autofocus class=\"ui-dialog-autofocus\"' : '') +\n              '>' +\n              val.value +\n              '</button>';\n\n            that._$('button')\n              .on('click', '[i-id=' + id + ']', function(event) {\n                var $this = $(this);\n                if (!$this.attr('disabled')) { // IE BUG\n                  that._trigger(id);\n                }\n\n                event.preventDefault();\n              });\n\n          });\n        }\n\n        this._$('button').html(html);\n        this._$('footer')[number ? 'show' : 'hide']();\n\n        return this;\n      },\n\n\n      statusbar: function(html) {\n        this._$('statusbar')\n          .html(html)[html ? 'show' : 'hide']();\n\n        return this;\n      },\n\n\n      _$: function(i) {\n        return this._popup.find('[i=' + i + ']');\n      },\n\n\n      // 触发按钮回调函数\n      _trigger: function(id) {\n        var fn = this.callbacks[id];\n\n        return typeof fn !== 'function' || fn.call(this) !== false ?\n          this.close().remove() : this;\n      }\n\n    });\n\n\n\n    artDialog.oncreate = $.noop;\n\n\n\n    /** 获取最顶层的对话框API */\n    artDialog.getCurrent = function() {\n      return Popup.current;\n    };\n\n\n\n    /**\n     * 根据 ID 获取某对话框 API\n     * @param    {String}    对话框 ID\n     * @return   {Object}    对话框 API (实例)\n     */\n    artDialog.get = function(id) {\n      return id === undefined ?\n        artDialog.list :\n        artDialog.list[id];\n    };\n\n    artDialog.list = {};\n\n\n\n    /**\n     * 默认配置\n     */\n    artDialog.defaults = defaults;\n\n\n\n    return artDialog;\n\n  });\n\n\n  var dialog = window.dialog = require(\"dialog\");\n\n  module.exports = function(text, fn, time) {\n\n    var _config = {\n      title: '提示',\n      content: text,\n      quickClose: true\n    };\n\n    if (fn !== undefined && fn !== null) {\n      _config.okValue = '确定';\n      _config.cancelValue = '取消';\n      _config.ok = function() {\n        fn()\n      };\n      _config.cancel = function() {};\n    } else {\n      _config.title = null ;\n    }\n\n    if (time !== undefined) {\n      _config.onshow = function() {\n        var that = this;\n        setTimeout(function() {\n          that.close().remove();\n        }, time);\n      }\n    }\n\n    dialog(_config).show()\n  }\n\n})();\n\nrequire('./index.css')\n\n\n\n// WEBPACK FOOTER //\n// ./views/common/dialog/index.js","/*!\n* Parsley.js\n* Version 2.6.2 - built Wed, Jan 4th 2017, 8:58 am\n* http://parsleyjs.org\n* Guillaume Potier - <guillaume@wisembly.com>\n* Marc-Andre Lafortune - <petroselinum@marc-andre.ca>\n* MIT Licensed\n*/\n\n// The source code below is generated by babel as\n// Parsley is written in ECMAScript 6\n//\nvar _slice = Array.prototype.slice;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery')) : typeof define === 'function' && define.amd ? define(['jquery'], factory) : global.parsley = factory(global.jQuery);\n})(this, function ($) {\n  'use strict';\n\n  var globalID = 1;\n  var pastWarnings = {};\n\n  var ParsleyUtils__ParsleyUtils = {\n    // Parsley DOM-API\n    // returns object from dom attributes and values\n    attr: function attr($element, namespace, obj) {\n      var i;\n      var attribute;\n      var attributes;\n      var regex = new RegExp('^' + namespace, 'i');\n\n      if ('undefined' === typeof obj) obj = {};else {\n        // Clear all own properties. This won't affect prototype's values\n        for (i in obj) {\n          if (obj.hasOwnProperty(i)) delete obj[i];\n        }\n      }\n\n      if ('undefined' === typeof $element || 'undefined' === typeof $element[0]) return obj;\n\n      attributes = $element[0].attributes;\n      for (i = attributes.length; i--;) {\n        attribute = attributes[i];\n\n        if (attribute && attribute.specified && regex.test(attribute.name)) {\n          obj[this.camelize(attribute.name.slice(namespace.length))] = this.deserializeValue(attribute.value);\n        }\n      }\n\n      return obj;\n    },\n\n    checkAttr: function checkAttr($element, namespace, _checkAttr) {\n      return $element.is('[' + namespace + _checkAttr + ']');\n    },\n\n    setAttr: function setAttr($element, namespace, attr, value) {\n      $element[0].setAttribute(this.dasherize(namespace + attr), String(value));\n    },\n\n    generateID: function generateID() {\n      return '' + globalID++;\n    },\n\n    /** Third party functions **/\n    // Zepto deserialize function\n    deserializeValue: function deserializeValue(value) {\n      var num;\n\n      try {\n        return value ? value == \"true\" || (value == \"false\" ? false : value == \"null\" ? null : !isNaN(num = Number(value)) ? num : /^[\\[\\{]/.test(value) ? $.parseJSON(value) : value) : value;\n      } catch (e) {\n        return value;\n      }\n    },\n\n    // Zepto camelize function\n    camelize: function camelize(str) {\n      return str.replace(/-+(.)?/g, function (match, chr) {\n        return chr ? chr.toUpperCase() : '';\n      });\n    },\n\n    // Zepto dasherize function\n    dasherize: function dasherize(str) {\n      return str.replace(/::/g, '/').replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2').replace(/([a-z\\d])([A-Z])/g, '$1_$2').replace(/_/g, '-').toLowerCase();\n    },\n\n    warn: function warn() {\n      var _window$console;\n\n      if (window.console && 'function' === typeof window.console.warn) (_window$console = window.console).warn.apply(_window$console, arguments);\n    },\n\n    warnOnce: function warnOnce(msg) {\n      if (!pastWarnings[msg]) {\n        pastWarnings[msg] = true;\n        this.warn.apply(this, arguments);\n      }\n    },\n\n    _resetWarnings: function _resetWarnings() {\n      pastWarnings = {};\n    },\n\n    trimString: function trimString(string) {\n      return string.replace(/^\\s+|\\s+$/g, '');\n    },\n\n    namespaceEvents: function namespaceEvents(events, namespace) {\n      events = this.trimString(events || '').split(/\\s+/);\n      if (!events[0]) return '';\n      return $.map(events, function (evt) {\n        return evt + '.' + namespace;\n      }).join(' ');\n    },\n\n    difference: function difference(array, remove) {\n      // This is O(N^2), should be optimized\n      var result = [];\n      $.each(array, function (_, elem) {\n        if (remove.indexOf(elem) == -1) result.push(elem);\n      });\n      return result;\n    },\n\n    // Alter-ego to native Promise.all, but for jQuery\n    all: function all(promises) {\n      // jQuery treats $.when() and $.when(singlePromise) differently; let's avoid that and add spurious elements\n      return $.when.apply($, _toConsumableArray(promises).concat([42, 42]));\n    },\n\n    // Object.create polyfill, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Polyfill\n    objectCreate: Object.create || (function () {\n      var Object = function Object() {};\n      return function (prototype) {\n        if (arguments.length > 1) {\n          throw Error('Second argument not supported');\n        }\n        if (typeof prototype != 'object') {\n          throw TypeError('Argument must be an object');\n        }\n        Object.prototype = prototype;\n        var result = new Object();\n        Object.prototype = null;\n        return result;\n      };\n    })(),\n\n    _SubmitSelector: 'input[type=\"submit\"], button:submit'\n  };\n\n  var ParsleyUtils__default = ParsleyUtils__ParsleyUtils;\n\n  // All these options could be overriden and specified directly in DOM using\n  // `data-parsley-` default DOM-API\n  // eg: `inputs` can be set in DOM using `data-parsley-inputs=\"input, textarea\"`\n  // eg: `data-parsley-stop-on-first-failing-constraint=\"false\"`\n\n  var ParsleyDefaults = {\n    // ### General\n\n    // Default data-namespace for DOM API\n    namespace: 'data-parsley-',\n\n    // Supported inputs by default\n    inputs: 'input, textarea, select',\n\n    // Excluded inputs by default\n    excluded: 'input[type=button], input[type=submit], input[type=reset], input[type=hidden]',\n\n    // Stop validating field on highest priority failing constraint\n    priorityEnabled: true,\n\n    // ### Field only\n\n    // identifier used to group together inputs (e.g. radio buttons...)\n    multiple: null,\n\n    // identifier (or array of identifiers) used to validate only a select group of inputs\n    group: null,\n\n    // ### UI\n    // Enable\\Disable error messages\n    uiEnabled: true,\n\n    // Key events threshold before validation\n    validationThreshold: 3,\n\n    // Focused field on form validation error. 'first'|'last'|'none'\n    focus: 'first',\n\n    // event(s) that will trigger validation before first failure. eg: `input`...\n    trigger: false,\n\n    // event(s) that will trigger validation after first failure.\n    triggerAfterFailure: 'input',\n\n    // Class that would be added on every failing validation Parsley field\n    errorClass: 'parsley-error',\n\n    // Same for success validation\n    successClass: 'parsley-success',\n\n    // Return the `$element` that will receive these above success or error classes\n    // Could also be (and given directly from DOM) a valid selector like `'#div'`\n    classHandler: function classHandler(ParsleyField) {},\n\n    // Return the `$element` where errors will be appended\n    // Could also be (and given directly from DOM) a valid selector like `'#div'`\n    errorsContainer: function errorsContainer(ParsleyField) {},\n\n    // ul elem that would receive errors' list\n    errorsWrapper: '<ul class=\"parsley-errors-list\"></ul>',\n\n    // li elem that would receive error message\n    errorTemplate: '<li></li>'\n  };\n\n  var ParsleyAbstract = function ParsleyAbstract() {\n    this.__id__ = ParsleyUtils__default.generateID();\n  };\n\n  ParsleyAbstract.prototype = {\n    asyncSupport: true, // Deprecated\n\n    _pipeAccordingToValidationResult: function _pipeAccordingToValidationResult() {\n      var _this = this;\n\n      var pipe = function pipe() {\n        var r = $.Deferred();\n        if (true !== _this.validationResult) r.reject();\n        return r.resolve().promise();\n      };\n      return [pipe, pipe];\n    },\n\n    actualizeOptions: function actualizeOptions() {\n      ParsleyUtils__default.attr(this.$element, this.options.namespace, this.domOptions);\n      if (this.parent && this.parent.actualizeOptions) this.parent.actualizeOptions();\n      return this;\n    },\n\n    _resetOptions: function _resetOptions(initOptions) {\n      this.domOptions = ParsleyUtils__default.objectCreate(this.parent.options);\n      this.options = ParsleyUtils__default.objectCreate(this.domOptions);\n      // Shallow copy of ownProperties of initOptions:\n      for (var i in initOptions) {\n        if (initOptions.hasOwnProperty(i)) this.options[i] = initOptions[i];\n      }\n      this.actualizeOptions();\n    },\n\n    _listeners: null,\n\n    // Register a callback for the given event name\n    // Callback is called with context as the first argument and the `this`\n    // The context is the current parsley instance, or window.Parsley if global\n    // A return value of `false` will interrupt the calls\n    on: function on(name, fn) {\n      this._listeners = this._listeners || {};\n      var queue = this._listeners[name] = this._listeners[name] || [];\n      queue.push(fn);\n\n      return this;\n    },\n\n    // Deprecated. Use `on` instead\n    subscribe: function subscribe(name, fn) {\n      $.listenTo(this, name.toLowerCase(), fn);\n    },\n\n    // Unregister a callback (or all if none is given) for the given event name\n    off: function off(name, fn) {\n      var queue = this._listeners && this._listeners[name];\n      if (queue) {\n        if (!fn) {\n          delete this._listeners[name];\n        } else {\n          for (var i = queue.length; i--;) if (queue[i] === fn) queue.splice(i, 1);\n        }\n      }\n      return this;\n    },\n\n    // Deprecated. Use `off`\n    unsubscribe: function unsubscribe(name, fn) {\n      $.unsubscribeTo(this, name.toLowerCase());\n    },\n\n    // Trigger an event of the given name\n    // A return value of `false` interrupts the callback chain\n    // Returns false if execution was interrupted\n    trigger: function trigger(name, target, extraArg) {\n      target = target || this;\n      var queue = this._listeners && this._listeners[name];\n      var result;\n      var parentResult;\n      if (queue) {\n        for (var i = queue.length; i--;) {\n          result = queue[i].call(target, target, extraArg);\n          if (result === false) return result;\n        }\n      }\n      if (this.parent) {\n        return this.parent.trigger(name, target, extraArg);\n      }\n      return true;\n    },\n\n    // Reset UI\n    reset: function reset() {\n      // Field case: just emit a reset event for UI\n      if ('ParsleyForm' !== this.__class__) {\n        this._resetUI();\n        return this._trigger('reset');\n      }\n\n      // Form case: emit a reset event for each field\n      for (var i = 0; i < this.fields.length; i++) this.fields[i].reset();\n\n      this._trigger('reset');\n    },\n\n    // Destroy Parsley instance (+ UI)\n    destroy: function destroy() {\n      // Field case: emit destroy event to clean UI and then destroy stored instance\n      this._destroyUI();\n      if ('ParsleyForm' !== this.__class__) {\n        this.$element.removeData('Parsley');\n        this.$element.removeData('ParsleyFieldMultiple');\n        this._trigger('destroy');\n\n        return;\n      }\n\n      // Form case: destroy all its fields and then destroy stored instance\n      for (var i = 0; i < this.fields.length; i++) this.fields[i].destroy();\n\n      this.$element.removeData('Parsley');\n      this._trigger('destroy');\n    },\n\n    asyncIsValid: function asyncIsValid(group, force) {\n      ParsleyUtils__default.warnOnce(\"asyncIsValid is deprecated; please use whenValid instead\");\n      return this.whenValid({ group: group, force: force });\n    },\n\n    _findRelated: function _findRelated() {\n      return this.options.multiple ? this.parent.$element.find('[' + this.options.namespace + 'multiple=\"' + this.options.multiple + '\"]') : this.$element;\n    }\n  };\n\n  var requirementConverters = {\n    string: function string(_string) {\n      return _string;\n    },\n    integer: function integer(string) {\n      if (isNaN(string)) throw 'Requirement is not an integer: \"' + string + '\"';\n      return parseInt(string, 10);\n    },\n    number: function number(string) {\n      if (isNaN(string)) throw 'Requirement is not a number: \"' + string + '\"';\n      return parseFloat(string);\n    },\n    reference: function reference(string) {\n      // Unused for now\n      var result = $(string);\n      if (result.length === 0) throw 'No such reference: \"' + string + '\"';\n      return result;\n    },\n    boolean: function boolean(string) {\n      return string !== 'false';\n    },\n    object: function object(string) {\n      return ParsleyUtils__default.deserializeValue(string);\n    },\n    regexp: function regexp(_regexp) {\n      var flags = '';\n\n      // Test if RegExp is literal, if not, nothing to be done, otherwise, we need to isolate flags and pattern\n      if (/^\\/.*\\/(?:[gimy]*)$/.test(_regexp)) {\n        // Replace the regexp literal string with the first match group: ([gimy]*)\n        // If no flag is present, this will be a blank string\n        flags = _regexp.replace(/.*\\/([gimy]*)$/, '$1');\n        // Again, replace the regexp literal string with the first match group:\n        // everything excluding the opening and closing slashes and the flags\n        _regexp = _regexp.replace(new RegExp('^/(.*?)/' + flags + '$'), '$1');\n      } else {\n        // Anchor regexp:\n        _regexp = '^' + _regexp + '$';\n      }\n      return new RegExp(_regexp, flags);\n    }\n  };\n\n  var convertArrayRequirement = function convertArrayRequirement(string, length) {\n    var m = string.match(/^\\s*\\[(.*)\\]\\s*$/);\n    if (!m) throw 'Requirement is not an array: \"' + string + '\"';\n    var values = m[1].split(',').map(ParsleyUtils__default.trimString);\n    if (values.length !== length) throw 'Requirement has ' + values.length + ' values when ' + length + ' are needed';\n    return values;\n  };\n\n  var convertRequirement = function convertRequirement(requirementType, string) {\n    var converter = requirementConverters[requirementType || 'string'];\n    if (!converter) throw 'Unknown requirement specification: \"' + requirementType + '\"';\n    return converter(string);\n  };\n\n  var convertExtraOptionRequirement = function convertExtraOptionRequirement(requirementSpec, string, extraOptionReader) {\n    var main = null;\n    var extra = {};\n    for (var key in requirementSpec) {\n      if (key) {\n        var value = extraOptionReader(key);\n        if ('string' === typeof value) value = convertRequirement(requirementSpec[key], value);\n        extra[key] = value;\n      } else {\n        main = convertRequirement(requirementSpec[key], string);\n      }\n    }\n    return [main, extra];\n  };\n\n  // A Validator needs to implement the methods `validate` and `parseRequirements`\n\n  var ParsleyValidator = function ParsleyValidator(spec) {\n    $.extend(true, this, spec);\n  };\n\n  ParsleyValidator.prototype = {\n    // Returns `true` iff the given `value` is valid according the given requirements.\n    validate: function validate(value, requirementFirstArg) {\n      if (this.fn) {\n        // Legacy style validator\n\n        if (arguments.length > 3) // If more args then value, requirement, instance...\n          requirementFirstArg = [].slice.call(arguments, 1, -1); // Skip first arg (value) and last (instance), combining the rest\n        return this.fn.call(this, value, requirementFirstArg);\n      }\n\n      if ($.isArray(value)) {\n        if (!this.validateMultiple) throw 'Validator `' + this.name + '` does not handle multiple values';\n        return this.validateMultiple.apply(this, arguments);\n      } else {\n        if (this.validateNumber) {\n          if (isNaN(value)) return false;\n          arguments[0] = parseFloat(arguments[0]);\n          return this.validateNumber.apply(this, arguments);\n        }\n        if (this.validateString) {\n          return this.validateString.apply(this, arguments);\n        }\n        throw 'Validator `' + this.name + '` only handles multiple values';\n      }\n    },\n\n    // Parses `requirements` into an array of arguments,\n    // according to `this.requirementType`\n    parseRequirements: function parseRequirements(requirements, extraOptionReader) {\n      if ('string' !== typeof requirements) {\n        // Assume requirement already parsed\n        // but make sure we return an array\n        return $.isArray(requirements) ? requirements : [requirements];\n      }\n      var type = this.requirementType;\n      if ($.isArray(type)) {\n        var values = convertArrayRequirement(requirements, type.length);\n        for (var i = 0; i < values.length; i++) values[i] = convertRequirement(type[i], values[i]);\n        return values;\n      } else if ($.isPlainObject(type)) {\n        return convertExtraOptionRequirement(type, requirements, extraOptionReader);\n      } else {\n        return [convertRequirement(type, requirements)];\n      }\n    },\n    // Defaults:\n    requirementType: 'string',\n\n    priority: 2\n\n  };\n\n  var ParsleyValidatorRegistry = function ParsleyValidatorRegistry(validators, catalog) {\n    this.__class__ = 'ParsleyValidatorRegistry';\n\n    // Default Parsley locale is en\n    this.locale = 'en';\n\n    this.init(validators || {}, catalog || {});\n  };\n\n  var typeRegexes = {\n    email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n\n    // Follow https://www.w3.org/TR/html5/infrastructure.html#floating-point-numbers\n    number: /^-?(\\d*\\.)?\\d+(e[-+]?\\d+)?$/i,\n\n    integer: /^-?\\d+$/,\n\n    digits: /^\\d+$/,\n\n    alphanum: /^\\w+$/i,\n\n    url: new RegExp(\"^\" +\n    // protocol identifier\n    \"(?:(?:https?|ftp)://)?\" + // ** mod: make scheme optional\n    // user:pass authentication\n    \"(?:\\\\S+(?::\\\\S*)?@)?\" + \"(?:\" +\n    // IP address exclusion\n    // private & local networks\n    // \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +   // ** mod: allow local networks\n    // \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n    // \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" + \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" + \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" + \"|\" +\n    // host name\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n    // domain name\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n    // TLD identifier\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' + \")\" +\n    // port number\n    \"(?::\\\\d{2,5})?\" +\n    // resource path\n    \"(?:/\\\\S*)?\" + \"$\", 'i')\n  };\n  typeRegexes.range = typeRegexes.number;\n\n  // See http://stackoverflow.com/a/10454560/8279\n  var decimalPlaces = function decimalPlaces(num) {\n    var match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    if (!match) {\n      return 0;\n    }\n    return Math.max(0,\n    // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) - (\n    // Adjust for scientific notation.\n    match[2] ? +match[2] : 0));\n  };\n\n  ParsleyValidatorRegistry.prototype = {\n    init: function init(validators, catalog) {\n      this.catalog = catalog;\n      // Copy prototype's validators:\n      this.validators = $.extend({}, this.validators);\n\n      for (var name in validators) this.addValidator(name, validators[name].fn, validators[name].priority);\n\n      window.Parsley.trigger('parsley:validator:init');\n    },\n\n    // Set new messages locale if we have dictionary loaded in ParsleyConfig.i18n\n    setLocale: function setLocale(locale) {\n      if ('undefined' === typeof this.catalog[locale]) throw new Error(locale + ' is not available in the catalog');\n\n      this.locale = locale;\n\n      return this;\n    },\n\n    // Add a new messages catalog for a given locale. Set locale for this catalog if set === `true`\n    addCatalog: function addCatalog(locale, messages, set) {\n      if ('object' === typeof messages) this.catalog[locale] = messages;\n\n      if (true === set) return this.setLocale(locale);\n\n      return this;\n    },\n\n    // Add a specific message for a given constraint in a given locale\n    addMessage: function addMessage(locale, name, message) {\n      if ('undefined' === typeof this.catalog[locale]) this.catalog[locale] = {};\n\n      this.catalog[locale][name] = message;\n\n      return this;\n    },\n\n    // Add messages for a given locale\n    addMessages: function addMessages(locale, nameMessageObject) {\n      for (var name in nameMessageObject) this.addMessage(locale, name, nameMessageObject[name]);\n\n      return this;\n    },\n\n    // Add a new validator\n    //\n    //    addValidator('custom', {\n    //        requirementType: ['integer', 'integer'],\n    //        validateString: function(value, from, to) {},\n    //        priority: 22,\n    //        messages: {\n    //          en: \"Hey, that's no good\",\n    //          fr: \"Aye aye, pas bon du tout\",\n    //        }\n    //    })\n    //\n    // Old API was addValidator(name, function, priority)\n    //\n    addValidator: function addValidator(name, arg1, arg2) {\n      if (this.validators[name]) ParsleyUtils__default.warn('Validator \"' + name + '\" is already defined.');else if (ParsleyDefaults.hasOwnProperty(name)) {\n        ParsleyUtils__default.warn('\"' + name + '\" is a restricted keyword and is not a valid validator name.');\n        return;\n      }\n      return this._setValidator.apply(this, arguments);\n    },\n\n    updateValidator: function updateValidator(name, arg1, arg2) {\n      if (!this.validators[name]) {\n        ParsleyUtils__default.warn('Validator \"' + name + '\" is not already defined.');\n        return this.addValidator.apply(this, arguments);\n      }\n      return this._setValidator.apply(this, arguments);\n    },\n\n    removeValidator: function removeValidator(name) {\n      if (!this.validators[name]) ParsleyUtils__default.warn('Validator \"' + name + '\" is not defined.');\n\n      delete this.validators[name];\n\n      return this;\n    },\n\n    _setValidator: function _setValidator(name, validator, priority) {\n      if ('object' !== typeof validator) {\n        // Old style validator, with `fn` and `priority`\n        validator = {\n          fn: validator,\n          priority: priority\n        };\n      }\n      if (!validator.validate) {\n        validator = new ParsleyValidator(validator);\n      }\n      this.validators[name] = validator;\n\n      for (var locale in validator.messages || {}) this.addMessage(locale, name, validator.messages[locale]);\n\n      return this;\n    },\n\n    getErrorMessage: function getErrorMessage(constraint) {\n      var message;\n\n      // Type constraints are a bit different, we have to match their requirements too to find right error message\n      if ('type' === constraint.name) {\n        var typeMessages = this.catalog[this.locale][constraint.name] || {};\n        message = typeMessages[constraint.requirements];\n      } else message = this.formatMessage(this.catalog[this.locale][constraint.name], constraint.requirements);\n\n      return message || this.catalog[this.locale].defaultMessage || this.catalog.en.defaultMessage;\n    },\n\n    // Kind of light `sprintf()` implementation\n    formatMessage: function formatMessage(string, parameters) {\n      if ('object' === typeof parameters) {\n        for (var i in parameters) string = this.formatMessage(string, parameters[i]);\n\n        return string;\n      }\n\n      return 'string' === typeof string ? string.replace(/%s/i, parameters) : '';\n    },\n\n    // Here is the Parsley default validators list.\n    // A validator is an object with the following key values:\n    //  - priority: an integer\n    //  - requirement: 'string' (default), 'integer', 'number', 'regexp' or an Array of these\n    //  - validateString, validateMultiple, validateNumber: functions returning `true`, `false` or a promise\n    // Alternatively, a validator can be a function that returns such an object\n    //\n    validators: {\n      notblank: {\n        validateString: function validateString(value) {\n          return (/\\S/.test(value)\n          );\n        },\n        priority: 2\n      },\n      required: {\n        validateMultiple: function validateMultiple(values) {\n          return values.length > 0;\n        },\n        validateString: function validateString(value) {\n          return (/\\S/.test(value)\n          );\n        },\n        priority: 512\n      },\n      type: {\n        validateString: function validateString(value, type) {\n          var _ref = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n          var _ref$step = _ref.step;\n          var step = _ref$step === undefined ? 'any' : _ref$step;\n          var _ref$base = _ref.base;\n          var base = _ref$base === undefined ? 0 : _ref$base;\n\n          var regex = typeRegexes[type];\n          if (!regex) {\n            throw new Error('validator type `' + type + '` is not supported');\n          }\n          if (!regex.test(value)) return false;\n          if ('number' === type) {\n            if (!/^any$/i.test(step || '')) {\n              var nb = Number(value);\n              var decimals = Math.max(decimalPlaces(step), decimalPlaces(base));\n              if (decimalPlaces(nb) > decimals) // Value can't have too many decimals\n                return false;\n              // Be careful of rounding errors by using integers.\n              var toInt = function toInt(f) {\n                return Math.round(f * Math.pow(10, decimals));\n              };\n              if ((toInt(nb) - toInt(base)) % toInt(step) != 0) return false;\n            }\n          }\n          return true;\n        },\n        requirementType: {\n          '': 'string',\n          step: 'string',\n          base: 'number'\n        },\n        priority: 256\n      },\n      pattern: {\n        validateString: function validateString(value, regexp) {\n          return regexp.test(value);\n        },\n        requirementType: 'regexp',\n        priority: 64\n      },\n      minlength: {\n        validateString: function validateString(value, requirement) {\n          return value.length >= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      maxlength: {\n        validateString: function validateString(value, requirement) {\n          return value.length <= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      length: {\n        validateString: function validateString(value, min, max) {\n          return value.length >= min && value.length <= max;\n        },\n        requirementType: ['integer', 'integer'],\n        priority: 30\n      },\n      mincheck: {\n        validateMultiple: function validateMultiple(values, requirement) {\n          return values.length >= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      maxcheck: {\n        validateMultiple: function validateMultiple(values, requirement) {\n          return values.length <= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      check: {\n        validateMultiple: function validateMultiple(values, min, max) {\n          return values.length >= min && values.length <= max;\n        },\n        requirementType: ['integer', 'integer'],\n        priority: 30\n      },\n      min: {\n        validateNumber: function validateNumber(value, requirement) {\n          return value >= requirement;\n        },\n        requirementType: 'number',\n        priority: 30\n      },\n      max: {\n        validateNumber: function validateNumber(value, requirement) {\n          return value <= requirement;\n        },\n        requirementType: 'number',\n        priority: 30\n      },\n      range: {\n        validateNumber: function validateNumber(value, min, max) {\n          return value >= min && value <= max;\n        },\n        requirementType: ['number', 'number'],\n        priority: 30\n      },\n      equalto: {\n        validateString: function validateString(value, refOrValue) {\n          var $reference = $(refOrValue);\n          if ($reference.length) return value === $reference.val();else return value === refOrValue;\n        },\n        priority: 256\n      }\n    }\n  };\n\n  var ParsleyUI = {};\n\n  var diffResults = function diffResults(newResult, oldResult, deep) {\n    var added = [];\n    var kept = [];\n\n    for (var i = 0; i < newResult.length; i++) {\n      var found = false;\n\n      for (var j = 0; j < oldResult.length; j++) if (newResult[i].assert.name === oldResult[j].assert.name) {\n        found = true;\n        break;\n      }\n\n      if (found) kept.push(newResult[i]);else added.push(newResult[i]);\n    }\n\n    return {\n      kept: kept,\n      added: added,\n      removed: !deep ? diffResults(oldResult, newResult, true).added : []\n    };\n  };\n\n  ParsleyUI.Form = {\n\n    _actualizeTriggers: function _actualizeTriggers() {\n      var _this2 = this;\n\n      this.$element.on('submit.Parsley', function (evt) {\n        _this2.onSubmitValidate(evt);\n      });\n      this.$element.on('click.Parsley', ParsleyUtils__default._SubmitSelector, function (evt) {\n        _this2.onSubmitButton(evt);\n      });\n\n      // UI could be disabled\n      if (false === this.options.uiEnabled) return;\n\n      this.$element.attr('novalidate', '');\n    },\n\n    focus: function focus() {\n      this._focusedField = null;\n\n      if (true === this.validationResult || 'none' === this.options.focus) return null;\n\n      for (var i = 0; i < this.fields.length; i++) {\n        var field = this.fields[i];\n        if (true !== field.validationResult && field.validationResult.length > 0 && 'undefined' === typeof field.options.noFocus) {\n          this._focusedField = field.$element;\n          if ('first' === this.options.focus) break;\n        }\n      }\n\n      if (null === this._focusedField) return null;\n\n      return this._focusedField.focus();\n    },\n\n    _destroyUI: function _destroyUI() {\n      // Reset all event listeners\n      this.$element.off('.Parsley');\n    }\n\n  };\n\n  ParsleyUI.Field = {\n\n    _reflowUI: function _reflowUI() {\n      this._buildUI();\n\n      // If this field doesn't have an active UI don't bother doing something\n      if (!this._ui) return;\n\n      // Diff between two validation results\n      var diff = diffResults(this.validationResult, this._ui.lastValidationResult);\n\n      // Then store current validation result for next reflow\n      this._ui.lastValidationResult = this.validationResult;\n\n      // Handle valid / invalid / none field class\n      this._manageStatusClass();\n\n      // Add, remove, updated errors messages\n      this._manageErrorsMessages(diff);\n\n      // Triggers impl\n      this._actualizeTriggers();\n\n      // If field is not valid for the first time, bind keyup trigger to ease UX and quickly inform user\n      if ((diff.kept.length || diff.added.length) && !this._failedOnce) {\n        this._failedOnce = true;\n        this._actualizeTriggers();\n      }\n    },\n\n    // Returns an array of field's error message(s)\n    getErrorsMessages: function getErrorsMessages() {\n      // No error message, field is valid\n      if (true === this.validationResult) return [];\n\n      var messages = [];\n\n      for (var i = 0; i < this.validationResult.length; i++) messages.push(this.validationResult[i].errorMessage || this._getErrorMessage(this.validationResult[i].assert));\n\n      return messages;\n    },\n\n    // It's a goal of Parsley that this method is no longer required [#1073]\n    addError: function addError(name) {\n      var _ref2 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var message = _ref2.message;\n      var assert = _ref2.assert;\n      var _ref2$updateClass = _ref2.updateClass;\n      var updateClass = _ref2$updateClass === undefined ? true : _ref2$updateClass;\n\n      this._buildUI();\n      this._addError(name, { message: message, assert: assert });\n\n      if (updateClass) this._errorClass();\n    },\n\n    // It's a goal of Parsley that this method is no longer required [#1073]\n    updateError: function updateError(name) {\n      var _ref3 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var message = _ref3.message;\n      var assert = _ref3.assert;\n      var _ref3$updateClass = _ref3.updateClass;\n      var updateClass = _ref3$updateClass === undefined ? true : _ref3$updateClass;\n\n      this._buildUI();\n      this._updateError(name, { message: message, assert: assert });\n\n      if (updateClass) this._errorClass();\n    },\n\n    // It's a goal of Parsley that this method is no longer required [#1073]\n    removeError: function removeError(name) {\n      var _ref4 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var _ref4$updateClass = _ref4.updateClass;\n      var updateClass = _ref4$updateClass === undefined ? true : _ref4$updateClass;\n\n      this._buildUI();\n      this._removeError(name);\n\n      // edge case possible here: remove a standard Parsley error that is still failing in this.validationResult\n      // but highly improbable cuz' manually removing a well Parsley handled error makes no sense.\n      if (updateClass) this._manageStatusClass();\n    },\n\n    _manageStatusClass: function _manageStatusClass() {\n      if (this.hasConstraints() && this.needsValidation() && true === this.validationResult) this._successClass();else if (this.validationResult.length > 0) this._errorClass();else this._resetClass();\n    },\n\n    _manageErrorsMessages: function _manageErrorsMessages(diff) {\n      if ('undefined' !== typeof this.options.errorsMessagesDisabled) return;\n\n      // Case where we have errorMessage option that configure an unique field error message, regardless failing validators\n      if ('undefined' !== typeof this.options.errorMessage) {\n        if (diff.added.length || diff.kept.length) {\n          this._insertErrorWrapper();\n\n          if (0 === this._ui.$errorsWrapper.find('.parsley-custom-error-message').length) this._ui.$errorsWrapper.append($(this.options.errorTemplate).addClass('parsley-custom-error-message'));\n\n          return this._ui.$errorsWrapper.addClass('filled').find('.parsley-custom-error-message').html(this.options.errorMessage);\n        }\n\n        return this._ui.$errorsWrapper.removeClass('filled').find('.parsley-custom-error-message').remove();\n      }\n\n      // Show, hide, update failing constraints messages\n      for (var i = 0; i < diff.removed.length; i++) this._removeError(diff.removed[i].assert.name);\n\n      for (i = 0; i < diff.added.length; i++) this._addError(diff.added[i].assert.name, { message: diff.added[i].errorMessage, assert: diff.added[i].assert });\n\n      for (i = 0; i < diff.kept.length; i++) this._updateError(diff.kept[i].assert.name, { message: diff.kept[i].errorMessage, assert: diff.kept[i].assert });\n    },\n\n    _addError: function _addError(name, _ref5) {\n      var message = _ref5.message;\n      var assert = _ref5.assert;\n\n      this._insertErrorWrapper();\n      this._ui.$errorsWrapper.addClass('filled').append($(this.options.errorTemplate).addClass('parsley-' + name).html(message || this._getErrorMessage(assert)));\n    },\n\n    _updateError: function _updateError(name, _ref6) {\n      var message = _ref6.message;\n      var assert = _ref6.assert;\n\n      this._ui.$errorsWrapper.addClass('filled').find('.parsley-' + name).html(message || this._getErrorMessage(assert));\n    },\n\n    _removeError: function _removeError(name) {\n      this._ui.$errorsWrapper.removeClass('filled').find('.parsley-' + name).remove();\n    },\n\n    _getErrorMessage: function _getErrorMessage(constraint) {\n      var customConstraintErrorMessage = constraint.name + 'Message';\n\n      if ('undefined' !== typeof this.options[customConstraintErrorMessage]) return window.Parsley.formatMessage(this.options[customConstraintErrorMessage], constraint.requirements);\n\n      return window.Parsley.getErrorMessage(constraint);\n    },\n\n    _buildUI: function _buildUI() {\n      // UI could be already built or disabled\n      if (this._ui || false === this.options.uiEnabled) return;\n\n      var _ui = {};\n\n      // Give field its Parsley id in DOM\n      this.$element.attr(this.options.namespace + 'id', this.__id__);\n\n      /** Generate important UI elements and store them in this **/\n      // $errorClassHandler is the $element that woul have parsley-error and parsley-success classes\n      _ui.$errorClassHandler = this._manageClassHandler();\n\n      // $errorsWrapper is a div that would contain the various field errors, it will be appended into $errorsContainer\n      _ui.errorsWrapperId = 'parsley-id-' + (this.options.multiple ? 'multiple-' + this.options.multiple : this.__id__);\n      _ui.$errorsWrapper = $(this.options.errorsWrapper).attr('id', _ui.errorsWrapperId);\n\n      // ValidationResult UI storage to detect what have changed bwt two validations, and update DOM accordingly\n      _ui.lastValidationResult = [];\n      _ui.validationInformationVisible = false;\n\n      // Store it in this for later\n      this._ui = _ui;\n    },\n\n    // Determine which element will have `parsley-error` and `parsley-success` classes\n    _manageClassHandler: function _manageClassHandler() {\n      // An element selector could be passed through DOM with `data-parsley-class-handler=#foo`\n      if ('string' === typeof this.options.classHandler && $(this.options.classHandler).length) return $(this.options.classHandler);\n\n      // Class handled could also be determined by function given in Parsley options\n      var $handler = this.options.classHandler.call(this, this);\n\n      // If this function returned a valid existing DOM element, go for it\n      if ('undefined' !== typeof $handler && $handler.length) return $handler;\n\n      return this._inputHolder();\n    },\n\n    _inputHolder: function _inputHolder() {\n      // if simple element (input, texatrea, select...) it will perfectly host the classes and precede the error container\n      if (!this.options.multiple || this.$element.is('select')) return this.$element;\n\n      // But if multiple element (radio, checkbox), that would be their parent\n      return this.$element.parent();\n    },\n\n    _insertErrorWrapper: function _insertErrorWrapper() {\n      var $errorsContainer;\n\n      // Nothing to do if already inserted\n      if (0 !== this._ui.$errorsWrapper.parent().length) return this._ui.$errorsWrapper.parent();\n\n      if ('string' === typeof this.options.errorsContainer) {\n        if ($(this.options.errorsContainer).length) return $(this.options.errorsContainer).append(this._ui.$errorsWrapper);else ParsleyUtils__default.warn('The errors container `' + this.options.errorsContainer + '` does not exist in DOM');\n      } else if ('function' === typeof this.options.errorsContainer) $errorsContainer = this.options.errorsContainer.call(this, this);\n\n      if ('undefined' !== typeof $errorsContainer && $errorsContainer.length) return $errorsContainer.append(this._ui.$errorsWrapper);\n\n      return this._inputHolder().after(this._ui.$errorsWrapper);\n    },\n\n    _actualizeTriggers: function _actualizeTriggers() {\n      var _this3 = this;\n\n      var $toBind = this._findRelated();\n      var trigger;\n\n      // Remove Parsley events already bound on this field\n      $toBind.off('.Parsley');\n      if (this._failedOnce) $toBind.on(ParsleyUtils__default.namespaceEvents(this.options.triggerAfterFailure, 'Parsley'), function () {\n        _this3._validateIfNeeded();\n      });else if (trigger = ParsleyUtils__default.namespaceEvents(this.options.trigger, 'Parsley')) {\n        $toBind.on(trigger, function (event) {\n          _this3._validateIfNeeded(event);\n        });\n      }\n    },\n\n    _validateIfNeeded: function _validateIfNeeded(event) {\n      var _this4 = this;\n\n      // For keyup, keypress, keydown, input... events that could be a little bit obstrusive\n      // do not validate if val length < min threshold on first validation. Once field have been validated once and info\n      // about success or failure have been displayed, always validate with this trigger to reflect every yalidation change.\n      if (event && /key|input/.test(event.type)) if (!(this._ui && this._ui.validationInformationVisible) && this.getValue().length <= this.options.validationThreshold) return;\n\n      if (this.options.debounce) {\n        window.clearTimeout(this._debounced);\n        this._debounced = window.setTimeout(function () {\n          return _this4.validate();\n        }, this.options.debounce);\n      } else this.validate();\n    },\n\n    _resetUI: function _resetUI() {\n      // Reset all event listeners\n      this._failedOnce = false;\n      this._actualizeTriggers();\n\n      // Nothing to do if UI never initialized for this field\n      if ('undefined' === typeof this._ui) return;\n\n      // Reset all errors' li\n      this._ui.$errorsWrapper.removeClass('filled').children().remove();\n\n      // Reset validation class\n      this._resetClass();\n\n      // Reset validation flags and last validation result\n      this._ui.lastValidationResult = [];\n      this._ui.validationInformationVisible = false;\n    },\n\n    _destroyUI: function _destroyUI() {\n      this._resetUI();\n\n      if ('undefined' !== typeof this._ui) this._ui.$errorsWrapper.remove();\n\n      delete this._ui;\n    },\n\n    _successClass: function _successClass() {\n      this._ui.validationInformationVisible = true;\n      this._ui.$errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass);\n    },\n    _errorClass: function _errorClass() {\n      this._ui.validationInformationVisible = true;\n      this._ui.$errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass);\n    },\n    _resetClass: function _resetClass() {\n      this._ui.$errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);\n    }\n  };\n\n  var ParsleyForm = function ParsleyForm(element, domOptions, options) {\n    this.__class__ = 'ParsleyForm';\n\n    this.$element = $(element);\n    this.domOptions = domOptions;\n    this.options = options;\n    this.parent = window.Parsley;\n\n    this.fields = [];\n    this.validationResult = null;\n  };\n\n  var ParsleyForm__statusMapping = { pending: null, resolved: true, rejected: false };\n\n  ParsleyForm.prototype = {\n    onSubmitValidate: function onSubmitValidate(event) {\n      var _this5 = this;\n\n      // This is a Parsley generated submit event, do not validate, do not prevent, simply exit and keep normal behavior\n      if (true === event.parsley) return;\n\n      // If we didn't come here through a submit button, use the first one in the form\n      var $submitSource = this._$submitSource || this.$element.find(ParsleyUtils__default._SubmitSelector).first();\n      this._$submitSource = null;\n      this.$element.find('.parsley-synthetic-submit-button').prop('disabled', true);\n      if ($submitSource.is('[formnovalidate]')) return;\n\n      var promise = this.whenValidate({ event: event });\n\n      if ('resolved' === promise.state() && false !== this._trigger('submit')) {\n        // All good, let event go through. We make this distinction because browsers\n        // differ in their handling of `submit` being called from inside a submit event [#1047]\n      } else {\n          // Rejected or pending: cancel this submit\n          event.stopImmediatePropagation();\n          event.preventDefault();\n          if ('pending' === promise.state()) promise.done(function () {\n            _this5._submit($submitSource);\n          });\n        }\n    },\n\n    onSubmitButton: function onSubmitButton(event) {\n      this._$submitSource = $(event.currentTarget);\n    },\n    // internal\n    // _submit submits the form, this time without going through the validations.\n    // Care must be taken to \"fake\" the actual submit button being clicked.\n    _submit: function _submit($submitSource) {\n      if (false === this._trigger('submit')) return;\n      // Add submit button's data\n      if ($submitSource) {\n        var $synthetic = this.$element.find('.parsley-synthetic-submit-button').prop('disabled', false);\n        if (0 === $synthetic.length) $synthetic = $('<input class=\"parsley-synthetic-submit-button\" type=\"hidden\">').appendTo(this.$element);\n        $synthetic.attr({\n          name: $submitSource.attr('name'),\n          value: $submitSource.attr('value')\n        });\n      }\n\n      this.$element.trigger($.extend($.Event('submit'), { parsley: true }));\n    },\n\n    // Performs validation on fields while triggering events.\n    // @returns `true` if all validations succeeds, `false`\n    // if a failure is immediately detected, or `null`\n    // if dependant on a promise.\n    // Consider using `whenValidate` instead.\n    validate: function validate(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        ParsleyUtils__default.warnOnce('Calling validate on a parsley form without passing arguments as an object is deprecated.');\n\n        var _arguments = _slice.call(arguments);\n\n        var group = _arguments[0];\n        var force = _arguments[1];\n        var event = _arguments[2];\n\n        options = { group: group, force: force, event: event };\n      }\n      return ParsleyForm__statusMapping[this.whenValidate(options).state()];\n    },\n\n    whenValidate: function whenValidate() {\n      var _ParsleyUtils__default$all$done$fail$always,\n          _this6 = this;\n\n      var _ref7 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var group = _ref7.group;\n      var force = _ref7.force;\n      var event = _ref7.event;\n\n      this.submitEvent = event;\n      if (event) {\n        this.submitEvent = $.extend({}, event, { preventDefault: function preventDefault() {\n            ParsleyUtils__default.warnOnce(\"Using `this.submitEvent.preventDefault()` is deprecated; instead, call `this.validationResult = false`\");\n            _this6.validationResult = false;\n          } });\n      }\n      this.validationResult = true;\n\n      // fire validate event to eventually modify things before every validation\n      this._trigger('validate');\n\n      // Refresh form DOM options and form's fields that could have changed\n      this._refreshFields();\n\n      var promises = this._withoutReactualizingFormOptions(function () {\n        return $.map(_this6.fields, function (field) {\n          return field.whenValidate({ force: force, group: group });\n        });\n      });\n\n      return (_ParsleyUtils__default$all$done$fail$always = ParsleyUtils__default.all(promises).done(function () {\n        _this6._trigger('success');\n      }).fail(function () {\n        _this6.validationResult = false;\n        _this6.focus();\n        _this6._trigger('error');\n      }).always(function () {\n        _this6._trigger('validated');\n      })).pipe.apply(_ParsleyUtils__default$all$done$fail$always, _toConsumableArray(this._pipeAccordingToValidationResult()));\n    },\n\n    // Iterate over refreshed fields, and stop on first failure.\n    // Returns `true` if all fields are valid, `false` if a failure is detected\n    // or `null` if the result depends on an unresolved promise.\n    // Prefer using `whenValid` instead.\n    isValid: function isValid(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        ParsleyUtils__default.warnOnce('Calling isValid on a parsley form without passing arguments as an object is deprecated.');\n\n        var _arguments2 = _slice.call(arguments);\n\n        var group = _arguments2[0];\n        var force = _arguments2[1];\n\n        options = { group: group, force: force };\n      }\n      return ParsleyForm__statusMapping[this.whenValid(options).state()];\n    },\n\n    // Iterate over refreshed fields and validate them.\n    // Returns a promise.\n    // A validation that immediately fails will interrupt the validations.\n    whenValid: function whenValid() {\n      var _this7 = this;\n\n      var _ref8 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var group = _ref8.group;\n      var force = _ref8.force;\n\n      this._refreshFields();\n\n      var promises = this._withoutReactualizingFormOptions(function () {\n        return $.map(_this7.fields, function (field) {\n          return field.whenValid({ group: group, force: force });\n        });\n      });\n      return ParsleyUtils__default.all(promises);\n    },\n\n    _refreshFields: function _refreshFields() {\n      return this.actualizeOptions()._bindFields();\n    },\n\n    _bindFields: function _bindFields() {\n      var _this8 = this;\n\n      var oldFields = this.fields;\n\n      this.fields = [];\n      this.fieldsMappedById = {};\n\n      this._withoutReactualizingFormOptions(function () {\n        _this8.$element.find(_this8.options.inputs).not(_this8.options.excluded).each(function (_, element) {\n          var fieldInstance = new window.Parsley.Factory(element, {}, _this8);\n\n          // Only add valid and not excluded `ParsleyField` and `ParsleyFieldMultiple` children\n          if (('ParsleyField' === fieldInstance.__class__ || 'ParsleyFieldMultiple' === fieldInstance.__class__) && true !== fieldInstance.options.excluded) if ('undefined' === typeof _this8.fieldsMappedById[fieldInstance.__class__ + '-' + fieldInstance.__id__]) {\n            _this8.fieldsMappedById[fieldInstance.__class__ + '-' + fieldInstance.__id__] = fieldInstance;\n            _this8.fields.push(fieldInstance);\n          }\n        });\n\n        $.each(ParsleyUtils__default.difference(oldFields, _this8.fields), function (_, field) {\n          field._trigger('reset');\n        });\n      });\n      return this;\n    },\n\n    // Internal only.\n    // Looping on a form's fields to do validation or similar\n    // will trigger reactualizing options on all of them, which\n    // in turn will reactualize the form's options.\n    // To avoid calling actualizeOptions so many times on the form\n    // for nothing, _withoutReactualizingFormOptions temporarily disables\n    // the method actualizeOptions on this form while `fn` is called.\n    _withoutReactualizingFormOptions: function _withoutReactualizingFormOptions(fn) {\n      var oldActualizeOptions = this.actualizeOptions;\n      this.actualizeOptions = function () {\n        return this;\n      };\n      var result = fn();\n      this.actualizeOptions = oldActualizeOptions;\n      return result;\n    },\n\n    // Internal only.\n    // Shortcut to trigger an event\n    // Returns true iff event is not interrupted and default not prevented.\n    _trigger: function _trigger(eventName) {\n      return this.trigger('form:' + eventName);\n    }\n\n  };\n\n  var ConstraintFactory = function ConstraintFactory(parsleyField, name, requirements, priority, isDomConstraint) {\n    if (!/ParsleyField/.test(parsleyField.__class__)) throw new Error('ParsleyField or ParsleyFieldMultiple instance expected');\n\n    var validatorSpec = window.Parsley._validatorRegistry.validators[name];\n    var validator = new ParsleyValidator(validatorSpec);\n\n    $.extend(this, {\n      validator: validator,\n      name: name,\n      requirements: requirements,\n      priority: priority || parsleyField.options[name + 'Priority'] || validator.priority,\n      isDomConstraint: true === isDomConstraint\n    });\n    this._parseRequirements(parsleyField.options);\n  };\n\n  var capitalize = function capitalize(str) {\n    var cap = str[0].toUpperCase();\n    return cap + str.slice(1);\n  };\n\n  ConstraintFactory.prototype = {\n    validate: function validate(value, instance) {\n      var _validator;\n\n      return (_validator = this.validator).validate.apply(_validator, [value].concat(_toConsumableArray(this.requirementList), [instance]));\n    },\n\n    _parseRequirements: function _parseRequirements(options) {\n      var _this9 = this;\n\n      this.requirementList = this.validator.parseRequirements(this.requirements, function (key) {\n        return options[_this9.name + capitalize(key)];\n      });\n    }\n  };\n\n  var ParsleyField = function ParsleyField(field, domOptions, options, parsleyFormInstance) {\n    this.__class__ = 'ParsleyField';\n\n    this.$element = $(field);\n\n    // Set parent if we have one\n    if ('undefined' !== typeof parsleyFormInstance) {\n      this.parent = parsleyFormInstance;\n    }\n\n    this.options = options;\n    this.domOptions = domOptions;\n\n    // Initialize some properties\n    this.constraints = [];\n    this.constraintsByName = {};\n    this.validationResult = true;\n\n    // Bind constraints\n    this._bindConstraints();\n  };\n\n  var parsley_field__statusMapping = { pending: null, resolved: true, rejected: false };\n\n  ParsleyField.prototype = {\n    // # Public API\n    // Validate field and trigger some events for mainly `ParsleyUI`\n    // @returns `true`, an array of the validators that failed, or\n    // `null` if validation is not finished. Prefer using whenValidate\n    validate: function validate(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        ParsleyUtils__default.warnOnce('Calling validate on a parsley field without passing arguments as an object is deprecated.');\n        options = { options: options };\n      }\n      var promise = this.whenValidate(options);\n      if (!promise) // If excluded with `group` option\n        return true;\n      switch (promise.state()) {\n        case 'pending':\n          return null;\n        case 'resolved':\n          return true;\n        case 'rejected':\n          return this.validationResult;\n      }\n    },\n\n    // Validate field and trigger some events for mainly `ParsleyUI`\n    // @returns a promise that succeeds only when all validations do\n    // or `undefined` if field is not in the given `group`.\n    whenValidate: function whenValidate() {\n      var _whenValid$always$done$fail$always,\n          _this10 = this;\n\n      var _ref9 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var force = _ref9.force;\n      var group = _ref9.group;\n\n      // do not validate a field if not the same as given validation group\n      this.refreshConstraints();\n      if (group && !this._isInGroup(group)) return;\n\n      this.value = this.getValue();\n\n      // Field Validate event. `this.value` could be altered for custom needs\n      this._trigger('validate');\n\n      return (_whenValid$always$done$fail$always = this.whenValid({ force: force, value: this.value, _refreshed: true }).always(function () {\n        _this10._reflowUI();\n      }).done(function () {\n        _this10._trigger('success');\n      }).fail(function () {\n        _this10._trigger('error');\n      }).always(function () {\n        _this10._trigger('validated');\n      })).pipe.apply(_whenValid$always$done$fail$always, _toConsumableArray(this._pipeAccordingToValidationResult()));\n    },\n\n    hasConstraints: function hasConstraints() {\n      return 0 !== this.constraints.length;\n    },\n\n    // An empty optional field does not need validation\n    needsValidation: function needsValidation(value) {\n      if ('undefined' === typeof value) value = this.getValue();\n\n      // If a field is empty and not required, it is valid\n      // Except if `data-parsley-validate-if-empty` explicitely added, useful for some custom validators\n      if (!value.length && !this._isRequired() && 'undefined' === typeof this.options.validateIfEmpty) return false;\n\n      return true;\n    },\n\n    _isInGroup: function _isInGroup(group) {\n      if ($.isArray(this.options.group)) return -1 !== $.inArray(group, this.options.group);\n      return this.options.group === group;\n    },\n\n    // Just validate field. Do not trigger any event.\n    // Returns `true` iff all constraints pass, `false` if there are failures,\n    // or `null` if the result can not be determined yet (depends on a promise)\n    // See also `whenValid`.\n    isValid: function isValid(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        ParsleyUtils__default.warnOnce('Calling isValid on a parsley field without passing arguments as an object is deprecated.');\n\n        var _arguments3 = _slice.call(arguments);\n\n        var force = _arguments3[0];\n        var value = _arguments3[1];\n\n        options = { force: force, value: value };\n      }\n      var promise = this.whenValid(options);\n      if (!promise) // Excluded via `group`\n        return true;\n      return parsley_field__statusMapping[promise.state()];\n    },\n\n    // Just validate field. Do not trigger any event.\n    // @returns a promise that succeeds only when all validations do\n    // or `undefined` if the field is not in the given `group`.\n    // The argument `force` will force validation of empty fields.\n    // If a `value` is given, it will be validated instead of the value of the input.\n    whenValid: function whenValid() {\n      var _this11 = this;\n\n      var _ref10 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref10$force = _ref10.force;\n      var force = _ref10$force === undefined ? false : _ref10$force;\n      var value = _ref10.value;\n      var group = _ref10.group;\n      var _refreshed = _ref10._refreshed;\n\n      // Recompute options and rebind constraints to have latest changes\n      if (!_refreshed) this.refreshConstraints();\n      // do not validate a field if not the same as given validation group\n      if (group && !this._isInGroup(group)) return;\n\n      this.validationResult = true;\n\n      // A field without constraint is valid\n      if (!this.hasConstraints()) return $.when();\n\n      // Value could be passed as argument, needed to add more power to 'field:validate'\n      if ('undefined' === typeof value || null === value) value = this.getValue();\n\n      if (!this.needsValidation(value) && true !== force) return $.when();\n\n      var groupedConstraints = this._getGroupedConstraints();\n      var promises = [];\n      $.each(groupedConstraints, function (_, constraints) {\n        // Process one group of constraints at a time, we validate the constraints\n        // and combine the promises together.\n        var promise = ParsleyUtils__default.all($.map(constraints, function (constraint) {\n          return _this11._validateConstraint(value, constraint);\n        }));\n        promises.push(promise);\n        if (promise.state() === 'rejected') return false; // Interrupt processing if a group has already failed\n      });\n      return ParsleyUtils__default.all(promises);\n    },\n\n    // @returns a promise\n    _validateConstraint: function _validateConstraint(value, constraint) {\n      var _this12 = this;\n\n      var result = constraint.validate(value, this);\n      // Map false to a failed promise\n      if (false === result) result = $.Deferred().reject();\n      // Make sure we return a promise and that we record failures\n      return ParsleyUtils__default.all([result]).fail(function (errorMessage) {\n        if (!(_this12.validationResult instanceof Array)) _this12.validationResult = [];\n        _this12.validationResult.push({\n          assert: constraint,\n          errorMessage: 'string' === typeof errorMessage && errorMessage\n        });\n      });\n    },\n\n    // @returns Parsley field computed value that could be overrided or configured in DOM\n    getValue: function getValue() {\n      var value;\n\n      // Value could be overriden in DOM or with explicit options\n      if ('function' === typeof this.options.value) value = this.options.value(this);else if ('undefined' !== typeof this.options.value) value = this.options.value;else value = this.$element.val();\n\n      // Handle wrong DOM or configurations\n      if ('undefined' === typeof value || null === value) return '';\n\n      return this._handleWhitespace(value);\n    },\n\n    // Actualize options that could have change since previous validation\n    // Re-bind accordingly constraints (could be some new, removed or updated)\n    refreshConstraints: function refreshConstraints() {\n      return this.actualizeOptions()._bindConstraints();\n    },\n\n    /**\n    * Add a new constraint to a field\n    *\n    * @param {String}   name\n    * @param {Mixed}    requirements      optional\n    * @param {Number}   priority          optional\n    * @param {Boolean}  isDomConstraint   optional\n    */\n    addConstraint: function addConstraint(name, requirements, priority, isDomConstraint) {\n\n      if (window.Parsley._validatorRegistry.validators[name]) {\n        var constraint = new ConstraintFactory(this, name, requirements, priority, isDomConstraint);\n\n        // if constraint already exist, delete it and push new version\n        if ('undefined' !== this.constraintsByName[constraint.name]) this.removeConstraint(constraint.name);\n\n        this.constraints.push(constraint);\n        this.constraintsByName[constraint.name] = constraint;\n      }\n\n      return this;\n    },\n\n    // Remove a constraint\n    removeConstraint: function removeConstraint(name) {\n      for (var i = 0; i < this.constraints.length; i++) if (name === this.constraints[i].name) {\n        this.constraints.splice(i, 1);\n        break;\n      }\n      delete this.constraintsByName[name];\n      return this;\n    },\n\n    // Update a constraint (Remove + re-add)\n    updateConstraint: function updateConstraint(name, parameters, priority) {\n      return this.removeConstraint(name).addConstraint(name, parameters, priority);\n    },\n\n    // # Internals\n\n    // Internal only.\n    // Bind constraints from config + options + DOM\n    _bindConstraints: function _bindConstraints() {\n      var constraints = [];\n      var constraintsByName = {};\n\n      // clean all existing DOM constraints to only keep javascript user constraints\n      for (var i = 0; i < this.constraints.length; i++) if (false === this.constraints[i].isDomConstraint) {\n        constraints.push(this.constraints[i]);\n        constraintsByName[this.constraints[i].name] = this.constraints[i];\n      }\n\n      this.constraints = constraints;\n      this.constraintsByName = constraintsByName;\n\n      // then re-add Parsley DOM-API constraints\n      for (var name in this.options) this.addConstraint(name, this.options[name], undefined, true);\n\n      // finally, bind special HTML5 constraints\n      return this._bindHtml5Constraints();\n    },\n\n    // Internal only.\n    // Bind specific HTML5 constraints to be HTML5 compliant\n    _bindHtml5Constraints: function _bindHtml5Constraints() {\n      // html5 required\n      if (this.$element.attr('required')) this.addConstraint('required', true, undefined, true);\n\n      // html5 pattern\n      if ('string' === typeof this.$element.attr('pattern')) this.addConstraint('pattern', this.$element.attr('pattern'), undefined, true);\n\n      // range\n      if (this.$element.attr('type') !== 'date' && 'undefined' !== typeof this.$element.attr('min') && 'undefined' !== typeof this.$element.attr('max')) this.addConstraint('range', [this.$element.attr('min'), this.$element.attr('max')], undefined, true);\n\n      // HTML5 min\n      else if (this.$element.attr('type') !== 'date' && 'undefined' !== typeof this.$element.attr('min')) this.addConstraint('min', this.$element.attr('min'), undefined, true);\n\n        // HTML5 max\n        else if (this.$element.attr('type') !== 'date' && 'undefined' !== typeof this.$element.attr('max')) this.addConstraint('max', this.$element.attr('max'), undefined, true);\n\n      // length\n      if ('undefined' !== typeof this.$element.attr('minlength') && 'undefined' !== typeof this.$element.attr('maxlength')) this.addConstraint('length', [this.$element.attr('minlength'), this.$element.attr('maxlength')], undefined, true);\n\n      // HTML5 minlength\n      else if ('undefined' !== typeof this.$element.attr('minlength')) this.addConstraint('minlength', this.$element.attr('minlength'), undefined, true);\n\n        // HTML5 maxlength\n        else if ('undefined' !== typeof this.$element.attr('maxlength')) this.addConstraint('maxlength', this.$element.attr('maxlength'), undefined, true);\n\n      // html5 types\n      var type = this.$element.attr('type');\n\n      if ('undefined' === typeof type) return this;\n\n      // Small special case here for HTML5 number: integer validator if step attribute is undefined or an integer value, number otherwise\n      if ('number' === type) {\n        return this.addConstraint('type', ['number', {\n          step: this.$element.attr('step') || '1',\n          base: this.$element.attr('min') || this.$element.attr('value')\n        }], undefined, true);\n        // Regular other HTML5 supported types\n      } else if (/^(email|url|range)$/i.test(type)) {\n          return this.addConstraint('type', type, undefined, true);\n        }\n      return this;\n    },\n\n    // Internal only.\n    // Field is required if have required constraint without `false` value\n    _isRequired: function _isRequired() {\n      if ('undefined' === typeof this.constraintsByName.required) return false;\n\n      return false !== this.constraintsByName.required.requirements;\n    },\n\n    // Internal only.\n    // Shortcut to trigger an event\n    _trigger: function _trigger(eventName) {\n      return this.trigger('field:' + eventName);\n    },\n\n    // Internal only\n    // Handles whitespace in a value\n    // Use `data-parsley-whitespace=\"squish\"` to auto squish input value\n    // Use `data-parsley-whitespace=\"trim\"` to auto trim input value\n    _handleWhitespace: function _handleWhitespace(value) {\n      if (true === this.options.trimValue) ParsleyUtils__default.warnOnce('data-parsley-trim-value=\"true\" is deprecated, please use data-parsley-whitespace=\"trim\"');\n\n      if ('squish' === this.options.whitespace) value = value.replace(/\\s{2,}/g, ' ');\n\n      if ('trim' === this.options.whitespace || 'squish' === this.options.whitespace || true === this.options.trimValue) value = ParsleyUtils__default.trimString(value);\n\n      return value;\n    },\n\n    // Internal only.\n    // Returns the constraints, grouped by descending priority.\n    // The result is thus an array of arrays of constraints.\n    _getGroupedConstraints: function _getGroupedConstraints() {\n      if (false === this.options.priorityEnabled) return [this.constraints];\n\n      var groupedConstraints = [];\n      var index = {};\n\n      // Create array unique of priorities\n      for (var i = 0; i < this.constraints.length; i++) {\n        var p = this.constraints[i].priority;\n        if (!index[p]) groupedConstraints.push(index[p] = []);\n        index[p].push(this.constraints[i]);\n      }\n      // Sort them by priority DESC\n      groupedConstraints.sort(function (a, b) {\n        return b[0].priority - a[0].priority;\n      });\n\n      return groupedConstraints;\n    }\n\n  };\n\n  var parsley_field = ParsleyField;\n\n  var ParsleyMultiple = function ParsleyMultiple() {\n    this.__class__ = 'ParsleyFieldMultiple';\n  };\n\n  ParsleyMultiple.prototype = {\n    // Add new `$element` sibling for multiple field\n    addElement: function addElement($element) {\n      this.$elements.push($element);\n\n      return this;\n    },\n\n    // See `ParsleyField.refreshConstraints()`\n    refreshConstraints: function refreshConstraints() {\n      var fieldConstraints;\n\n      this.constraints = [];\n\n      // Select multiple special treatment\n      if (this.$element.is('select')) {\n        this.actualizeOptions()._bindConstraints();\n\n        return this;\n      }\n\n      // Gather all constraints for each input in the multiple group\n      for (var i = 0; i < this.$elements.length; i++) {\n\n        // Check if element have not been dynamically removed since last binding\n        if (!$('html').has(this.$elements[i]).length) {\n          this.$elements.splice(i, 1);\n          continue;\n        }\n\n        fieldConstraints = this.$elements[i].data('ParsleyFieldMultiple').refreshConstraints().constraints;\n\n        for (var j = 0; j < fieldConstraints.length; j++) this.addConstraint(fieldConstraints[j].name, fieldConstraints[j].requirements, fieldConstraints[j].priority, fieldConstraints[j].isDomConstraint);\n      }\n\n      return this;\n    },\n\n    // See `ParsleyField.getValue()`\n    getValue: function getValue() {\n      // Value could be overriden in DOM\n      if ('function' === typeof this.options.value) return this.options.value(this);else if ('undefined' !== typeof this.options.value) return this.options.value;\n\n      // Radio input case\n      if (this.$element.is('input[type=radio]')) return this._findRelated().filter(':checked').val() || '';\n\n      // checkbox input case\n      if (this.$element.is('input[type=checkbox]')) {\n        var values = [];\n\n        this._findRelated().filter(':checked').each(function () {\n          values.push($(this).val());\n        });\n\n        return values;\n      }\n\n      // Select multiple case\n      if (this.$element.is('select') && null === this.$element.val()) return [];\n\n      // Default case that should never happen\n      return this.$element.val();\n    },\n\n    _init: function _init() {\n      this.$elements = [this.$element];\n\n      return this;\n    }\n  };\n\n  var ParsleyFactory = function ParsleyFactory(element, options, parsleyFormInstance) {\n    this.$element = $(element);\n\n    // If the element has already been bound, returns its saved Parsley instance\n    var savedparsleyFormInstance = this.$element.data('Parsley');\n    if (savedparsleyFormInstance) {\n\n      // If the saved instance has been bound without a ParsleyForm parent and there is one given in this call, add it\n      if ('undefined' !== typeof parsleyFormInstance && savedparsleyFormInstance.parent === window.Parsley) {\n        savedparsleyFormInstance.parent = parsleyFormInstance;\n        savedparsleyFormInstance._resetOptions(savedparsleyFormInstance.options);\n      }\n\n      if ('object' === typeof options) {\n        $.extend(savedparsleyFormInstance.options, options);\n      }\n\n      return savedparsleyFormInstance;\n    }\n\n    // Parsley must be instantiated with a DOM element or jQuery $element\n    if (!this.$element.length) throw new Error('You must bind Parsley on an existing element.');\n\n    if ('undefined' !== typeof parsleyFormInstance && 'ParsleyForm' !== parsleyFormInstance.__class__) throw new Error('Parent instance must be a ParsleyForm instance');\n\n    this.parent = parsleyFormInstance || window.Parsley;\n    return this.init(options);\n  };\n\n  ParsleyFactory.prototype = {\n    init: function init(options) {\n      this.__class__ = 'Parsley';\n      this.__version__ = '2.6.2';\n      this.__id__ = ParsleyUtils__default.generateID();\n\n      // Pre-compute options\n      this._resetOptions(options);\n\n      // A ParsleyForm instance is obviously a `<form>` element but also every node that is not an input and has the `data-parsley-validate` attribute\n      if (this.$element.is('form') || ParsleyUtils__default.checkAttr(this.$element, this.options.namespace, 'validate') && !this.$element.is(this.options.inputs)) return this.bind('parsleyForm');\n\n      // Every other element is bound as a `ParsleyField` or `ParsleyFieldMultiple`\n      return this.isMultiple() ? this.handleMultiple() : this.bind('parsleyField');\n    },\n\n    isMultiple: function isMultiple() {\n      return this.$element.is('input[type=radio], input[type=checkbox]') || this.$element.is('select') && 'undefined' !== typeof this.$element.attr('multiple');\n    },\n\n    // Multiples fields are a real nightmare :(\n    // Maybe some refactoring would be appreciated here...\n    handleMultiple: function handleMultiple() {\n      var _this13 = this;\n\n      var name;\n      var multiple;\n      var parsleyMultipleInstance;\n\n      // Handle multiple name\n      if (this.options.multiple) ; // We already have our 'multiple' identifier\n      else if ('undefined' !== typeof this.$element.attr('name') && this.$element.attr('name').length) this.options.multiple = name = this.$element.attr('name');else if ('undefined' !== typeof this.$element.attr('id') && this.$element.attr('id').length) this.options.multiple = this.$element.attr('id');\n\n      // Special select multiple input\n      if (this.$element.is('select') && 'undefined' !== typeof this.$element.attr('multiple')) {\n        this.options.multiple = this.options.multiple || this.__id__;\n        return this.bind('parsleyFieldMultiple');\n\n        // Else for radio / checkboxes, we need a `name` or `data-parsley-multiple` to properly bind it\n      } else if (!this.options.multiple) {\n          ParsleyUtils__default.warn('To be bound by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.', this.$element);\n          return this;\n        }\n\n      // Remove special chars\n      this.options.multiple = this.options.multiple.replace(/(:|\\.|\\[|\\]|\\{|\\}|\\$)/g, '');\n\n      // Add proper `data-parsley-multiple` to siblings if we have a valid multiple name\n      if ('undefined' !== typeof name) {\n        $('input[name=\"' + name + '\"]').each(function (i, input) {\n          if ($(input).is('input[type=radio], input[type=checkbox]')) $(input).attr(_this13.options.namespace + 'multiple', _this13.options.multiple);\n        });\n      }\n\n      // Check here if we don't already have a related multiple instance saved\n      var $previouslyRelated = this._findRelated();\n      for (var i = 0; i < $previouslyRelated.length; i++) {\n        parsleyMultipleInstance = $($previouslyRelated.get(i)).data('Parsley');\n        if ('undefined' !== typeof parsleyMultipleInstance) {\n\n          if (!this.$element.data('ParsleyFieldMultiple')) {\n            parsleyMultipleInstance.addElement(this.$element);\n          }\n\n          break;\n        }\n      }\n\n      // Create a secret ParsleyField instance for every multiple field. It will be stored in `data('ParsleyFieldMultiple')`\n      // And will be useful later to access classic `ParsleyField` stuff while being in a `ParsleyFieldMultiple` instance\n      this.bind('parsleyField', true);\n\n      return parsleyMultipleInstance || this.bind('parsleyFieldMultiple');\n    },\n\n    // Return proper `ParsleyForm`, `ParsleyField` or `ParsleyFieldMultiple`\n    bind: function bind(type, doNotStore) {\n      var parsleyInstance;\n\n      switch (type) {\n        case 'parsleyForm':\n          parsleyInstance = $.extend(new ParsleyForm(this.$element, this.domOptions, this.options), new ParsleyAbstract(), window.ParsleyExtend)._bindFields();\n          break;\n        case 'parsleyField':\n          parsleyInstance = $.extend(new parsley_field(this.$element, this.domOptions, this.options, this.parent), new ParsleyAbstract(), window.ParsleyExtend);\n          break;\n        case 'parsleyFieldMultiple':\n          parsleyInstance = $.extend(new parsley_field(this.$element, this.domOptions, this.options, this.parent), new ParsleyMultiple(), new ParsleyAbstract(), window.ParsleyExtend)._init();\n          break;\n        default:\n          throw new Error(type + 'is not a supported Parsley type');\n      }\n\n      if (this.options.multiple) ParsleyUtils__default.setAttr(this.$element, this.options.namespace, 'multiple', this.options.multiple);\n\n      if ('undefined' !== typeof doNotStore) {\n        this.$element.data('ParsleyFieldMultiple', parsleyInstance);\n\n        return parsleyInstance;\n      }\n\n      // Store the freshly bound instance in a DOM element for later access using jQuery `data()`\n      this.$element.data('Parsley', parsleyInstance);\n\n      // Tell the world we have a new ParsleyForm or ParsleyField instance!\n      parsleyInstance._actualizeTriggers();\n      parsleyInstance._trigger('init');\n\n      return parsleyInstance;\n    }\n  };\n\n  var vernums = $.fn.jquery.split('.');\n  if (parseInt(vernums[0]) <= 1 && parseInt(vernums[1]) < 8) {\n    throw \"The loaded version of jQuery is too old. Please upgrade to 1.8.x or better.\";\n  }\n  if (!vernums.forEach) {\n    ParsleyUtils__default.warn('Parsley requires ES5 to run properly. Please include https://github.com/es-shims/es5-shim');\n  }\n  // Inherit `on`, `off` & `trigger` to Parsley:\n  var Parsley = $.extend(new ParsleyAbstract(), {\n    $element: $(document),\n    actualizeOptions: null,\n    _resetOptions: null,\n    Factory: ParsleyFactory,\n    version: '2.6.2'\n  });\n\n  // Supplement ParsleyField and Form with ParsleyAbstract\n  // This way, the constructors will have access to those methods\n  $.extend(parsley_field.prototype, ParsleyUI.Field, ParsleyAbstract.prototype);\n  $.extend(ParsleyForm.prototype, ParsleyUI.Form, ParsleyAbstract.prototype);\n  // Inherit actualizeOptions and _resetOptions:\n  $.extend(ParsleyFactory.prototype, ParsleyAbstract.prototype);\n\n  // ### jQuery API\n  // `$('.elem').parsley(options)` or `$('.elem').psly(options)`\n  $.fn.parsley = $.fn.psly = function (options) {\n    if (this.length > 1) {\n      var instances = [];\n\n      this.each(function () {\n        instances.push($(this).parsley(options));\n      });\n\n      return instances;\n    }\n\n    // Return undefined if applied to non existing DOM element\n    if (!$(this).length) {\n      ParsleyUtils__default.warn('You must bind Parsley on an existing element.');\n\n      return;\n    }\n\n    return new ParsleyFactory(this, options);\n  };\n\n  // ### ParsleyField and ParsleyForm extension\n  // Ensure the extension is now defined if it wasn't previously\n  if ('undefined' === typeof window.ParsleyExtend) window.ParsleyExtend = {};\n\n  // ### Parsley config\n  // Inherit from ParsleyDefault, and copy over any existing values\n  Parsley.options = $.extend(ParsleyUtils__default.objectCreate(ParsleyDefaults), window.ParsleyConfig);\n  window.ParsleyConfig = Parsley.options; // Old way of accessing global options\n\n  // ### Globals\n  window.Parsley = window.psly = Parsley;\n  window.ParsleyUtils = ParsleyUtils__default;\n\n  // ### Define methods that forward to the registry, and deprecate all access except through window.Parsley\n  var registry = window.Parsley._validatorRegistry = new ParsleyValidatorRegistry(window.ParsleyConfig.validators, window.ParsleyConfig.i18n);\n  window.ParsleyValidator = {};\n  $.each('setLocale addCatalog addMessage addMessages getErrorMessage formatMessage addValidator updateValidator removeValidator'.split(' '), function (i, method) {\n    window.Parsley[method] = $.proxy(registry, method);\n    window.ParsleyValidator[method] = function () {\n      var _window$Parsley;\n\n      ParsleyUtils__default.warnOnce('Accessing the method \\'' + method + '\\' through ParsleyValidator is deprecated. Simply call \\'window.Parsley.' + method + '(...)\\'');\n      return (_window$Parsley = window.Parsley)[method].apply(_window$Parsley, arguments);\n    };\n  });\n\n  // ### ParsleyUI\n  // Deprecated global object\n  window.Parsley.UI = ParsleyUI;\n  window.ParsleyUI = {\n    removeError: function removeError(instance, name, doNotUpdateClass) {\n      var updateClass = true !== doNotUpdateClass;\n      ParsleyUtils__default.warnOnce('Accessing ParsleyUI is deprecated. Call \\'removeError\\' on the instance directly. Please comment in issue 1073 as to your need to call this method.');\n      return instance.removeError(name, { updateClass: updateClass });\n    },\n    getErrorsMessages: function getErrorsMessages(instance) {\n      ParsleyUtils__default.warnOnce('Accessing ParsleyUI is deprecated. Call \\'getErrorsMessages\\' on the instance directly.');\n      return instance.getErrorsMessages();\n    }\n  };\n  $.each('addError updateError'.split(' '), function (i, method) {\n    window.ParsleyUI[method] = function (instance, name, message, assert, doNotUpdateClass) {\n      var updateClass = true !== doNotUpdateClass;\n      ParsleyUtils__default.warnOnce('Accessing ParsleyUI is deprecated. Call \\'' + method + '\\' on the instance directly. Please comment in issue 1073 as to your need to call this method.');\n      return instance[method](name, { message: message, assert: assert, updateClass: updateClass });\n    };\n  });\n\n  // ### PARSLEY auto-binding\n  // Prevent it by setting `ParsleyConfig.autoBind` to `false`\n  if (false !== window.ParsleyConfig.autoBind) {\n    $(function () {\n      // Works only on `data-parsley-validate`.\n      if ($('[data-parsley-validate]').length) $('[data-parsley-validate]').parsley();\n    });\n  }\n\n  var o = $({});\n  var deprecated = function deprecated() {\n    ParsleyUtils__default.warnOnce(\"Parsley's pubsub module is deprecated; use the 'on' and 'off' methods on parsley instances or window.Parsley\");\n  };\n\n  // Returns an event handler that calls `fn` with the arguments it expects\n  function adapt(fn, context) {\n    // Store to allow unbinding\n    if (!fn.parsleyAdaptedCallback) {\n      fn.parsleyAdaptedCallback = function () {\n        var args = Array.prototype.slice.call(arguments, 0);\n        args.unshift(this);\n        fn.apply(context || o, args);\n      };\n    }\n    return fn.parsleyAdaptedCallback;\n  }\n\n  var eventPrefix = 'parsley:';\n  // Converts 'parsley:form:validate' into 'form:validate'\n  function eventName(name) {\n    if (name.lastIndexOf(eventPrefix, 0) === 0) return name.substr(eventPrefix.length);\n    return name;\n  }\n\n  // $.listen is deprecated. Use Parsley.on instead.\n  $.listen = function (name, callback) {\n    var context;\n    deprecated();\n    if ('object' === typeof arguments[1] && 'function' === typeof arguments[2]) {\n      context = arguments[1];\n      callback = arguments[2];\n    }\n\n    if ('function' !== typeof callback) throw new Error('Wrong parameters');\n\n    window.Parsley.on(eventName(name), adapt(callback, context));\n  };\n\n  $.listenTo = function (instance, name, fn) {\n    deprecated();\n    if (!(instance instanceof parsley_field) && !(instance instanceof ParsleyForm)) throw new Error('Must give Parsley instance');\n\n    if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong parameters');\n\n    instance.on(eventName(name), adapt(fn));\n  };\n\n  $.unsubscribe = function (name, fn) {\n    deprecated();\n    if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong arguments');\n    window.Parsley.off(eventName(name), fn.parsleyAdaptedCallback);\n  };\n\n  $.unsubscribeTo = function (instance, name) {\n    deprecated();\n    if (!(instance instanceof parsley_field) && !(instance instanceof ParsleyForm)) throw new Error('Must give Parsley instance');\n    instance.off(eventName(name));\n  };\n\n  $.unsubscribeAll = function (name) {\n    deprecated();\n    window.Parsley.off(eventName(name));\n    $('form,input,textarea,select').each(function () {\n      var instance = $(this).data('Parsley');\n      if (instance) {\n        instance.off(eventName(name));\n      }\n    });\n  };\n\n  // $.emit is deprecated. Use jQuery events instead.\n  $.emit = function (name, instance) {\n    var _instance;\n\n    deprecated();\n    var instanceGiven = instance instanceof parsley_field || instance instanceof ParsleyForm;\n    var args = Array.prototype.slice.call(arguments, instanceGiven ? 2 : 1);\n    args.unshift(eventName(name));\n    if (!instanceGiven) {\n      instance = window.Parsley;\n    }\n    (_instance = instance).trigger.apply(_instance, _toConsumableArray(args));\n  };\n\n  var pubsub = {};\n\n  $.extend(true, Parsley, {\n    asyncValidators: {\n      'default': {\n        fn: function fn(xhr) {\n          // By default, only status 2xx are deemed successful.\n          // Note: we use status instead of state() because responses with status 200\n          // but invalid messages (e.g. an empty body for content type set to JSON) will\n          // result in state() === 'rejected'.\n          return xhr.status >= 200 && xhr.status < 300;\n        },\n        url: false\n      },\n      reverse: {\n        fn: function fn(xhr) {\n          // If reverse option is set, a failing ajax request is considered successful\n          return xhr.status < 200 || xhr.status >= 300;\n        },\n        url: false\n      }\n    },\n\n    addAsyncValidator: function addAsyncValidator(name, fn, url, options) {\n      Parsley.asyncValidators[name] = {\n        fn: fn,\n        url: url || false,\n        options: options || {}\n      };\n\n      return this;\n    }\n\n  });\n\n  Parsley.addValidator('remote', {\n    requirementType: {\n      '': 'string',\n      'validator': 'string',\n      'reverse': 'boolean',\n      'options': 'object'\n    },\n\n    validateString: function validateString(value, url, options, instance) {\n      var data = {};\n      var ajaxOptions;\n      var csr;\n      var validator = options.validator || (true === options.reverse ? 'reverse' : 'default');\n\n      if ('undefined' === typeof Parsley.asyncValidators[validator]) throw new Error('Calling an undefined async validator: `' + validator + '`');\n\n      url = Parsley.asyncValidators[validator].url || url;\n\n      // Fill current value\n      if (url.indexOf('{value}') > -1) {\n        url = url.replace('{value}', encodeURIComponent(value));\n      } else {\n        data[instance.$element.attr('name') || instance.$element.attr('id')] = value;\n      }\n\n      // Merge options passed in from the function with the ones in the attribute\n      var remoteOptions = $.extend(true, options.options || {}, Parsley.asyncValidators[validator].options);\n\n      // All `$.ajax(options)` could be overridden or extended directly from DOM in `data-parsley-remote-options`\n      ajaxOptions = $.extend(true, {}, {\n        url: url,\n        data: data,\n        type: 'GET'\n      }, remoteOptions);\n\n      // Generate store key based on ajax options\n      instance.trigger('field:ajaxoptions', instance, ajaxOptions);\n\n      csr = $.param(ajaxOptions);\n\n      // Initialise querry cache\n      if ('undefined' === typeof Parsley._remoteCache) Parsley._remoteCache = {};\n\n      // Try to retrieve stored xhr\n      var xhr = Parsley._remoteCache[csr] = Parsley._remoteCache[csr] || $.ajax(ajaxOptions);\n\n      var handleXhr = function handleXhr() {\n        var result = Parsley.asyncValidators[validator].fn.call(instance, xhr, url, options);\n        if (!result) // Map falsy results to rejected promise\n          result = $.Deferred().reject();\n        return $.when(result);\n      };\n\n      return xhr.then(handleXhr, handleXhr);\n    },\n\n    priority: -1\n  });\n\n  Parsley.on('form:submit', function () {\n    Parsley._remoteCache = {};\n  });\n\n  window.ParsleyExtend.addAsyncValidator = function () {\n    ParsleyUtils.warnOnce('Accessing the method `addAsyncValidator` through an instance is deprecated. Simply call `Parsley.addAsyncValidator(...)`');\n    return Parsley.addAsyncValidator.apply(Parsley, arguments);\n  };\n\n  // This is included with the Parsley library itself,\n  // thus there is no use in adding it to your project.\n  Parsley.addMessages('en', {\n    defaultMessage: \"This value seems to be invalid.\",\n    type: {\n      email: \"This value should be a valid email.\",\n      url: \"This value should be a valid url.\",\n      number: \"This value should be a valid number.\",\n      integer: \"This value should be a valid integer.\",\n      digits: \"This value should be digits.\",\n      alphanum: \"This value should be alphanumeric.\"\n    },\n    notblank: \"This value should not be blank.\",\n    required: \"This value is required.\",\n    pattern: \"This value seems to be invalid.\",\n    min: \"This value should be greater than or equal to %s.\",\n    max: \"This value should be lower than or equal to %s.\",\n    range: \"This value should be between %s and %s.\",\n    minlength: \"This value is too short. It should have %s characters or more.\",\n    maxlength: \"This value is too long. It should have %s characters or fewer.\",\n    length: \"This value length is invalid. It should be between %s and %s characters long.\",\n    mincheck: \"You must select at least %s choices.\",\n    maxcheck: \"You must select %s choices or fewer.\",\n    check: \"You must select between %s and %s choices.\",\n    equalto: \"This value should be the same.\"\n  });\n\n  Parsley.setLocale('en');\n\n  /**\n   * inputevent - Alleviate browser bugs for input events\n   * https://github.com/marcandre/inputevent\n   * @version v0.0.3 - (built Thu, Apr 14th 2016, 5:58 pm)\n   * @author Marc-Andre Lafortune <github@marc-andre.ca>\n   * @license MIT\n   */\n\n  function InputEvent() {\n    var _this14 = this;\n\n    var globals = window || global;\n\n    // Slightly odd way construct our object. This way methods are force bound.\n    // Used to test for duplicate library.\n    $.extend(this, {\n\n      // For browsers that do not support isTrusted, assumes event is native.\n      isNativeEvent: function isNativeEvent(evt) {\n        return evt.originalEvent && evt.originalEvent.isTrusted !== false;\n      },\n\n      fakeInputEvent: function fakeInputEvent(evt) {\n        if (_this14.isNativeEvent(evt)) {\n          $(evt.target).trigger('input');\n        }\n      },\n\n      misbehaves: function misbehaves(evt) {\n        if (_this14.isNativeEvent(evt)) {\n          _this14.behavesOk(evt);\n          $(document).on('change.inputevent', evt.data.selector, _this14.fakeInputEvent);\n          _this14.fakeInputEvent(evt);\n        }\n      },\n\n      behavesOk: function behavesOk(evt) {\n        if (_this14.isNativeEvent(evt)) {\n          $(document) // Simply unbinds the testing handler\n          .off('input.inputevent', evt.data.selector, _this14.behavesOk).off('change.inputevent', evt.data.selector, _this14.misbehaves);\n        }\n      },\n\n      // Bind the testing handlers\n      install: function install() {\n        if (globals.inputEventPatched) {\n          return;\n        }\n        globals.inputEventPatched = '0.0.3';\n        var _arr = ['select', 'input[type=\"checkbox\"]', 'input[type=\"radio\"]', 'input[type=\"file\"]'];\n        for (var _i = 0; _i < _arr.length; _i++) {\n          var selector = _arr[_i];\n          $(document).on('input.inputevent', selector, { selector: selector }, _this14.behavesOk).on('change.inputevent', selector, { selector: selector }, _this14.misbehaves);\n        }\n      },\n\n      uninstall: function uninstall() {\n        delete globals.inputEventPatched;\n        $(document).off('.inputevent');\n      }\n\n    });\n  };\n\n  var inputevent = new InputEvent();\n\n  inputevent.install();\n\n  var parsley = Parsley;\n\n  return parsley;\n});\n//# sourceMappingURL=parsley.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./views/common/parsley/index.js"],"sourceRoot":""}