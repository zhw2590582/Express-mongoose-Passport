{"version":3,"sources":["webpack:///js/login/index.js","webpack:///./views/login/index.js","webpack:///./views/common/dialog/index.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","$","dialog","document","ready","on","notyf","alert","confirm","call","38","46","jQuery","_typeof","Symbol","iterator","obj","constructor","prototype","require","id","mod","__modules__","define","path","fn","Popup","this","destroyed","__popup","css","display","position","outline","attr","html","innerHTML","appendTo","__backdrop","__mask","opacity","background","node","backdrop","_count","_isIE6","style","_isFixed","extend","fixed","open","returnValue","autofocus","align","className","show","anchor","popup","__activeElement","__getActive","follow","__ready","addClass","modal","window","proxy","reset","backdropCss","left","top","width","height","overflow","userSelect","zIndex","tabindex","focus","clone","insertAfter","insertBefore","__dispatchEvent","showModal","apply","arguments","close","result","undefined","hide","removeClass","blur","remove","current","off","i","elem","__follow","__center","index","contains","find","_autofocus","__focus","activeElement","isBlur","addEventListener","type","callback","__getEventListener","push","removeEventListener","listeners","length","splice","listener","__listener","test","nodeName","e","contentDocument","$window","$document","dl","scrollLeft","dt","scrollTop","ww","wh","ow","oh","Math","max","parseInt","$elem","parentNode","__followSkin","o","offset","that","winWidth","winHeight","docLeft","docTop","popupWidth","popupHeight","outerWidth","outerHeight","__offset","x","y","minLeft","minTop","maxLeft","maxTop","split","reverse","bottom","right","name","temp","center","range","each","val","join","isNode","pageX","pageY","target","ownerDocument","defaultView","parentWindow","frameElement","$ownerDocument","frameOffset","frameLeft","frameTop","backdropBackground","backdropOpacity","content","title","statusbar","button","ok","cancel","okValue","cancelValue","cancelDisplay","padding","skin","quickClose","defaults","_expando","Date","_isMobile","navigator","userAgent","artDialog","options","originalOptions","nodeType","original","api","get","isArray","value","list","create","$popup","$backdrop","_popup","aria-labelledby","_$","aria-describedby","event","_trigger","preventDefault","animate","_esc","rinput","isTop","keyCode","oncreate","$content","empty","append","text","args","number","callbacks","disabled","$this","noop","getCurrent","time","_config","onshow","setTimeout","47"],"mappings":"AAAAA,cAAc,IAERC,EACA,SAASC,EAAQC,EAASC,IAEH,SAASC,GAAI,YCL1C,IAAIC,GAASF,EAAQ,GAErBA,GAAQ,IACRA,EAAQ,IAERC,EAAEE,UAAUC,MAAM,WAChBH,EAAE,gBAAgBI,GAAG,QAAS,WAC5BH,EAAO,QAAS,WACdA,EAAO,OAAQ,KAAM,KACrBI,MAAMC,MAAM,wDAGhBD,MAAME,QAAQ,kDDScC,KAAKV,EAASC,EAAoB,MAI1DU,GACA,SAASZ,EAAQC,KAMjBY,GACA,SAASb,EAAQC,EAASC,IAEH,SAASY,GAAS,YAE9C,IAAIC,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF;CErC1M,WAI3D,QAASG,GAAQC,GACf,GAAIC,GAAMC,EAAYF,GAClBrB,EAAU,SAEd,OAAmB,YAAf,mBAAOsB,GAAP,YAAAR,EAAOQ,IACFA,GAGJA,EAAItB,KACPsB,EAAItB,MACJsB,EAAItB,GAAWsB,EAAIZ,KAAKY,EAAItB,GAAUoB,EAASE,EAAItB,GAAUsB,IAAQA,EAAItB,IAGpEsB,EAAItB,IAGb,QAASwB,GAAOC,EAAMC,GACpBH,EAAYE,GAAQC,EAnBtB,GAAIH,KAwBJC,GAAO,SAAU,WACf,MAAOX;;;;;;;;;AAcTW,EAAO,QAAS,SAASJ,GASvB,QAASO,KAEPC,KAAKC,WAAY,EAGjBD,KAAKE,QAAU5B,EAAE,WAEd6B,KACCC,QAAS,OACTC,SAAU,WAWVC,QAAS,IAEVC,KAAK,WAAY,MACjBC,KAAKR,KAAKS,WACVC,SAAS,QAGZV,KAAKW,WAAaX,KAAKY,OAAStC,EAAE,WAC/B6B,KACCU,QAAS,GACTC,WAAY,SAMhBd,KAAKe,KAAOf,KAAKE,QAAQ,GACzBF,KAAKgB,SAAWhB,KAAKW,WAAW,GAEhCM,IA9CF,GAAI3C,GAAIkB,EAAQ,UAEZyB,EAAS,EACTC,IAAW,YAAc5C,GAAE,QAAQ,GAAG6C,OACtCC,GAAYF,CAwnBhB,OA1kBA5C,GAAE+C,OAAOtB,EAAMR,WA6CbwB,KAAM,KAGNC,SAAU,KAGVM,OAAO,EAGPrB,WAAW,EAGXsB,MAAM,EAGNC,YAAa,GAGbC,WAAW,EAGXC,MAAO,cAGPjB,UAAW,GAGXkB,UAAW,WAMXC,KAAM,SAASC,GAEb,GAAI7B,KAAKC,UACP,MAAOD,KAGT,IACI8B,GAAQ9B,KAAKE,QACbc,EAAWhB,KAAKW,UASpB,IAPAX,KAAK+B,gBAAkB/B,KAAKgC,cAE5BhC,KAAKuB,MAAO,EACZvB,KAAKiC,OAASJ,GAAU7B,KAAKiC,QAIxBjC,KAAKkC,QAAS,CAYjB,GAVAJ,EACGK,SAASnC,KAAK2B,WACdpB,KAAK,OAAQP,KAAKoC,MAAQ,cAAgB,UAC1CjC,IAAI,WAAYH,KAAKsB,MAAQ,QAAU,YAErCJ,GACH5C,EAAE+D,QAAQ3D,GAAG,SAAUJ,EAAEgE,MAAMtC,KAAKuC,MAAOvC,OAIzCA,KAAKoC,MAAO,CACd,GAAII,IACFnC,SAAU,QACVoC,KAAM,EACNC,IAAK,EACLC,MAAO,OACPC,OAAQ,OACRC,SAAU,SACVC,WAAY,OACZC,OAAQ/C,KAAK+C,QAAUhD,EAAMgD,OAI/BjB,GAAMK,SAASnC,KAAK2B,UAAY,UAG3BP,GACH9C,EAAE+C,OAAOmB,GACPnC,SAAU,WACVsC,MAAOrE,EAAE+D,QAAQM,QAAU,KAC3BC,OAAQtE,EAAEE,UAAUoE,SAAW,OAKnC5B,EACGb,IAAIqC,GACJjC,MACCyC,SAAU,MAEXtE,GAAG,QAASJ,EAAEgE,MAAMtC,KAAKiD,MAAOjD,OAGnCA,KAAKY,OAASI,EACXkC,OAAM,GACN3C,KAAK,QAAS,IACd4C,YAAYrB,GAEfd,EACGmB,SAASnC,KAAK2B,UAAY,aAC1ByB,aAAatB,GAEhB9B,KAAKkC,SAAU,EAIZJ,EAAMtB,QACTsB,EAAMtB,KAAKR,KAAKS,WAepB,MAVAqB,GACGK,SAASnC,KAAK2B,UAAY,SAC1BC,OAEHZ,EAASY,OAGT5B,KAAKuC,QAAQU,QACbjD,KAAKqD,gBAAgB,QAEdrD,MAKTsD,UAAW,WAET,MADAtD,MAAKoC,OAAQ,EACNpC,KAAK4B,KAAK2B,MAAMvD,KAAMwD,YAK/BC,MAAO,SAASC,GAed,OAbK1D,KAAKC,WAAaD,KAAKuB,OAEXoC,SAAXD,IACF1D,KAAKwB,YAAckC,GAGrB1D,KAAKE,QAAQ0D,OAAOC,YAAY7D,KAAK2B,UAAY,SACjD3B,KAAKW,WAAWiD,OAChB5D,KAAKuB,MAAO,EACZvB,KAAK8D,OACL9D,KAAKqD,gBAAgB,UAGhBrD,MAKT+D,OAAQ,WAEN,GAAI/D,KAAKC,UACP,MAAOD,KAGTA,MAAKqD,gBAAgB,gBAEjBtD,EAAMiE,UAAYhE,OACpBD,EAAMiE,QAAU,MAKlBhE,KAAKE,QAAQ6D,SACb/D,KAAKW,WAAWoD,SAChB/D,KAAKY,OAAOmD,SAGP7C,GACH5C,EAAE+D,QAAQ4B,IAAI,SAAUjE,KAAKuC,OAI/BvC,KAAKqD,gBAAgB,SAErB,KAAK,GAAIa,KAAKlE,YACLA,MAAKkE,EAGd,OAAOlE,OAKTuC,MAAO,WAEL,GAAI4B,GAAOnE,KAAKiC,MAUhB,OARIkC,GACFnE,KAAKoE,SAASD,GAEdnE,KAAKqE,WAGPrE,KAAKqD,gBAAgB,SAEdrD,MAKTiD,MAAO,WAEL,GAAIlC,GAAOf,KAAKe,KACZe,EAAQ9B,KAAKE,QACb8D,EAAUjE,EAAMiE,QAChBM,EAAQtE,KAAK+C,OAAShD,EAAMgD,QAOhC,IALIiB,GAAWA,IAAYhE,MACzBgE,EAAQF,MAAK,IAIVxF,EAAEiG,SAASxD,EAAMf,KAAKgC,eAAgB,CACzC,GAAIP,GAAYK,EAAM0C,KAAK,eAAe,IAErCxE,KAAKyE,YAAchD,EACtBzB,KAAKyE,YAAa,EAElBhD,EAAYV,EAGdf,KAAK0E,QAAQjD,GAYf,MARAK,GAAM3B,IAAI,SAAUmE,GAGpBvE,EAAMiE,QAAUhE,KAChB8B,EAAMK,SAASnC,KAAK2B,UAAY,UAEhC3B,KAAKqD,gBAAgB,SAEdrD,MAKT8D,KAAM,WAEJ,GAAIa,GAAgB3E,KAAK+B,gBACrB6C,EAASpB,UAAU,EAWvB,OARIoB,MAAW,GACb5E,KAAK0E,QAAQC,GAGf3E,KAAKyE,YAAa,EAClBzE,KAAKE,QAAQ2D,YAAY7D,KAAK2B,UAAY,UAC1C3B,KAAKqD,gBAAgB,QAEdrD,MAST6E,iBAAkB,SAASC,EAAMC,GAE/B,MADA/E,MAAKgF,mBAAmBF,GAAMG,KAAKF,GAC5B/E,MASTkF,oBAAqB,SAASJ,EAAMC,GAElC,IAAK,GADDI,GAAYnF,KAAKgF,mBAAmBF,GAC/BZ,EAAI,EAAGA,EAAIiB,EAAUC,OAAQlB,IAChCa,IAAaI,EAAUjB,IACzBiB,EAAUE,OAAOnB,IAAK,EAG1B,OAAOlE,OAKTgF,mBAAoB,SAASF,GAC3B,GAAIQ,GAAWtF,KAAKuF,UAOpB,OANKD,KACHA,EAAWtF,KAAKuF,eAEbD,EAASR,KACZQ,EAASR,OAEJQ,EAASR,IAKlBzB,gBAAiB,SAASyB,GACxB,GAAIK,GAAYnF,KAAKgF,mBAAmBF,EAEpC9E,MAAK,KAAO8E,IACd9E,KAAK,KAAO8E,IAGd,KAAK,GAAIZ,GAAI,EAAGA,EAAIiB,EAAUC,OAAQlB,IACpCiB,EAAUjB,GAAGpF,KAAKkB,OAMtB0E,QAAS,SAASP,GAGhB,IAEMnE,KAAKyB,YAAc,YAAY+D,KAAKrB,EAAKsB,WAC3CtB,EAAKlB,QAEP,MAAOyC,MAKX1D,YAAa,WACX,IACE,GAAI2C,GAAgBnG,SAASmG,cACzBgB,EAAkBhB,EAAcgB,gBAChCxB,EAAOwB,GAAmBA,EAAgBhB,eAAiBA,CAC/D,OAAOR,GACP,MAAOuB,MAKXrB,SAAU,WAER,GAAIvC,GAAQ9B,KAAKE,QACb0F,EAAUtH,EAAE+D,QACZwD,EAAYvH,EAAEE,UACd8C,EAAQtB,KAAKsB,MACbwE,EAAKxE,EAAQ,EAAIuE,EAAUE,aAC3BC,EAAK1E,EAAQ,EAAIuE,EAAUI,YAC3BC,EAAKN,EAAQjD,QACbwD,EAAKP,EAAQhD,SACbwD,EAAKtE,EAAMa,QACX0D,EAAKvE,EAAMc,SACXH,GAAQyD,EAAKE,GAAM,EAAIN,EACvBpD,EAAkB,KAAXyD,EAAKE,GAAY,IAAOL,EAC/B7E,EAAQW,EAAM,GAAGX,KAGrBA,GAAMsB,KAAO6D,KAAKC,IAAIC,SAAS/D,GAAOqD,GAAM,KAC5C3E,EAAMuB,IAAM4D,KAAKC,IAAIC,SAAS9D,GAAMsD,GAAM,MAK5C5B,SAAU,SAASvC,GAEjB,GAAI4E,GAAQ5E,EAAO6E,YAAcpI,EAAEuD,GAC/BC,EAAQ9B,KAAKE,OASjB,IANIF,KAAK2G,cACP7E,EAAM+B,YAAY7D,KAAK2G,cAKrBF,EAAO,CACT,GAAIG,GAAIH,EAAMI,QACd,IAAID,EAAEnE,KAAOmE,EAAElE,IAAM,EACnB,MAAO1C,MAAKqE,WAIhB,GAAIyC,GAAO9G,KACPsB,EAAQtB,KAAKsB,MAEbsE,EAAUtH,EAAE+D,QACZwD,EAAYvH,EAAEE,UACduI,EAAWnB,EAAQjD,QACnBqE,EAAYpB,EAAQhD,SACpBqE,EAAUpB,EAAUE,aACpBmB,EAASrB,EAAUI,YAGnBkB,EAAarF,EAAMa,QACnByE,EAActF,EAAMc,SACpBD,EAAQ8D,EAAQA,EAAMY,aAAe,EACrCzE,EAAS6D,EAAQA,EAAMa,cAAgB,EACvCT,EAAS7G,KAAKuH,SAAS1F,GACvB2F,EAAIX,EAAOpE,KACXgF,EAAIZ,EAAOnE,IACXD,EAAOnB,EAAQkG,EAAIP,EAAUO,EAC7B9E,EAAMpB,EAAQmG,EAAIP,EAASO,EAG3BC,EAAUpG,EAAQ,EAAI2F,EACtBU,EAASrG,EAAQ,EAAI4F,EACrBU,EAAUF,EAAUX,EAAWI,EAC/BU,EAASF,EAASX,EAAYI,EAG9BjH,KACAuB,EAAQ1B,KAAK0B,MAAMoG,MAAM,KACzBnG,EAAY3B,KAAK2B,UAAY,IAC7BoG,GACFrF,IAAK,SACLsF,OAAQ,MACRvF,KAAM,QACNwF,MAAO,QAELC,GACFxF,IAAK,MACLsF,OAAQ,MACRvF,KAAM,OACNwF,MAAO,QAILE,IACFzF,IAAKA,EAAM0E,EACXY,OAAQtF,EAAME,EACdH,KAAMA,EAAO0E,EACbc,MAAOxF,EAAOE,IAEdD,IAAKA,EACLsF,OAAQtF,EAAM0E,EAAcxE,EAC5BH,KAAMA,EACNwF,MAAOxF,EAAO0E,EAAaxE,IAIzByF,GACF3F,KAAMA,EAAOE,EAAQ,EAAIwE,EAAa,EACtCzE,IAAKA,EAAME,EAAS,EAAIwE,EAAc,GAIpCiB,GACF5F,MAAOiF,EAASE,GAChBlF,KAAMiF,EAAQE,GAKhBvJ,GAAEgK,KAAK5G,EAAO,SAASwC,EAAGqE,GAGpBJ,EAAKjE,GAAGqE,GAAOF,EAAMH,EAAKK,IAAM,KAClCA,EAAM7G,EAAMwC,GAAK6D,EAAQQ,IAIvBJ,EAAKjE,GAAGqE,GAAOF,EAAMH,EAAKK,IAAM,KAClC7G,EAAMwC,GAAK6D,EAAQQ,MAOlB7G,EAAM,KACTwG,EAAKxG,EAAM,IAAyB,SAAnBwG,EAAKxG,EAAM,IAAiB,MAAQ,OACrDyG,EAAK,GAAGzG,EAAM,IAAM0G,EAAOF,EAAKxG,EAAM,MAKxCC,GAAaD,EAAM8G,KAAK,KAAO,IAAMxI,KAAK2B,UAAY,UAEtDmF,EAAKH,aAAehF,EAGhB8E,GACF3E,EAAMK,SAASR,GAIjBxB,EAAI+H,EAAKxG,EAAM,KAAO8E,SAAS2B,EAAK,GAAGzG,EAAM,KAC7CvB,EAAI+H,EAAKxG,EAAM,KAAO8E,SAAS2B,EAAK,GAAGzG,EAAM,KAC7CI,EAAM3B,IAAIA,IAOZoH,SAAU,SAAS1F,GAEjB,GAAI4G,GAAS5G,EAAO6E,WAChBG,EAAS4B,EAASnK,EAAEuD,GAAQgF,UAC9BpE,KAAMZ,EAAO6G,MACbhG,IAAKb,EAAO8G,MAId9G,GAAS4G,EAAS5G,EAASA,EAAO+G,MAClC,IAAIC,GAAgBhH,EAAOgH,cACvBC,EAAcD,EAAcC,aAAeD,EAAcE,YAE7D,IAAID,GAAezG,OACjB,MAAOwE,EAIT,IAAImC,GAAeF,EAAYE,aAC3BC,EAAiB3K,EAAEuK,GACnB5B,EAAUgC,EAAelD,aACzBmB,EAAS+B,EAAehD,YACxBiD,EAAc5K,EAAE0K,GAAcnC,SAC9BsC,EAAYD,EAAYzG,KACxB2G,EAAWF,EAAYxG,GAE3B,QACED,KAAMoE,EAAOpE,KAAO0G,EAAYlC,EAChCvE,IAAKmE,EAAOnE,IAAM0G,EAAWlC,MAQnCnH,EAAMgD,OAAS,KAIfhD,EAAMiE,QAAU,KAGTjE,IAKTH,EAAO,iBAcLyJ,mBAAoB,OAGpBC,gBAAiB,GAGjBC,QAAS,mDAGTC,MAAO,GAGPC,UAAW,GAGXC,OAAQ,KAGRC,GAAI,KAGJC,OAAQ,KAGRC,QAAS,KAGTC,YAAa,SAEbC,eAAe,EAGfpH,MAAO,GAGPC,OAAQ,GAGRoH,QAAS,GAGTC,KAAM,GAGNC,YAAY,EAQZzJ,UAAW;;;;;;;;;AAmCbb,EAAO,SAAU,SAASJ,GAExB,GAAIlB,GAAIkB,EAAQ,UACZO,EAAQP,EAAQ,SAChB2K,EAAW3K,EAAQ,iBAmBnByB,EAAS,EACTmJ,EAAW,GAAIC,MAAS,EACxBnJ,IAAW,YAAc5C,GAAE,QAAQ,GAAG6C,OACtCmJ,EAAY,eAAiB9L,aAAc,eAAiBA,YAC9D,sBAAsBgH,KAAK+E,UAAUC,WACnCpJ,GAAYF,IAAWoJ,EAGvBG,EAAY,QAAZA,GAAqBC,EAASf,EAAIC,GAEpC,GAAIe,GAAkBD,EAAUA,KAGT,iBAAZA,IAA6C,IAArBA,EAAQE,WAEzCF,GACEnB,QAASmB,EACTpJ,OAAQgJ,IAKZI,EAAUpM,EAAE+C,QAAO,KAAUoJ,EAAUN,SAAUO,GACjDA,EAAQG,SAAWF,CAEnB,IAAIlL,GAAKiL,EAAQjL,GAAKiL,EAAQjL,IAAM2K,EAAWnJ,EAC3C6J,EAAML,EAAUM,IAAItL,EAIxB,OAAIqL,GACKA,EAAI7H,SAKR7B,IACHsJ,EAAQpJ,OAAQ,GAKdoJ,EAAQR,aACVQ,EAAQtI,OAAQ,EAChBsI,EAAQpB,gBAAkB,GAKvBhL,EAAE0M,QAAQN,EAAQhB,UACrBgB,EAAQhB,WAKK/F,SAAXiG,IACFc,EAAQd,OAASA,GAGfc,EAAQd,QACVc,EAAQhB,OAAOzE,MACbxF,GAAI,SACJwL,MAAOP,EAAQZ,YACf/E,SAAU2F,EAAQd,OAClBxJ,QAASsK,EAAQX,gBAMVpG,SAAPgG,IACFe,EAAQf,GAAKA,GAGXe,EAAQf,IACVe,EAAQhB,OAAOzE,MACbxF,GAAI,KACJwL,MAAOP,EAAQb,QACf9E,SAAU2F,EAAQf,GAClBlI,WAAW,IAKRgJ,EAAUS,KAAKzL,GAAM,GAAIgL,GAAUU,OAAOT,KAG/C5I,EAAQ,YACZA,GAAMvC,UAAYQ,EAAMR,SACxB,IAAIA,GAAYkL,EAAUlL,UAAY,GAAIuC,EA2X1C,OAzXA2I,GAAUU,OAAS,SAAST,GAC1B,GAAI5D,GAAO9G,IAEX1B,GAAE+C,OAAOrB,KAAM,GAAID,GAEnB,IACIqL,IADkBV,EAAQG,SACjBvM,EAAE0B,KAAKe,MAAMP,KAAKkK,EAAQjK,YACnC4K,EAAY/M,EAAE0B,KAAKgB,SAiGvB,OA/FAhB,MAAK0K,QAAUA,EACf1K,KAAKsL,OAASF,EAGd9M,EAAEgK,KAAKoC,EAAS,SAASxC,EAAM+C,GACH,kBAAfnE,GAAKoB,GACdpB,EAAKoB,GAAM+C,GAEXnE,EAAKoB,GAAQ+C,IAMbP,EAAQ3H,SACVhD,EAAMgD,OAAS2H,EAAQ3H,QAKzBqI,EAAO7K,MACLgL,kBAAmBvL,KAAKwL,GAAG,SACxBjL,KAAK,KAAM,SAAWP,KAAKP,IAAIc,KAAK,MACvCkL,mBAAoBzL,KAAKwL,GAAG,WACzBjL,KAAK,KAAM,WAAaP,KAAKP,IAAIc,KAAK,QAK3CP,KAAKwL,GAAG,SACLrL,IAAI,UAAWH,KAAK4J,UAAW,EAAQ,OAAS,IAChDrJ,KAAK,QAASP,KAAK8J,aACnBpL,GAAG,QAAS,SAASgN,GACpB5E,EAAK6E,SAAS,UACdD,EAAME,mBAKV5L,KAAKwL,GAAG,UAAUrJ,SAASnC,KAAKiK,MAChCjK,KAAKwL,GAAG,QAAQrL,IAAI,UAAWH,KAAKgK,SAIhCU,EAAQR,YACVmB,EACG3M,GACC,eAAiBF,UAAW,YAAc,QAC1C,WAEE,MADAsI,GAAK6E,SAAS,WACP,IAMf3L,KAAK6E,iBAAiB,OAAQ,WAC5BwG,EAAUlL,KACRU,QAAS,EACTC,WAAY4J,EAAQrB,qBACnBwC,SACDhL,QAAS6J,EAAQpB,iBAChB,OAKLtJ,KAAK8L,KAAO,SAASJ,GACnB,GAAI9C,GAAS8C,EAAM9C,OACfnD,EAAWmD,EAAOnD,SAClBsG,EAAS,oBACTC,EAAQjM,EAAMiE,UAAY8C,EAC1BmF,EAAUP,EAAMO,SAGfD,GAASD,EAAOvG,KAAKC,IAA6B,WAAhBmD,EAAO9D,MAI9B,KAAZmH,GACFnF,EAAK6E,SAAS,WAIlBrN,EAAEE,UAAUE,GAAG,UAAWsB,KAAK8L,MAC/B9L,KAAK6E,iBAAiB,SAAU,WAC9BvG,EAAEE,UAAUyF,IAAI,UAAWjE,KAAK8L,YACzBrB,GAAUS,KAAKlL,KAAKP,MAI7BwB,IAEAwJ,EAAUyB,SAASlM,MAEZA,MAITyK,EAAUU,OAAO5L,UAAYA,EAI7BjB,EAAE+C,OAAO9B,GAqGPgK,QAAS,SAAS/I,GAEhB,GAAI2L,GAAWnM,KAAKwL,GAAG,UAcvB,OAXoB,YAAhB,mBAAOhL,GAAP,YAAAtB,EAAOsB,KACTA,EAAOlC,EAAEkC,GACT2L,EAASC,MAAM,IAAIC,OAAO7L,EAAKoB,QAC/B5B,KAAK6E,iBAAiB,eAAgB,WACpCvG,EAAE,QAAQ+N,OAAO7L,EAAKoD,WAIxBuI,EAAS3L,KAAKA,GAGTR,KAAKuC,SAQdiH,MAAO,SAAS8C,GAGd,MAFAtM,MAAKwL,GAAG,SAASc,KAAKA,GACtBtM,KAAKwL,GAAG,UAAUc,EAAO,OAAS,UAC3BtM,MAKT2C,MAAO,SAASsI,GAEd,MADAjL,MAAKwL,GAAG,WAAWrL,IAAI,QAAS8K,GACzBjL,KAAKuC,SAKdK,OAAQ,SAASqI,GAEf,MADAjL,MAAKwL,GAAG,WAAWrL,IAAI,SAAU8K,GAC1BjL,KAAKuC,SASdmH,OAAQ,SAAS6C,GACfA,EAAOA,KACP,IAAIzF,GAAO9G,KACPQ,EAAO,GACPgM,EAAS,CAgDb,OA/CAxM,MAAKyM,aAGe,gBAATF,IACT/L,EAAO+L,EACPC,KAEAlO,EAAEgK,KAAKiE,EAAM,SAASrI,EAAGqE,GAEvB,GAAI9I,GAAK8I,EAAI9I,GAAK8I,EAAI9I,IAAM8I,EAAI0C,MAC5B9J,EAAQ,EACZ2F,GAAK2F,UAAUhN,GAAM8I,EAAIxD,SAGrBwD,EAAInI,WAAY,EAClBe,EAAQ,wBAERqL,IAGFhM,GACE,+BAEYf,EAAK,IACjB0B,GACCoH,EAAImE,SAAW,YAAc,KAC7BnE,EAAI9G,UAAY,yCAA2C,IAC5D,IACA8G,EAAI0C,MACJ,YAEFnE,EAAK0E,GAAG,UACL9M,GAAG,QAAS,SAAWe,EAAK,IAAK,SAASiM,GACzC,GAAIiB,GAAQrO,EAAE0B,KACT2M,GAAMpM,KAAK,aACduG,EAAK6E,SAASlM,GAGhBiM,EAAME,qBAMd5L,KAAKwL,GAAG,UAAUhL,KAAKA,GACvBR,KAAKwL,GAAG,UAAUgB,EAAS,OAAS,UAE7BxM,MAITyJ,UAAW,SAASjJ,GAIlB,MAHAR,MAAKwL,GAAG,aACLhL,KAAKA,GAAMA,EAAO,OAAS,UAEvBR,MAITwL,GAAI,SAAStH,GACX,MAAOlE,MAAKsL,OAAO9G,KAAK,MAAQN,EAAI,MAKtCyH,SAAU,SAASlM,GACjB,GAAIK,GAAKE,KAAKyM,UAAUhN,EAExB,OAAqB,kBAAPK,IAAqBA,EAAGhB,KAAKkB,SAAU,EACnDA,KAAKyD,QAAQM,SAAW/D,QAO9ByK,EAAUyB,SAAW5N,EAAEsO,KAKvBnC,EAAUoC,WAAa,WACrB,MAAO9M,GAAMiE,SAUfyG,EAAUM,IAAM,SAAStL,GACvB,MAAckE,UAAPlE,EACLgL,EAAUS,KACVT,EAAUS,KAAKzL,IAGnBgL,EAAUS,QAOVT,EAAUN,SAAWA,EAIdM,GAKT,IAAIlM,GAAS8D,OAAO9D,OAASiB,EAAQ,SAErCrB,GAAOC,QAAU,SAASkO,EAAMxM,EAAIgN,GAElC,GAAIC,IACFvD,MAAO,KACPD,QAAS+C,EACTpC,YAAY,EAGHvG,UAAP7D,GAA2B,OAAPA,GACtBiN,EAAQlD,QAAU,KAClBkD,EAAQjD,YAAc,KACtBiD,EAAQpD,GAAK,WACX7J,KAEFiN,EAAQnD,OAAS,cAEjBmD,EAAQvD,MAAQ,KAGL7F,SAATmJ,IACFC,EAAQC,OAAS,WACf,GAAIlG,GAAO9G,IACXiN,YAAW,WACTnG,EAAKrD,QAAQM,UACZ+I,KAIPvO,EAAOwO,GAASnL,WAKpBvD,EAAQ,MFxHsBS,KAAKV,EAASC,EAAoB,MAI1D6O,GACA,SAAS/O,EAAQC","file":"js/login/index.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tvar dialog = __webpack_require__(46);\n\t\n\t__webpack_require__(28);\n\t__webpack_require__(38);\n\t\n\t$(document).ready(function () {\n\t  $('.page-header').on(\"click\", function () {\n\t    dialog('测试一下啦', function () {\n\t      dialog('6666', null, 3000);\n\t      notyf.alert('You must fill out the form before moving forward');\n\t    });\n\t  });\n\t  notyf.confirm('Your changes have been successfully saved!');\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))\n\n/***/ },\n\n/***/ 38:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n\n/***/ 46:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/*! artDialog v6.0.5 | https://github.com/aui/artDialog */!function () {\n\t\n\t  var __modules__ = {};\n\t\n\t  function require(id) {\n\t    var mod = __modules__[id];\n\t    var exports = 'exports';\n\t\n\t    if ((typeof mod === 'undefined' ? 'undefined' : _typeof(mod)) === 'object') {\n\t      return mod;\n\t    }\n\t\n\t    if (!mod[exports]) {\n\t      mod[exports] = {};\n\t      mod[exports] = mod.call(mod[exports], require, mod[exports], mod) || mod[exports];\n\t    }\n\t\n\t    return mod[exports];\n\t  }\n\t\n\t  function define(path, fn) {\n\t    __modules__[path] = fn;\n\t  }\n\t\n\t  define(\"jquery\", function () {\n\t    return jQuery;\n\t  });\n\t\n\t  /*!\n\t   * PopupJS\n\t   * Date: 2014-11-09\n\t   * https://github.com/aui/popupjs\n\t   * (c) 2009-2014 TangBin, http://www.planeArt.cn\n\t   *\n\t   * This is licensed under the GNU LGPL, version 2.1 or later.\n\t   * For details, see: http://www.gnu.org/licenses/lgpl-2.1.html\n\t   */\n\t\n\t  define(\"popup\", function (require) {\n\t\n\t    var $ = require(\"jquery\");\n\t\n\t    var _count = 0;\n\t    var _isIE6 = !('minWidth' in $('html')[0].style);\n\t    var _isFixed = !_isIE6;\n\t\n\t    function Popup() {\n\t\n\t      this.destroyed = false;\n\t\n\t      this.__popup = $('<div />')\n\t      /*使用 <dialog /> 元素可能导致 z-index 永远置顶的问题(chrome)*/\n\t      .css({\n\t        display: 'none',\n\t        position: 'absolute',\n\t        /*\n\t        left: 0,\n\t        top: 0,\n\t        bottom: 'auto',\n\t        right: 'auto',\n\t        margin: 0,\n\t        padding: 0,\n\t        border: '0 none',\n\t        background: 'transparent'\n\t        */\n\t        outline: 0\n\t      }).attr('tabindex', '-1').html(this.innerHTML).appendTo('body');\n\t\n\t      this.__backdrop = this.__mask = $('<div />').css({\n\t        opacity: .7,\n\t        background: '#000'\n\t      });\n\t\n\t      // 使用 HTMLElement 作为外部接口使用，而不是 jquery 对象\n\t      // 统一的接口利于未来 Popup 移植到其他 DOM 库中\n\t      this.node = this.__popup[0];\n\t      this.backdrop = this.__backdrop[0];\n\t\n\t      _count++;\n\t    }\n\t\n\t    $.extend(Popup.prototype, {\n\t\n\t      /**\n\t       * 初始化完毕事件，在 show()、showModal() 执行\n\t       * @name Popup.prototype.onshow\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 关闭事件，在 close() 执行\n\t       * @name Popup.prototype.onclose\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 销毁前事件，在 remove() 前执行\n\t       * @name Popup.prototype.onbeforeremove\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 销毁事件，在 remove() 执行\n\t       * @name Popup.prototype.onremove\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 重置事件，在 reset() 执行\n\t       * @name Popup.prototype.onreset\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 焦点事件，在 foucs() 执行\n\t       * @name Popup.prototype.onfocus\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 失焦事件，在 blur() 执行\n\t       * @name Popup.prototype.onblur\n\t       * @event\n\t       */\n\t\n\t      /** 浮层 DOM 素节点[*] */\n\t      node: null,\n\t\n\t      /** 遮罩 DOM 节点[*] */\n\t      backdrop: null,\n\t\n\t      /** 是否开启固定定位[*] */\n\t      fixed: false,\n\t\n\t      /** 判断对话框是否删除[*] */\n\t      destroyed: true,\n\t\n\t      /** 判断对话框是否显示 */\n\t      open: false,\n\t\n\t      /** close 返回值 */\n\t      returnValue: '',\n\t\n\t      /** 是否自动聚焦 */\n\t      autofocus: true,\n\t\n\t      /** 对齐方式[*] */\n\t      align: 'bottom left',\n\t\n\t      /** 内部的 HTML 字符串 */\n\t      innerHTML: '',\n\t\n\t      /** CSS 类名 */\n\t      className: 'ui-popup',\n\t\n\t      /**\n\t       * 显示浮层\n\t       * @param   {HTMLElement, Event}  指定位置（可选）\n\t       */\n\t      show: function show(anchor) {\n\t\n\t        if (this.destroyed) {\n\t          return this;\n\t        }\n\t\n\t        var that = this;\n\t        var popup = this.__popup;\n\t        var backdrop = this.__backdrop;\n\t\n\t        this.__activeElement = this.__getActive();\n\t\n\t        this.open = true;\n\t        this.follow = anchor || this.follow;\n\t\n\t        // 初始化 show 方法\n\t        if (!this.__ready) {\n\t\n\t          popup.addClass(this.className).attr('role', this.modal ? 'alertdialog' : 'dialog').css('position', this.fixed ? 'fixed' : 'absolute');\n\t\n\t          if (!_isIE6) {\n\t            $(window).on('resize', $.proxy(this.reset, this));\n\t          }\n\t\n\t          // 模态浮层的遮罩\n\t          if (this.modal) {\n\t            var backdropCss = {\n\t              position: 'fixed',\n\t              left: 0,\n\t              top: 0,\n\t              width: '100%',\n\t              height: '100%',\n\t              overflow: 'hidden',\n\t              userSelect: 'none',\n\t              zIndex: this.zIndex || Popup.zIndex\n\t            };\n\t\n\t            popup.addClass(this.className + '-modal');\n\t\n\t            if (!_isFixed) {\n\t              $.extend(backdropCss, {\n\t                position: 'absolute',\n\t                width: $(window).width() + 'px',\n\t                height: $(document).height() + 'px'\n\t              });\n\t            }\n\t\n\t            backdrop.css(backdropCss).attr({\n\t              tabindex: '0'\n\t            }).on('focus', $.proxy(this.focus, this));\n\t\n\t            // 锁定 tab 的焦点操作\n\t            this.__mask = backdrop.clone(true).attr('style', '').insertAfter(popup);\n\t\n\t            backdrop.addClass(this.className + '-backdrop').insertBefore(popup);\n\t\n\t            this.__ready = true;\n\t          }\n\t\n\t          if (!popup.html()) {\n\t            popup.html(this.innerHTML);\n\t          }\n\t        }\n\t\n\t        popup.addClass(this.className + '-show').show();\n\t\n\t        backdrop.show();\n\t\n\t        this.reset().focus();\n\t        this.__dispatchEvent('show');\n\t\n\t        return this;\n\t      },\n\t\n\t      /** 显示模态浮层。参数参见 show() */\n\t      showModal: function showModal() {\n\t        this.modal = true;\n\t        return this.show.apply(this, arguments);\n\t      },\n\t\n\t      /** 关闭浮层 */\n\t      close: function close(result) {\n\t\n\t        if (!this.destroyed && this.open) {\n\t\n\t          if (result !== undefined) {\n\t            this.returnValue = result;\n\t          }\n\t\n\t          this.__popup.hide().removeClass(this.className + '-show');\n\t          this.__backdrop.hide();\n\t          this.open = false;\n\t          this.blur(); // 恢复焦点，照顾键盘操作的用户\n\t          this.__dispatchEvent('close');\n\t        }\n\t\n\t        return this;\n\t      },\n\t\n\t      /** 销毁浮层 */\n\t      remove: function remove() {\n\t\n\t        if (this.destroyed) {\n\t          return this;\n\t        }\n\t\n\t        this.__dispatchEvent('beforeremove');\n\t\n\t        if (Popup.current === this) {\n\t          Popup.current = null;\n\t        }\n\t\n\t        // 从 DOM 中移除节点\n\t        this.__popup.remove();\n\t        this.__backdrop.remove();\n\t        this.__mask.remove();\n\t\n\t        if (!_isIE6) {\n\t          $(window).off('resize', this.reset);\n\t        }\n\t\n\t        this.__dispatchEvent('remove');\n\t\n\t        for (var i in this) {\n\t          delete this[i];\n\t        }\n\t\n\t        return this;\n\t      },\n\t\n\t      /** 重置位置 */\n\t      reset: function reset() {\n\t\n\t        var elem = this.follow;\n\t\n\t        if (elem) {\n\t          this.__follow(elem);\n\t        } else {\n\t          this.__center();\n\t        }\n\t\n\t        this.__dispatchEvent('reset');\n\t\n\t        return this;\n\t      },\n\t\n\t      /** 让浮层获取焦点 */\n\t      focus: function focus() {\n\t\n\t        var node = this.node;\n\t        var popup = this.__popup;\n\t        var current = Popup.current;\n\t        var index = this.zIndex = Popup.zIndex++;\n\t\n\t        if (current && current !== this) {\n\t          current.blur(false);\n\t        }\n\t\n\t        // 检查焦点是否在浮层里面\n\t        if (!$.contains(node, this.__getActive())) {\n\t          var autofocus = popup.find('[autofocus]')[0];\n\t\n\t          if (!this._autofocus && autofocus) {\n\t            this._autofocus = true;\n\t          } else {\n\t            autofocus = node;\n\t          }\n\t\n\t          this.__focus(autofocus);\n\t        }\n\t\n\t        // 设置叠加高度\n\t        popup.css('zIndex', index);\n\t        //this.__backdrop.css('zIndex', index);\n\t\n\t        Popup.current = this;\n\t        popup.addClass(this.className + '-focus');\n\t\n\t        this.__dispatchEvent('focus');\n\t\n\t        return this;\n\t      },\n\t\n\t      /** 让浮层失去焦点。将焦点退还给之前的元素，照顾视力障碍用户 */\n\t      blur: function blur() {\n\t\n\t        var activeElement = this.__activeElement;\n\t        var isBlur = arguments[0];\n\t\n\t        if (isBlur !== false) {\n\t          this.__focus(activeElement);\n\t        }\n\t\n\t        this._autofocus = false;\n\t        this.__popup.removeClass(this.className + '-focus');\n\t        this.__dispatchEvent('blur');\n\t\n\t        return this;\n\t      },\n\t\n\t      /**\n\t       * 添加事件\n\t       * @param   {String}    事件类型\n\t       * @param   {Function}  监听函数\n\t       */\n\t      addEventListener: function addEventListener(type, callback) {\n\t        this.__getEventListener(type).push(callback);\n\t        return this;\n\t      },\n\t\n\t      /**\n\t       * 删除事件\n\t       * @param   {String}    事件类型\n\t       * @param   {Function}  监听函数\n\t       */\n\t      removeEventListener: function removeEventListener(type, callback) {\n\t        var listeners = this.__getEventListener(type);\n\t        for (var i = 0; i < listeners.length; i++) {\n\t          if (callback === listeners[i]) {\n\t            listeners.splice(i--, 1);\n\t          }\n\t        }\n\t        return this;\n\t      },\n\t\n\t      // 获取事件缓存\n\t      __getEventListener: function __getEventListener(type) {\n\t        var listener = this.__listener;\n\t        if (!listener) {\n\t          listener = this.__listener = {};\n\t        }\n\t        if (!listener[type]) {\n\t          listener[type] = [];\n\t        }\n\t        return listener[type];\n\t      },\n\t\n\t      // 派发事件\n\t      __dispatchEvent: function __dispatchEvent(type) {\n\t        var listeners = this.__getEventListener(type);\n\t\n\t        if (this['on' + type]) {\n\t          this['on' + type]();\n\t        }\n\t\n\t        for (var i = 0; i < listeners.length; i++) {\n\t          listeners[i].call(this);\n\t        }\n\t      },\n\t\n\t      // 对元素安全聚焦\n\t      __focus: function __focus(elem) {\n\t        // 防止 iframe 跨域无权限报错\n\t        // 防止 IE 不可见元素报错\n\t        try {\n\t          // ie11 bug: iframe 页面点击会跳到顶部\n\t          if (this.autofocus && !/^iframe$/i.test(elem.nodeName)) {\n\t            elem.focus();\n\t          }\n\t        } catch (e) {}\n\t      },\n\t\n\t      // 获取当前焦点的元素\n\t      __getActive: function __getActive() {\n\t        try {\n\t          // try: ie8~9, iframe #26\n\t          var activeElement = document.activeElement;\n\t          var contentDocument = activeElement.contentDocument;\n\t          var elem = contentDocument && contentDocument.activeElement || activeElement;\n\t          return elem;\n\t        } catch (e) {}\n\t      },\n\t\n\t      // 居中浮层\n\t      __center: function __center() {\n\t\n\t        var popup = this.__popup;\n\t        var $window = $(window);\n\t        var $document = $(document);\n\t        var fixed = this.fixed;\n\t        var dl = fixed ? 0 : $document.scrollLeft();\n\t        var dt = fixed ? 0 : $document.scrollTop();\n\t        var ww = $window.width();\n\t        var wh = $window.height();\n\t        var ow = popup.width();\n\t        var oh = popup.height();\n\t        var left = (ww - ow) / 2 + dl;\n\t        var top = (wh - oh) * 382 / 1000 + dt; // 黄金比例\n\t        var style = popup[0].style;\n\t\n\t        style.left = Math.max(parseInt(left), dl) + 'px';\n\t        style.top = Math.max(parseInt(top), dt) + 'px';\n\t      },\n\t\n\t      // 指定位置 @param    {HTMLElement, Event}  anchor\n\t      __follow: function __follow(anchor) {\n\t\n\t        var $elem = anchor.parentNode && $(anchor);\n\t        var popup = this.__popup;\n\t\n\t        if (this.__followSkin) {\n\t          popup.removeClass(this.__followSkin);\n\t        }\n\t\n\t        // 隐藏元素不可用\n\t        if ($elem) {\n\t          var o = $elem.offset();\n\t          if (o.left * o.top < 0) {\n\t            return this.__center();\n\t          }\n\t        }\n\t\n\t        var that = this;\n\t        var fixed = this.fixed;\n\t\n\t        var $window = $(window);\n\t        var $document = $(document);\n\t        var winWidth = $window.width();\n\t        var winHeight = $window.height();\n\t        var docLeft = $document.scrollLeft();\n\t        var docTop = $document.scrollTop();\n\t\n\t        var popupWidth = popup.width();\n\t        var popupHeight = popup.height();\n\t        var width = $elem ? $elem.outerWidth() : 0;\n\t        var height = $elem ? $elem.outerHeight() : 0;\n\t        var offset = this.__offset(anchor);\n\t        var x = offset.left;\n\t        var y = offset.top;\n\t        var left = fixed ? x - docLeft : x;\n\t        var top = fixed ? y - docTop : y;\n\t\n\t        var minLeft = fixed ? 0 : docLeft;\n\t        var minTop = fixed ? 0 : docTop;\n\t        var maxLeft = minLeft + winWidth - popupWidth;\n\t        var maxTop = minTop + winHeight - popupHeight;\n\t\n\t        var css = {};\n\t        var align = this.align.split(' ');\n\t        var className = this.className + '-';\n\t        var reverse = {\n\t          top: 'bottom',\n\t          bottom: 'top',\n\t          left: 'right',\n\t          right: 'left'\n\t        };\n\t        var name = {\n\t          top: 'top',\n\t          bottom: 'top',\n\t          left: 'left',\n\t          right: 'left'\n\t        };\n\t\n\t        var temp = [{\n\t          top: top - popupHeight,\n\t          bottom: top + height,\n\t          left: left - popupWidth,\n\t          right: left + width\n\t        }, {\n\t          top: top,\n\t          bottom: top - popupHeight + height,\n\t          left: left,\n\t          right: left - popupWidth + width\n\t        }];\n\t\n\t        var center = {\n\t          left: left + width / 2 - popupWidth / 2,\n\t          top: top + height / 2 - popupHeight / 2\n\t        };\n\t\n\t        var range = {\n\t          left: [minLeft, maxLeft],\n\t          top: [minTop, maxTop]\n\t        };\n\t\n\t        // 超出可视区域重新适应位置\n\t        $.each(align, function (i, val) {\n\t\n\t          // 超出右或下边界：使用左或者上边对齐\n\t          if (temp[i][val] > range[name[val]][1]) {\n\t            val = align[i] = reverse[val];\n\t          }\n\t\n\t          // 超出左或右边界：使用右或者下边对齐\n\t          if (temp[i][val] < range[name[val]][0]) {\n\t            align[i] = reverse[val];\n\t          }\n\t        });\n\t\n\t        // 一个参数的情况\n\t        if (!align[1]) {\n\t          name[align[1]] = name[align[0]] === 'left' ? 'top' : 'left';\n\t          temp[1][align[1]] = center[name[align[1]]];\n\t        }\n\t\n\t        //添加follow的css, 为了给css使用\n\t        className += align.join('-') + ' ' + this.className + '-follow';\n\t\n\t        that.__followSkin = className;\n\t\n\t        if ($elem) {\n\t          popup.addClass(className);\n\t        }\n\t\n\t        css[name[align[0]]] = parseInt(temp[0][align[0]]);\n\t        css[name[align[1]]] = parseInt(temp[1][align[1]]);\n\t        popup.css(css);\n\t      },\n\t\n\t      // 获取元素相对于页面的位置（包括iframe内的元素）\n\t      // 暂时不支持两层以上的 iframe 套嵌\n\t      __offset: function __offset(anchor) {\n\t\n\t        var isNode = anchor.parentNode;\n\t        var offset = isNode ? $(anchor).offset() : {\n\t          left: anchor.pageX,\n\t          top: anchor.pageY\n\t        };\n\t\n\t        anchor = isNode ? anchor : anchor.target;\n\t        var ownerDocument = anchor.ownerDocument;\n\t        var defaultView = ownerDocument.defaultView || ownerDocument.parentWindow;\n\t\n\t        if (defaultView == window) {\n\t          // IE <= 8 只能使用两个等于号\n\t          return offset;\n\t        }\n\t\n\t        // {Element: Ifarme}\n\t        var frameElement = defaultView.frameElement;\n\t        var $ownerDocument = $(ownerDocument);\n\t        var docLeft = $ownerDocument.scrollLeft();\n\t        var docTop = $ownerDocument.scrollTop();\n\t        var frameOffset = $(frameElement).offset();\n\t        var frameLeft = frameOffset.left;\n\t        var frameTop = frameOffset.top;\n\t\n\t        return {\n\t          left: offset.left + frameLeft - docLeft,\n\t          top: offset.top + frameTop - docTop\n\t        };\n\t      }\n\t\n\t    });\n\t\n\t    /** 当前叠加高度 */\n\t    Popup.zIndex = 1024;\n\t\n\t    /** 顶层浮层的实例 */\n\t    Popup.current = null;\n\t\n\t    return Popup;\n\t  });\n\t\n\t  // artDialog - 默认配置\n\t  define(\"dialog-config\", {\n\t\n\t    /* -----已注释的配置继承自 popup.js，仍可以再这里重新定义它----- */\n\t\n\t    // 对齐方式\n\t    //align: 'bottom left',\n\t\n\t    // 是否固定定位\n\t    //fixed: false,\n\t\n\t    // 对话框叠加高度值(重要：此值不能超过浏览器最大限制)\n\t    //zIndex: 1024,\n\t\n\t    // 设置遮罩背景颜色\n\t    backdropBackground: '#000',\n\t\n\t    // 设置遮罩透明度\n\t    backdropOpacity: 0.7,\n\t\n\t    // 消息内容\n\t    content: '<span class=\"ui-dialog-loading\">Loading..</span>',\n\t\n\t    // 标题\n\t    title: '',\n\t\n\t    // 对话框状态栏区域 HTML 代码\n\t    statusbar: '',\n\t\n\t    // 自定义按钮\n\t    button: null,\n\t\n\t    // 确定按钮回调函数\n\t    ok: null,\n\t\n\t    // 取消按钮回调函数\n\t    cancel: null,\n\t\n\t    // 确定按钮文本\n\t    okValue: 'ok',\n\t\n\t    // 取消按钮文本\n\t    cancelValue: 'cancel',\n\t\n\t    cancelDisplay: true,\n\t\n\t    // 内容宽度\n\t    width: '',\n\t\n\t    // 内容高度\n\t    height: '',\n\t\n\t    // 内容与边界填充距离\n\t    padding: '',\n\t\n\t    // 对话框自定义 className\n\t    skin: '',\n\t\n\t    // 是否支持快捷关闭（点击遮罩层自动关闭）\n\t    quickClose: false,\n\t\n\t    // css 文件路径，留空则不会使用 js 自动加载样式\n\t    // 注意：css 只允许加载一个\n\t    //cssUri: require('./index.css'),\n\t\n\t    // 模板（使用 table 解决 IE7 宽度自适应的 BUG）\n\t    // js 使用 i=\"***\" 属性识别结构，其余的均可自定义\n\t    innerHTML: '<div i=\"dialog\" class=\"ui-dialog\">' + '<div class=\"ui-dialog-arrow-a\"></div>' + '<div class=\"ui-dialog-arrow-b\"></div>' + '<table class=\"ui-dialog-grid\">' + '<tr>' + '<td i=\"header\" class=\"ui-dialog-header\">' + '<button i=\"close\" class=\"ui-dialog-close\">&#215;</button>' + '<div i=\"title\" class=\"ui-dialog-title\"></div>' + '</td>' + '</tr>' + '<tr>' + '<td i=\"body\" class=\"ui-dialog-body\">' + '<div i=\"content\" class=\"ui-dialog-content\"></div>' + '</td>' + '</tr>' + '<tr>' + '<td i=\"footer\" class=\"ui-dialog-footer\">' + '<div i=\"statusbar\" class=\"ui-dialog-statusbar\"></div>' + '<div i=\"button\" class=\"ui-dialog-button\"></div>' + '</td>' + '</tr>' + '</table>' + '</div>'\n\t\n\t  });\n\t\n\t  /*!\n\t   * artDialog\n\t   * Date: 2014-11-09\n\t   * https://github.com/aui/artDialog\n\t   * (c) 2009-2014 TangBin, http://www.planeArt.cn\n\t   *\n\t   * This is licensed under the GNU LGPL, version 2.1 or later.\n\t   * For details, see: http://www.gnu.org/licenses/lgpl-2.1.html\n\t   */\n\t  define(\"dialog\", function (require) {\n\t\n\t    var $ = require(\"jquery\");\n\t    var Popup = require(\"popup\");\n\t    var defaults = require(\"dialog-config\");\n\t    //var css = defaults.cssUri;\n\t\n\t\n\t    // css loader: RequireJS & SeaJS\n\t    // if (css) {\n\t    //     var fn = require[require.toUrl ? 'toUrl' : 'resolve'];\n\t    //     if (fn) {\n\t    //         css = fn(css);\n\t    //         css = '<link rel=\"stylesheet\" href=\"' + css + '\" />';\n\t    //         if ($('base')[0]) {\n\t    //             $('base').before(css);\n\t    //         } else {\n\t    //             $('head').append(css);\n\t    //         }\n\t    //     }\n\t    // }\n\t\n\t\n\t    var _count = 0;\n\t    var _expando = new Date() - 0; // Date.now()\n\t    var _isIE6 = !('minWidth' in $('html')[0].style);\n\t    var _isMobile = 'createTouch' in document && !('onmousemove' in document) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\n\t    var _isFixed = !_isIE6 && !_isMobile;\n\t\n\t    var artDialog = function artDialog(options, ok, cancel) {\n\t\n\t      var originalOptions = options = options || {};\n\t\n\t      if (typeof options === 'string' || options.nodeType === 1) {\n\t\n\t        options = {\n\t          content: options,\n\t          fixed: !_isMobile\n\t        };\n\t      }\n\t\n\t      options = $.extend(true, {}, artDialog.defaults, options);\n\t      options.original = originalOptions;\n\t\n\t      var id = options.id = options.id || _expando + _count;\n\t      var api = artDialog.get(id);\n\t\n\t      // 如果存在同名的对话框对象，则直接返回\n\t      if (api) {\n\t        return api.focus();\n\t      }\n\t\n\t      // 目前主流移动设备对fixed支持不好，禁用此特性\n\t      if (!_isFixed) {\n\t        options.fixed = false;\n\t      }\n\t\n\t      // 快捷关闭支持：点击对话框外快速关闭对话框\n\t      if (options.quickClose) {\n\t        options.modal = true;\n\t        options.backdropOpacity = 0;\n\t      }\n\t\n\t      // 按钮组\n\t      if (!$.isArray(options.button)) {\n\t        options.button = [];\n\t      }\n\t\n\t      // 取消按钮\n\t      if (cancel !== undefined) {\n\t        options.cancel = cancel;\n\t      }\n\t\n\t      if (options.cancel) {\n\t        options.button.push({\n\t          id: 'cancel',\n\t          value: options.cancelValue,\n\t          callback: options.cancel,\n\t          display: options.cancelDisplay\n\t        });\n\t      }\n\t\n\t      // 确定按钮\n\t      if (ok !== undefined) {\n\t        options.ok = ok;\n\t      }\n\t\n\t      if (options.ok) {\n\t        options.button.push({\n\t          id: 'ok',\n\t          value: options.okValue,\n\t          callback: options.ok,\n\t          autofocus: true\n\t        });\n\t      }\n\t\n\t      return artDialog.list[id] = new artDialog.create(options);\n\t    };\n\t\n\t    var popup = function popup() {};\n\t    popup.prototype = Popup.prototype;\n\t    var prototype = artDialog.prototype = new popup();\n\t\n\t    artDialog.create = function (options) {\n\t      var that = this;\n\t\n\t      $.extend(this, new Popup());\n\t\n\t      var originalOptions = options.original;\n\t      var $popup = $(this.node).html(options.innerHTML);\n\t      var $backdrop = $(this.backdrop);\n\t\n\t      this.options = options;\n\t      this._popup = $popup;\n\t\n\t      $.each(options, function (name, value) {\n\t        if (typeof that[name] === 'function') {\n\t          that[name](value);\n\t        } else {\n\t          that[name] = value;\n\t        }\n\t      });\n\t\n\t      // 更新 zIndex 全局配置\n\t      if (options.zIndex) {\n\t        Popup.zIndex = options.zIndex;\n\t      }\n\t\n\t      // 设置 ARIA 信息\n\t      $popup.attr({\n\t        'aria-labelledby': this._$('title').attr('id', 'title:' + this.id).attr('id'),\n\t        'aria-describedby': this._$('content').attr('id', 'content:' + this.id).attr('id')\n\t      });\n\t\n\t      // 关闭按钮\n\t      this._$('close').css('display', this.cancel === false ? 'none' : '').attr('title', this.cancelValue).on('click', function (event) {\n\t        that._trigger('cancel');\n\t        event.preventDefault();\n\t      });\n\t\n\t      // 添加视觉参数\n\t      this._$('dialog').addClass(this.skin);\n\t      this._$('body').css('padding', this.padding);\n\t\n\t      // 点击任意空白处关闭对话框\n\t      if (options.quickClose) {\n\t        $backdrop.on('onmousedown' in document ? 'mousedown' : 'click', function () {\n\t          that._trigger('cancel');\n\t          return false; // 阻止抢夺焦点\n\t        });\n\t      }\n\t\n\t      // 遮罩设置\n\t      this.addEventListener('show', function () {\n\t        $backdrop.css({\n\t          opacity: 0,\n\t          background: options.backdropBackground\n\t        }).animate({\n\t          opacity: options.backdropOpacity\n\t        }, 150);\n\t      });\n\t\n\t      // ESC 快捷键关闭对话框\n\t      this._esc = function (event) {\n\t        var target = event.target;\n\t        var nodeName = target.nodeName;\n\t        var rinput = /^input|textarea$/i;\n\t        var isTop = Popup.current === that;\n\t        var keyCode = event.keyCode;\n\t\n\t        // 避免输入状态中 ESC 误操作关闭\n\t        if (!isTop || rinput.test(nodeName) && target.type !== 'button') {\n\t          return;\n\t        }\n\t\n\t        if (keyCode === 27) {\n\t          that._trigger('cancel');\n\t        }\n\t      };\n\t\n\t      $(document).on('keydown', this._esc);\n\t      this.addEventListener('remove', function () {\n\t        $(document).off('keydown', this._esc);\n\t        delete artDialog.list[this.id];\n\t      });\n\t\n\t      _count++;\n\t\n\t      artDialog.oncreate(this);\n\t\n\t      return this;\n\t    };\n\t\n\t    artDialog.create.prototype = prototype;\n\t\n\t    $.extend(prototype, {\n\t\n\t      /**\n\t       * 显示对话框\n\t       * @name artDialog.prototype.show\n\t       * @param   {HTMLElement Object, Event Object}  指定位置（可选）\n\t       */\n\t\n\t      /**\n\t       * 显示对话框（模态）\n\t       * @name artDialog.prototype.showModal\n\t       * @param   {HTMLElement Object, Event Object}  指定位置（可选）\n\t       */\n\t\n\t      /**\n\t       * 关闭对话框\n\t       * @name artDialog.prototype.close\n\t       * @param   {String, Number}    返回值，可被 onclose 事件收取（可选）\n\t       */\n\t\n\t      /**\n\t       * 销毁对话框\n\t       * @name artDialog.prototype.remove\n\t       */\n\t\n\t      /**\n\t       * 重置对话框位置\n\t       * @name artDialog.prototype.reset\n\t       */\n\t\n\t      /**\n\t       * 让对话框聚焦（同时置顶）\n\t       * @name artDialog.prototype.focus\n\t       */\n\t\n\t      /**\n\t       * 让对话框失焦（同时置顶）\n\t       * @name artDialog.prototype.blur\n\t       */\n\t\n\t      /**\n\t       * 添加事件\n\t       * @param   {String}    事件类型\n\t       * @param   {Function}  监听函数\n\t       * @name artDialog.prototype.addEventListener\n\t       */\n\t\n\t      /**\n\t       * 删除事件\n\t       * @param   {String}    事件类型\n\t       * @param   {Function}  监听函数\n\t       * @name artDialog.prototype.removeEventListener\n\t       */\n\t\n\t      /**\n\t       * 对话框显示事件，在 show()、showModal() 执行\n\t       * @name artDialog.prototype.onshow\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 关闭事件，在 close() 执行\n\t       * @name artDialog.prototype.onclose\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 销毁前事件，在 remove() 前执行\n\t       * @name artDialog.prototype.onbeforeremove\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 销毁事件，在 remove() 执行\n\t       * @name artDialog.prototype.onremove\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 重置事件，在 reset() 执行\n\t       * @name artDialog.prototype.onreset\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 焦点事件，在 foucs() 执行\n\t       * @name artDialog.prototype.onfocus\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 失焦事件，在 blur() 执行\n\t       * @name artDialog.prototype.onblur\n\t       * @event\n\t       */\n\t\n\t      /**\n\t       * 设置内容\n\t       * @param    {String, HTMLElement}   内容\n\t       */\n\t      content: function content(html) {\n\t\n\t        var $content = this._$('content');\n\t\n\t        // HTMLElement\n\t        if ((typeof html === 'undefined' ? 'undefined' : _typeof(html)) === 'object') {\n\t          html = $(html);\n\t          $content.empty('').append(html.show());\n\t          this.addEventListener('beforeremove', function () {\n\t            $('body').append(html.hide());\n\t          });\n\t          // String\n\t        } else {\n\t          $content.html(html);\n\t        }\n\t\n\t        return this.reset();\n\t      },\n\t\n\t      /**\n\t       * 设置标题\n\t       * @param    {String}   标题内容\n\t       */\n\t      title: function title(text) {\n\t        this._$('title').text(text);\n\t        this._$('header')[text ? 'show' : 'hide']();\n\t        return this;\n\t      },\n\t\n\t      /** 设置宽度 */\n\t      width: function width(value) {\n\t        this._$('content').css('width', value);\n\t        return this.reset();\n\t      },\n\t\n\t      /** 设置高度 */\n\t      height: function height(value) {\n\t        this._$('content').css('height', value);\n\t        return this.reset();\n\t      },\n\t\n\t      /**\n\t       * 设置按钮组\n\t       * @param   {Array, String}\n\t       * Options: value, callback, autofocus, disabled\n\t       */\n\t      button: function button(args) {\n\t        args = args || [];\n\t        var that = this;\n\t        var html = '';\n\t        var number = 0;\n\t        this.callbacks = {};\n\t\n\t        if (typeof args === 'string') {\n\t          html = args;\n\t          number++;\n\t        } else {\n\t          $.each(args, function (i, val) {\n\t\n\t            var id = val.id = val.id || val.value;\n\t            var style = '';\n\t            that.callbacks[id] = val.callback;\n\t\n\t            if (val.display === false) {\n\t              style = ' style=\"display:none\"';\n\t            } else {\n\t              number++;\n\t            }\n\t\n\t            html += '<button' + ' type=\"button\"' + ' i-id=\"' + id + '\"' + style + (val.disabled ? ' disabled' : '') + (val.autofocus ? ' autofocus class=\"ui-dialog-autofocus\"' : '') + '>' + val.value + '</button>';\n\t\n\t            that._$('button').on('click', '[i-id=' + id + ']', function (event) {\n\t              var $this = $(this);\n\t              if (!$this.attr('disabled')) {\n\t                // IE BUG\n\t                that._trigger(id);\n\t              }\n\t\n\t              event.preventDefault();\n\t            });\n\t          });\n\t        }\n\t\n\t        this._$('button').html(html);\n\t        this._$('footer')[number ? 'show' : 'hide']();\n\t\n\t        return this;\n\t      },\n\t\n\t      statusbar: function statusbar(html) {\n\t        this._$('statusbar').html(html)[html ? 'show' : 'hide']();\n\t\n\t        return this;\n\t      },\n\t\n\t      _$: function _$(i) {\n\t        return this._popup.find('[i=' + i + ']');\n\t      },\n\t\n\t      // 触发按钮回调函数\n\t      _trigger: function _trigger(id) {\n\t        var fn = this.callbacks[id];\n\t\n\t        return typeof fn !== 'function' || fn.call(this) !== false ? this.close().remove() : this;\n\t      }\n\t\n\t    });\n\t\n\t    artDialog.oncreate = $.noop;\n\t\n\t    /** 获取最顶层的对话框API */\n\t    artDialog.getCurrent = function () {\n\t      return Popup.current;\n\t    };\n\t\n\t    /**\n\t     * 根据 ID 获取某对话框 API\n\t     * @param    {String}    对话框 ID\n\t     * @return   {Object}    对话框 API (实例)\n\t     */\n\t    artDialog.get = function (id) {\n\t      return id === undefined ? artDialog.list : artDialog.list[id];\n\t    };\n\t\n\t    artDialog.list = {};\n\t\n\t    /**\n\t     * 默认配置\n\t     */\n\t    artDialog.defaults = defaults;\n\t\n\t    return artDialog;\n\t  });\n\t\n\t  var dialog = window.dialog = require(\"dialog\");\n\t\n\t  module.exports = function (text, fn, time) {\n\t\n\t    var _config = {\n\t      title: '提示',\n\t      content: text,\n\t      quickClose: true\n\t    };\n\t\n\t    if (fn !== undefined && fn !== null) {\n\t      _config.okValue = '确定';\n\t      _config.cancelValue = '取消';\n\t      _config.ok = function () {\n\t        fn();\n\t      };\n\t      _config.cancel = function () {};\n\t    } else {\n\t      _config.title = null;\n\t    }\n\t\n\t    if (time !== undefined) {\n\t      _config.onshow = function () {\n\t        var that = this;\n\t        setTimeout(function () {\n\t          that.close().remove();\n\t        }, time);\n\t      };\n\t    }\n\t\n\t    dialog(_config).show();\n\t  };\n\t}();\n\t\n\t__webpack_require__(47);\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)))\n\n/***/ },\n\n/***/ 47:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// js/login/index.js","var dialog = require('../common/dialog');\n\nrequire('spectre.css');\nrequire('./index.scss');\n\n$(document).ready(function() {\n  $('.page-header').on(\"click\", function() {\n    dialog('测试一下啦', function () {\n      dialog('6666', null, 3000);\n      notyf.alert('You must fill out the form before moving forward');\n    });\n  });\n  notyf.confirm('Your changes have been successfully saved!');\n});\n\n\n\n// WEBPACK FOOTER //\n// ./views/login/index.js","/*! artDialog v6.0.5 | https://github.com/aui/artDialog */ !(function() {\n\n  var __modules__ = {};\n\n  function require(id) {\n    var mod = __modules__[id];\n    var exports = 'exports';\n\n    if (typeof mod === 'object') {\n      return mod;\n    }\n\n    if (!mod[exports]) {\n      mod[exports] = {};\n      mod[exports] = mod.call(mod[exports], require, mod[exports], mod) || mod[exports];\n    }\n\n    return mod[exports];\n  }\n\n  function define(path, fn) {\n    __modules__[path] = fn;\n  }\n\n\n\n  define(\"jquery\", function() {\n    return jQuery;\n  });\n\n\n  /*!\n   * PopupJS\n   * Date: 2014-11-09\n   * https://github.com/aui/popupjs\n   * (c) 2009-2014 TangBin, http://www.planeArt.cn\n   *\n   * This is licensed under the GNU LGPL, version 2.1 or later.\n   * For details, see: http://www.gnu.org/licenses/lgpl-2.1.html\n   */\n\n  define(\"popup\", function(require) {\n\n    var $ = require(\"jquery\");\n\n    var _count = 0;\n    var _isIE6 = !('minWidth' in $('html')[0].style);\n    var _isFixed = !_isIE6;\n\n\n    function Popup() {\n\n      this.destroyed = false;\n\n\n      this.__popup = $('<div />')\n        /*使用 <dialog /> 元素可能导致 z-index 永远置顶的问题(chrome)*/\n        .css({\n          display: 'none',\n          position: 'absolute',\n          /*\n          left: 0,\n          top: 0,\n          bottom: 'auto',\n          right: 'auto',\n          margin: 0,\n          padding: 0,\n          border: '0 none',\n          background: 'transparent'\n          */\n          outline: 0\n        })\n        .attr('tabindex', '-1')\n        .html(this.innerHTML)\n        .appendTo('body');\n\n\n      this.__backdrop = this.__mask = $('<div />')\n        .css({\n          opacity: .7,\n          background: '#000'\n        });\n\n\n      // 使用 HTMLElement 作为外部接口使用，而不是 jquery 对象\n      // 统一的接口利于未来 Popup 移植到其他 DOM 库中\n      this.node = this.__popup[0];\n      this.backdrop = this.__backdrop[0];\n\n      _count++;\n    }\n\n\n    $.extend(Popup.prototype, {\n\n      /**\n       * 初始化完毕事件，在 show()、showModal() 执行\n       * @name Popup.prototype.onshow\n       * @event\n       */\n\n      /**\n       * 关闭事件，在 close() 执行\n       * @name Popup.prototype.onclose\n       * @event\n       */\n\n      /**\n       * 销毁前事件，在 remove() 前执行\n       * @name Popup.prototype.onbeforeremove\n       * @event\n       */\n\n      /**\n       * 销毁事件，在 remove() 执行\n       * @name Popup.prototype.onremove\n       * @event\n       */\n\n      /**\n       * 重置事件，在 reset() 执行\n       * @name Popup.prototype.onreset\n       * @event\n       */\n\n      /**\n       * 焦点事件，在 foucs() 执行\n       * @name Popup.prototype.onfocus\n       * @event\n       */\n\n      /**\n       * 失焦事件，在 blur() 执行\n       * @name Popup.prototype.onblur\n       * @event\n       */\n\n      /** 浮层 DOM 素节点[*] */\n      node: null,\n\n      /** 遮罩 DOM 节点[*] */\n      backdrop: null,\n\n      /** 是否开启固定定位[*] */\n      fixed: false,\n\n      /** 判断对话框是否删除[*] */\n      destroyed: true,\n\n      /** 判断对话框是否显示 */\n      open: false,\n\n      /** close 返回值 */\n      returnValue: '',\n\n      /** 是否自动聚焦 */\n      autofocus: true,\n\n      /** 对齐方式[*] */\n      align: 'bottom left',\n\n      /** 内部的 HTML 字符串 */\n      innerHTML: '',\n\n      /** CSS 类名 */\n      className: 'ui-popup',\n\n      /**\n       * 显示浮层\n       * @param   {HTMLElement, Event}  指定位置（可选）\n       */\n      show: function(anchor) {\n\n        if (this.destroyed) {\n          return this;\n        }\n\n        var that = this;\n        var popup = this.__popup;\n        var backdrop = this.__backdrop;\n\n        this.__activeElement = this.__getActive();\n\n        this.open = true;\n        this.follow = anchor || this.follow;\n\n\n        // 初始化 show 方法\n        if (!this.__ready) {\n\n          popup\n            .addClass(this.className)\n            .attr('role', this.modal ? 'alertdialog' : 'dialog')\n            .css('position', this.fixed ? 'fixed' : 'absolute');\n\n          if (!_isIE6) {\n            $(window).on('resize', $.proxy(this.reset, this));\n          }\n\n          // 模态浮层的遮罩\n          if (this.modal) {\n            var backdropCss = {\n              position: 'fixed',\n              left: 0,\n              top: 0,\n              width: '100%',\n              height: '100%',\n              overflow: 'hidden',\n              userSelect: 'none',\n              zIndex: this.zIndex || Popup.zIndex\n            };\n\n\n            popup.addClass(this.className + '-modal');\n\n\n            if (!_isFixed) {\n              $.extend(backdropCss, {\n                position: 'absolute',\n                width: $(window).width() + 'px',\n                height: $(document).height() + 'px'\n              });\n            }\n\n\n            backdrop\n              .css(backdropCss)\n              .attr({\n                tabindex: '0'\n              })\n              .on('focus', $.proxy(this.focus, this));\n\n            // 锁定 tab 的焦点操作\n            this.__mask = backdrop\n              .clone(true)\n              .attr('style', '')\n              .insertAfter(popup);\n\n            backdrop\n              .addClass(this.className + '-backdrop')\n              .insertBefore(popup);\n\n            this.__ready = true;\n          }\n\n\n          if (!popup.html()) {\n            popup.html(this.innerHTML);\n          }\n        }\n\n\n        popup\n          .addClass(this.className + '-show')\n          .show();\n\n        backdrop.show();\n\n\n        this.reset().focus();\n        this.__dispatchEvent('show');\n\n        return this;\n      },\n\n\n      /** 显示模态浮层。参数参见 show() */\n      showModal: function() {\n        this.modal = true;\n        return this.show.apply(this, arguments);\n      },\n\n\n      /** 关闭浮层 */\n      close: function(result) {\n\n        if (!this.destroyed && this.open) {\n\n          if (result !== undefined) {\n            this.returnValue = result;\n          }\n\n          this.__popup.hide().removeClass(this.className + '-show');\n          this.__backdrop.hide();\n          this.open = false;\n          this.blur(); // 恢复焦点，照顾键盘操作的用户\n          this.__dispatchEvent('close');\n        }\n\n        return this;\n      },\n\n\n      /** 销毁浮层 */\n      remove: function() {\n\n        if (this.destroyed) {\n          return this;\n        }\n\n        this.__dispatchEvent('beforeremove');\n\n        if (Popup.current === this) {\n          Popup.current = null;\n        }\n\n\n        // 从 DOM 中移除节点\n        this.__popup.remove();\n        this.__backdrop.remove();\n        this.__mask.remove();\n\n\n        if (!_isIE6) {\n          $(window).off('resize', this.reset);\n        }\n\n\n        this.__dispatchEvent('remove');\n\n        for (var i in this) {\n          delete this[i];\n        }\n\n        return this;\n      },\n\n\n      /** 重置位置 */\n      reset: function() {\n\n        var elem = this.follow;\n\n        if (elem) {\n          this.__follow(elem);\n        } else {\n          this.__center();\n        }\n\n        this.__dispatchEvent('reset');\n\n        return this;\n      },\n\n\n      /** 让浮层获取焦点 */\n      focus: function() {\n\n        var node = this.node;\n        var popup = this.__popup;\n        var current = Popup.current;\n        var index = this.zIndex = Popup.zIndex++;\n\n        if (current && current !== this) {\n          current.blur(false);\n        }\n\n        // 检查焦点是否在浮层里面\n        if (!$.contains(node, this.__getActive())) {\n          var autofocus = popup.find('[autofocus]')[0];\n\n          if (!this._autofocus && autofocus) {\n            this._autofocus = true;\n          } else {\n            autofocus = node;\n          }\n\n          this.__focus(autofocus);\n        }\n\n        // 设置叠加高度\n        popup.css('zIndex', index);\n        //this.__backdrop.css('zIndex', index);\n\n        Popup.current = this;\n        popup.addClass(this.className + '-focus');\n\n        this.__dispatchEvent('focus');\n\n        return this;\n      },\n\n\n      /** 让浮层失去焦点。将焦点退还给之前的元素，照顾视力障碍用户 */\n      blur: function() {\n\n        var activeElement = this.__activeElement;\n        var isBlur = arguments[0];\n\n\n        if (isBlur !== false) {\n          this.__focus(activeElement);\n        }\n\n        this._autofocus = false;\n        this.__popup.removeClass(this.className + '-focus');\n        this.__dispatchEvent('blur');\n\n        return this;\n      },\n\n\n      /**\n       * 添加事件\n       * @param   {String}    事件类型\n       * @param   {Function}  监听函数\n       */\n      addEventListener: function(type, callback) {\n        this.__getEventListener(type).push(callback);\n        return this;\n      },\n\n\n      /**\n       * 删除事件\n       * @param   {String}    事件类型\n       * @param   {Function}  监听函数\n       */\n      removeEventListener: function(type, callback) {\n        var listeners = this.__getEventListener(type);\n        for (var i = 0; i < listeners.length; i++) {\n          if (callback === listeners[i]) {\n            listeners.splice(i--, 1);\n          }\n        }\n        return this;\n      },\n\n\n      // 获取事件缓存\n      __getEventListener: function(type) {\n        var listener = this.__listener;\n        if (!listener) {\n          listener = this.__listener = {};\n        }\n        if (!listener[type]) {\n          listener[type] = [];\n        }\n        return listener[type];\n      },\n\n\n      // 派发事件\n      __dispatchEvent: function(type) {\n        var listeners = this.__getEventListener(type);\n\n        if (this['on' + type]) {\n          this['on' + type]();\n        }\n\n        for (var i = 0; i < listeners.length; i++) {\n          listeners[i].call(this);\n        }\n      },\n\n\n      // 对元素安全聚焦\n      __focus: function(elem) {\n        // 防止 iframe 跨域无权限报错\n        // 防止 IE 不可见元素报错\n        try {\n          // ie11 bug: iframe 页面点击会跳到顶部\n          if (this.autofocus && !/^iframe$/i.test(elem.nodeName)) {\n            elem.focus();\n          }\n        } catch (e) {}\n      },\n\n\n      // 获取当前焦点的元素\n      __getActive: function() {\n        try { // try: ie8~9, iframe #26\n          var activeElement = document.activeElement;\n          var contentDocument = activeElement.contentDocument;\n          var elem = contentDocument && contentDocument.activeElement || activeElement;\n          return elem;\n        } catch (e) {}\n      },\n\n\n      // 居中浮层\n      __center: function() {\n\n        var popup = this.__popup;\n        var $window = $(window);\n        var $document = $(document);\n        var fixed = this.fixed;\n        var dl = fixed ? 0 : $document.scrollLeft();\n        var dt = fixed ? 0 : $document.scrollTop();\n        var ww = $window.width();\n        var wh = $window.height();\n        var ow = popup.width();\n        var oh = popup.height();\n        var left = (ww - ow) / 2 + dl;\n        var top = (wh - oh) * 382 / 1000 + dt; // 黄金比例\n        var style = popup[0].style;\n\n\n        style.left = Math.max(parseInt(left), dl) + 'px';\n        style.top = Math.max(parseInt(top), dt) + 'px';\n      },\n\n\n      // 指定位置 @param    {HTMLElement, Event}  anchor\n      __follow: function(anchor) {\n\n        var $elem = anchor.parentNode && $(anchor);\n        var popup = this.__popup;\n\n\n        if (this.__followSkin) {\n          popup.removeClass(this.__followSkin);\n        }\n\n\n        // 隐藏元素不可用\n        if ($elem) {\n          var o = $elem.offset();\n          if (o.left * o.top < 0) {\n            return this.__center();\n          }\n        }\n\n        var that = this;\n        var fixed = this.fixed;\n\n        var $window = $(window);\n        var $document = $(document);\n        var winWidth = $window.width();\n        var winHeight = $window.height();\n        var docLeft = $document.scrollLeft();\n        var docTop = $document.scrollTop();\n\n\n        var popupWidth = popup.width();\n        var popupHeight = popup.height();\n        var width = $elem ? $elem.outerWidth() : 0;\n        var height = $elem ? $elem.outerHeight() : 0;\n        var offset = this.__offset(anchor);\n        var x = offset.left;\n        var y = offset.top;\n        var left = fixed ? x - docLeft : x;\n        var top = fixed ? y - docTop : y;\n\n\n        var minLeft = fixed ? 0 : docLeft;\n        var minTop = fixed ? 0 : docTop;\n        var maxLeft = minLeft + winWidth - popupWidth;\n        var maxTop = minTop + winHeight - popupHeight;\n\n\n        var css = {};\n        var align = this.align.split(' ');\n        var className = this.className + '-';\n        var reverse = {\n          top: 'bottom',\n          bottom: 'top',\n          left: 'right',\n          right: 'left'\n        };\n        var name = {\n          top: 'top',\n          bottom: 'top',\n          left: 'left',\n          right: 'left'\n        };\n\n\n        var temp = [{\n          top: top - popupHeight,\n          bottom: top + height,\n          left: left - popupWidth,\n          right: left + width\n        }, {\n          top: top,\n          bottom: top - popupHeight + height,\n          left: left,\n          right: left - popupWidth + width\n        }];\n\n\n        var center = {\n          left: left + width / 2 - popupWidth / 2,\n          top: top + height / 2 - popupHeight / 2\n        };\n\n\n        var range = {\n          left: [minLeft, maxLeft],\n          top: [minTop, maxTop]\n        };\n\n\n        // 超出可视区域重新适应位置\n        $.each(align, function(i, val) {\n\n          // 超出右或下边界：使用左或者上边对齐\n          if (temp[i][val] > range[name[val]][1]) {\n            val = align[i] = reverse[val];\n          }\n\n          // 超出左或右边界：使用右或者下边对齐\n          if (temp[i][val] < range[name[val]][0]) {\n            align[i] = reverse[val];\n          }\n\n        });\n\n\n        // 一个参数的情况\n        if (!align[1]) {\n          name[align[1]] = name[align[0]] === 'left' ? 'top' : 'left';\n          temp[1][align[1]] = center[name[align[1]]];\n        }\n\n\n        //添加follow的css, 为了给css使用\n        className += align.join('-') + ' ' + this.className + '-follow';\n\n        that.__followSkin = className;\n\n\n        if ($elem) {\n          popup.addClass(className);\n        }\n\n\n        css[name[align[0]]] = parseInt(temp[0][align[0]]);\n        css[name[align[1]]] = parseInt(temp[1][align[1]]);\n        popup.css(css);\n\n      },\n\n\n      // 获取元素相对于页面的位置（包括iframe内的元素）\n      // 暂时不支持两层以上的 iframe 套嵌\n      __offset: function(anchor) {\n\n        var isNode = anchor.parentNode;\n        var offset = isNode ? $(anchor).offset() : {\n          left: anchor.pageX,\n          top: anchor.pageY\n        };\n\n\n        anchor = isNode ? anchor : anchor.target;\n        var ownerDocument = anchor.ownerDocument;\n        var defaultView = ownerDocument.defaultView || ownerDocument.parentWindow;\n\n        if (defaultView == window) { // IE <= 8 只能使用两个等于号\n          return offset;\n        }\n\n        // {Element: Ifarme}\n        var frameElement = defaultView.frameElement;\n        var $ownerDocument = $(ownerDocument);\n        var docLeft = $ownerDocument.scrollLeft();\n        var docTop = $ownerDocument.scrollTop();\n        var frameOffset = $(frameElement).offset();\n        var frameLeft = frameOffset.left;\n        var frameTop = frameOffset.top;\n\n        return {\n          left: offset.left + frameLeft - docLeft,\n          top: offset.top + frameTop - docTop\n        };\n      }\n\n    });\n\n\n    /** 当前叠加高度 */\n    Popup.zIndex = 1024;\n\n\n    /** 顶层浮层的实例 */\n    Popup.current = null;\n\n\n    return Popup;\n\n  });\n\n  // artDialog - 默认配置\n  define(\"dialog-config\", {\n\n    /* -----已注释的配置继承自 popup.js，仍可以再这里重新定义它----- */\n\n    // 对齐方式\n    //align: 'bottom left',\n\n    // 是否固定定位\n    //fixed: false,\n\n    // 对话框叠加高度值(重要：此值不能超过浏览器最大限制)\n    //zIndex: 1024,\n\n    // 设置遮罩背景颜色\n    backdropBackground: '#000',\n\n    // 设置遮罩透明度\n    backdropOpacity: 0.7,\n\n    // 消息内容\n    content: '<span class=\"ui-dialog-loading\">Loading..</span>',\n\n    // 标题\n    title: '',\n\n    // 对话框状态栏区域 HTML 代码\n    statusbar: '',\n\n    // 自定义按钮\n    button: null,\n\n    // 确定按钮回调函数\n    ok: null,\n\n    // 取消按钮回调函数\n    cancel: null,\n\n    // 确定按钮文本\n    okValue: 'ok',\n\n    // 取消按钮文本\n    cancelValue: 'cancel',\n\n    cancelDisplay: true,\n\n    // 内容宽度\n    width: '',\n\n    // 内容高度\n    height: '',\n\n    // 内容与边界填充距离\n    padding: '',\n\n    // 对话框自定义 className\n    skin: '',\n\n    // 是否支持快捷关闭（点击遮罩层自动关闭）\n    quickClose: false,\n\n    // css 文件路径，留空则不会使用 js 自动加载样式\n    // 注意：css 只允许加载一个\n    //cssUri: require('./index.css'),\n\n    // 模板（使用 table 解决 IE7 宽度自适应的 BUG）\n    // js 使用 i=\"***\" 属性识别结构，其余的均可自定义\n    innerHTML: '<div i=\"dialog\" class=\"ui-dialog\">' +\n      '<div class=\"ui-dialog-arrow-a\"></div>' +\n      '<div class=\"ui-dialog-arrow-b\"></div>' +\n      '<table class=\"ui-dialog-grid\">' +\n      '<tr>' +\n      '<td i=\"header\" class=\"ui-dialog-header\">' +\n      '<button i=\"close\" class=\"ui-dialog-close\">&#215;</button>' +\n      '<div i=\"title\" class=\"ui-dialog-title\"></div>' +\n      '</td>' +\n      '</tr>' +\n      '<tr>' +\n      '<td i=\"body\" class=\"ui-dialog-body\">' +\n      '<div i=\"content\" class=\"ui-dialog-content\"></div>' +\n      '</td>' +\n      '</tr>' +\n      '<tr>' +\n      '<td i=\"footer\" class=\"ui-dialog-footer\">' +\n      '<div i=\"statusbar\" class=\"ui-dialog-statusbar\"></div>' +\n      '<div i=\"button\" class=\"ui-dialog-button\"></div>' +\n      '</td>' +\n      '</tr>' +\n      '</table>' +\n      '</div>'\n\n  });\n\n  /*!\n   * artDialog\n   * Date: 2014-11-09\n   * https://github.com/aui/artDialog\n   * (c) 2009-2014 TangBin, http://www.planeArt.cn\n   *\n   * This is licensed under the GNU LGPL, version 2.1 or later.\n   * For details, see: http://www.gnu.org/licenses/lgpl-2.1.html\n   */\n  define(\"dialog\", function(require) {\n\n    var $ = require(\"jquery\");\n    var Popup = require(\"popup\");\n    var defaults = require(\"dialog-config\");\n    //var css = defaults.cssUri;\n\n\n    // css loader: RequireJS & SeaJS\n    // if (css) {\n    //     var fn = require[require.toUrl ? 'toUrl' : 'resolve'];\n    //     if (fn) {\n    //         css = fn(css);\n    //         css = '<link rel=\"stylesheet\" href=\"' + css + '\" />';\n    //         if ($('base')[0]) {\n    //             $('base').before(css);\n    //         } else {\n    //             $('head').append(css);\n    //         }\n    //     }\n    // }\n\n\n    var _count = 0;\n    var _expando = new Date() - 0; // Date.now()\n    var _isIE6 = !('minWidth' in $('html')[0].style);\n    var _isMobile = 'createTouch' in document && !('onmousemove' in document) ||\n      /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\n    var _isFixed = !_isIE6 && !_isMobile;\n\n\n    var artDialog = function(options, ok, cancel) {\n\n      var originalOptions = options = options || {};\n\n\n      if (typeof options === 'string' || options.nodeType === 1) {\n\n        options = {\n          content: options,\n          fixed: !_isMobile\n        };\n      }\n\n\n      options = $.extend(true, {}, artDialog.defaults, options);\n      options.original = originalOptions;\n\n      var id = options.id = options.id || _expando + _count;\n      var api = artDialog.get(id);\n\n\n      // 如果存在同名的对话框对象，则直接返回\n      if (api) {\n        return api.focus();\n      }\n\n\n      // 目前主流移动设备对fixed支持不好，禁用此特性\n      if (!_isFixed) {\n        options.fixed = false;\n      }\n\n\n      // 快捷关闭支持：点击对话框外快速关闭对话框\n      if (options.quickClose) {\n        options.modal = true;\n        options.backdropOpacity = 0;\n      }\n\n\n      // 按钮组\n      if (!$.isArray(options.button)) {\n        options.button = [];\n      }\n\n\n      // 取消按钮\n      if (cancel !== undefined) {\n        options.cancel = cancel;\n      }\n\n      if (options.cancel) {\n        options.button.push({\n          id: 'cancel',\n          value: options.cancelValue,\n          callback: options.cancel,\n          display: options.cancelDisplay\n        });\n      }\n\n\n      // 确定按钮\n      if (ok !== undefined) {\n        options.ok = ok;\n      }\n\n      if (options.ok) {\n        options.button.push({\n          id: 'ok',\n          value: options.okValue,\n          callback: options.ok,\n          autofocus: true\n        });\n      }\n\n\n      return artDialog.list[id] = new artDialog.create(options);\n    };\n\n    var popup = function() {};\n    popup.prototype = Popup.prototype;\n    var prototype = artDialog.prototype = new popup();\n\n    artDialog.create = function(options) {\n      var that = this;\n\n      $.extend(this, new Popup());\n\n      var originalOptions = options.original;\n      var $popup = $(this.node).html(options.innerHTML);\n      var $backdrop = $(this.backdrop);\n\n      this.options = options;\n      this._popup = $popup;\n\n\n      $.each(options, function(name, value) {\n        if (typeof that[name] === 'function') {\n          that[name](value);\n        } else {\n          that[name] = value;\n        }\n      });\n\n\n      // 更新 zIndex 全局配置\n      if (options.zIndex) {\n        Popup.zIndex = options.zIndex;\n      }\n\n\n      // 设置 ARIA 信息\n      $popup.attr({\n        'aria-labelledby': this._$('title')\n          .attr('id', 'title:' + this.id).attr('id'),\n        'aria-describedby': this._$('content')\n          .attr('id', 'content:' + this.id).attr('id')\n      });\n\n\n      // 关闭按钮\n      this._$('close')\n        .css('display', this.cancel === false ? 'none' : '')\n        .attr('title', this.cancelValue)\n        .on('click', function(event) {\n          that._trigger('cancel');\n          event.preventDefault();\n        });\n\n\n      // 添加视觉参数\n      this._$('dialog').addClass(this.skin);\n      this._$('body').css('padding', this.padding);\n\n\n      // 点击任意空白处关闭对话框\n      if (options.quickClose) {\n        $backdrop\n          .on(\n            'onmousedown' in document ? 'mousedown' : 'click',\n            function() {\n              that._trigger('cancel');\n              return false; // 阻止抢夺焦点\n            });\n      }\n\n\n      // 遮罩设置\n      this.addEventListener('show', function() {\n        $backdrop.css({\n          opacity: 0,\n          background: options.backdropBackground\n        }).animate({\n          opacity: options.backdropOpacity\n        }, 150);\n      });\n\n\n      // ESC 快捷键关闭对话框\n      this._esc = function(event) {\n        var target = event.target;\n        var nodeName = target.nodeName;\n        var rinput = /^input|textarea$/i;\n        var isTop = Popup.current === that;\n        var keyCode = event.keyCode;\n\n        // 避免输入状态中 ESC 误操作关闭\n        if (!isTop || rinput.test(nodeName) && target.type !== 'button') {\n          return;\n        }\n\n        if (keyCode === 27) {\n          that._trigger('cancel');\n        }\n      };\n\n      $(document).on('keydown', this._esc);\n      this.addEventListener('remove', function() {\n        $(document).off('keydown', this._esc);\n        delete artDialog.list[this.id];\n      });\n\n\n      _count++;\n\n      artDialog.oncreate(this);\n\n      return this;\n    };\n\n\n    artDialog.create.prototype = prototype;\n\n\n\n    $.extend(prototype, {\n\n      /**\n       * 显示对话框\n       * @name artDialog.prototype.show\n       * @param   {HTMLElement Object, Event Object}  指定位置（可选）\n       */\n\n      /**\n       * 显示对话框（模态）\n       * @name artDialog.prototype.showModal\n       * @param   {HTMLElement Object, Event Object}  指定位置（可选）\n       */\n\n      /**\n       * 关闭对话框\n       * @name artDialog.prototype.close\n       * @param   {String, Number}    返回值，可被 onclose 事件收取（可选）\n       */\n\n      /**\n       * 销毁对话框\n       * @name artDialog.prototype.remove\n       */\n\n      /**\n       * 重置对话框位置\n       * @name artDialog.prototype.reset\n       */\n\n      /**\n       * 让对话框聚焦（同时置顶）\n       * @name artDialog.prototype.focus\n       */\n\n      /**\n       * 让对话框失焦（同时置顶）\n       * @name artDialog.prototype.blur\n       */\n\n      /**\n       * 添加事件\n       * @param   {String}    事件类型\n       * @param   {Function}  监听函数\n       * @name artDialog.prototype.addEventListener\n       */\n\n      /**\n       * 删除事件\n       * @param   {String}    事件类型\n       * @param   {Function}  监听函数\n       * @name artDialog.prototype.removeEventListener\n       */\n\n      /**\n       * 对话框显示事件，在 show()、showModal() 执行\n       * @name artDialog.prototype.onshow\n       * @event\n       */\n\n      /**\n       * 关闭事件，在 close() 执行\n       * @name artDialog.prototype.onclose\n       * @event\n       */\n\n      /**\n       * 销毁前事件，在 remove() 前执行\n       * @name artDialog.prototype.onbeforeremove\n       * @event\n       */\n\n      /**\n       * 销毁事件，在 remove() 执行\n       * @name artDialog.prototype.onremove\n       * @event\n       */\n\n      /**\n       * 重置事件，在 reset() 执行\n       * @name artDialog.prototype.onreset\n       * @event\n       */\n\n      /**\n       * 焦点事件，在 foucs() 执行\n       * @name artDialog.prototype.onfocus\n       * @event\n       */\n\n      /**\n       * 失焦事件，在 blur() 执行\n       * @name artDialog.prototype.onblur\n       * @event\n       */\n\n\n      /**\n       * 设置内容\n       * @param    {String, HTMLElement}   内容\n       */\n      content: function(html) {\n\n        var $content = this._$('content');\n\n        // HTMLElement\n        if (typeof html === 'object') {\n          html = $(html);\n          $content.empty('').append(html.show());\n          this.addEventListener('beforeremove', function() {\n            $('body').append(html.hide());\n          });\n          // String\n        } else {\n          $content.html(html);\n        }\n\n        return this.reset();\n      },\n\n\n      /**\n       * 设置标题\n       * @param    {String}   标题内容\n       */\n      title: function(text) {\n        this._$('title').text(text);\n        this._$('header')[text ? 'show' : 'hide']();\n        return this;\n      },\n\n\n      /** 设置宽度 */\n      width: function(value) {\n        this._$('content').css('width', value);\n        return this.reset();\n      },\n\n\n      /** 设置高度 */\n      height: function(value) {\n        this._$('content').css('height', value);\n        return this.reset();\n      },\n\n\n      /**\n       * 设置按钮组\n       * @param   {Array, String}\n       * Options: value, callback, autofocus, disabled\n       */\n      button: function(args) {\n        args = args || [];\n        var that = this;\n        var html = '';\n        var number = 0;\n        this.callbacks = {};\n\n\n        if (typeof args === 'string') {\n          html = args;\n          number++;\n        } else {\n          $.each(args, function(i, val) {\n\n            var id = val.id = val.id || val.value;\n            var style = '';\n            that.callbacks[id] = val.callback;\n\n\n            if (val.display === false) {\n              style = ' style=\"display:none\"';\n            } else {\n              number++;\n            }\n\n            html +=\n              '<button' +\n              ' type=\"button\"' +\n              ' i-id=\"' + id + '\"' +\n              style +\n              (val.disabled ? ' disabled' : '') +\n              (val.autofocus ? ' autofocus class=\"ui-dialog-autofocus\"' : '') +\n              '>' +\n              val.value +\n              '</button>';\n\n            that._$('button')\n              .on('click', '[i-id=' + id + ']', function(event) {\n                var $this = $(this);\n                if (!$this.attr('disabled')) { // IE BUG\n                  that._trigger(id);\n                }\n\n                event.preventDefault();\n              });\n\n          });\n        }\n\n        this._$('button').html(html);\n        this._$('footer')[number ? 'show' : 'hide']();\n\n        return this;\n      },\n\n\n      statusbar: function(html) {\n        this._$('statusbar')\n          .html(html)[html ? 'show' : 'hide']();\n\n        return this;\n      },\n\n\n      _$: function(i) {\n        return this._popup.find('[i=' + i + ']');\n      },\n\n\n      // 触发按钮回调函数\n      _trigger: function(id) {\n        var fn = this.callbacks[id];\n\n        return typeof fn !== 'function' || fn.call(this) !== false ?\n          this.close().remove() : this;\n      }\n\n    });\n\n\n\n    artDialog.oncreate = $.noop;\n\n\n\n    /** 获取最顶层的对话框API */\n    artDialog.getCurrent = function() {\n      return Popup.current;\n    };\n\n\n\n    /**\n     * 根据 ID 获取某对话框 API\n     * @param    {String}    对话框 ID\n     * @return   {Object}    对话框 API (实例)\n     */\n    artDialog.get = function(id) {\n      return id === undefined ?\n        artDialog.list :\n        artDialog.list[id];\n    };\n\n    artDialog.list = {};\n\n\n\n    /**\n     * 默认配置\n     */\n    artDialog.defaults = defaults;\n\n\n\n    return artDialog;\n\n  });\n\n\n  var dialog = window.dialog = require(\"dialog\");\n\n  module.exports = function(text, fn, time) {\n\n    var _config = {\n      title: '提示',\n      content: text,\n      quickClose: true\n    };\n\n    if (fn !== undefined && fn !== null) {\n      _config.okValue = '确定';\n      _config.cancelValue = '取消';\n      _config.ok = function() {\n        fn()\n      };\n      _config.cancel = function() {};\n    } else {\n      _config.title = null ;\n    }\n\n    if (time !== undefined) {\n      _config.onshow = function() {\n        var that = this;\n        setTimeout(function() {\n          that.close().remove();\n        }, time);\n      }\n    }\n\n    dialog(_config).show()\n  }\n\n})();\n\nrequire('./index.css')\n\n\n\n// WEBPACK FOOTER //\n// ./views/common/dialog/index.js"],"sourceRoot":""}